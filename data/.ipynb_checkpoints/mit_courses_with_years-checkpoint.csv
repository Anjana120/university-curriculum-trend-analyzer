title,description,department,year
6.100A Introduction to Computer Science Programming in Python,"6.100A Introduction to Computer Science Programming in Python(,); first half of termPrereq: NoneUnits: 2-0-4Credit cannot also be received for6.100LURL:https://introcomp.mit.edu/spring25Ends Mar 21.Lecture:MW3-4.30(26-100)Recitation:F10(5-134) orF11(5-134,24-121) orF12(24-121) orF1(5-134) orF2(5-134) orF1(5-217) orF2(5-217)Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2022
6.100B Introduction to Computational Thinking and Data Science,"6.100B Introduction to Computational Thinking and Data Science(,); second half of termPrereq:6.100Aor permission of instructorUnits: 2-0-4Credit cannot also be received for9.C20,16.C20,18.C20,CSE.C20URL:https://introcomp.mit.edu/spring25Begins Mar 31.Lecture:MW3-4.30(26-100)Recitation:F10(5-134) orF11(5-134,24-121) orF12(24-121) orF1(5-134) orF2(5-134) orF1(5-217) orF2(5-217)Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2022
6.100L Introduction to Computer Science and Programming,"6.100L Introduction to Computer Science and Programming(,)Prereq: NoneUnits: 2-0-4Credit cannot also be received for6.100AURL:https://introcomp.mit.edu/6.100L_sp25Lecture:MW3-4.30(34-101)Recitation:F10(32-123)Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Lectures are viewed outside of class; in-class time is dedicated to problem-solving and discussion. Combination of 6.100L and 6.100B or 16.C20 counts as REST subject.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2022
6.1010 Fundamentals of Programming,"6.1010 Fundamentals of Programming(,)Prereq:6.100AUnits: 2-4-6Lecture:MW9(32-124) orMW10(32-124,32-144) orMW11(56-154,37-212) orMW1(4-163,32-124) orMW2(4-163) orMW3(3-270) orMW12(32-124)Lab:F10-1(32-044) orF2-5(32-044)+finalIntroduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion. Â Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.Fall:R. MillerSpring:A. HartzNo textbook information available",EECS,2022
6.1020 Software Construction,"6.1020 Software Construction()Prereq:6.1010Units: 3-0-12Lecture:TR9.30-11(26-100)+finalIntroduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.M. GoldmanNo required or recommended textbooks",EECS,2022
6.1040 Software Design,"6.1040 Software Design()Prereq:6.1020and6.1200Units: 4-0-14Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.A. Satyanarayan",EECS,2022
6.1060 Software Performance Engineering,"6.1060 Software Performance Engineering()Prereq:6.1020,6.1210, and6.1910Units: 3-12-3Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.C. Leiserson",EECS,2022
6.5060 Algorithm Engineering,"6.5060 Algorithm Engineering()Prereq:6.1060and6.1220Units: 3-0-9Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.Staff",EECS,2022
6.5080 Multicore Programming,"6.5080 Multicore Programming()(Subject meets with6.5081)Prereq:6.1210Units: 4-0-8Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.N. Shavit",EECS,2022
6.5081 Multicore Programming,"6.5081 Multicore Programming()(Subject meets with6.5080)Prereq:6.1210Units: 4-0-8Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.Staff",EECS,2022
6.1100 Computer Language Engineering,"6.1100 Computer Language Engineering()Prereq:6.1020and6.1910Units: 4-4-4Lecture:MWF11(32-123)Recitation:TR12(32-155)Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.M. RinardNo textbook information available",EECS,2022
6.1120 Dynamic Computer Language Engineering,"6.1120 Dynamic Computer Language Engineering()Prereq:6.1020or6.1910Units: 4-4-4Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.M. Rinard",EECS,2022
6.5110 Foundations of Program Analysis,"6.5110 Foundations of Program Analysis()Not offered regularly; consult departmentPrereq:6.1100Units: 3-0-9Presents major principles and techniques for program analysis. Includes formal semantics, type systems and type-based program analysis, abstract interpretation and model checking and synthesis. Emphasis on Haskell and Ocaml, but no prior experience in these languages is assumed. Student assignments include implementing of techniques covered in class, including building simple verifiers.A. Solar-Lezama",EECS,2022
6.5120 Formal Reasoning About Programs,"6.5120 Formal Reasoning About Programs()Prereq:6.1020and6.1200Units: 3-0-9Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.A. Chlipala",EECS,2022
6.5150 Large-scale Symbolic Systems,"6.5150 Large-scale Symbolic Systems()(Subject meets with6.5151)Prereq:6.4100or permission of instructorUnits: 3-0-9Lecture:MWF2(35-225)Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.G. J. SussmanNo textbook information available",EECS,2022
6.5151 Large-scale Symbolic Systems,"6.5151 Large-scale Symbolic Systems()(Subject meets with6.5150)Prereq:6.4100or permission of instructorUnits: 3-0-9Lecture:MWF2(35-225)Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.G. SussmanTextbooks (Spring 2025)",EECS,2022
6.5160[J] Classical Mechanics: A Computational Approach,"6.5160[J] Classical Mechanics: A Computational Approach()(Same subject as8.351[J],12.620[J])Prereq:Physics I (GIR),18.03, and permission of instructorUnits: 3-3-6Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. PoincarÃ© integral invariants, PoincarÃ©-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.J. Wisdom, G. J. Sussman",EECS,2022
6.1200[J] Mathematics for Computer Science,"6.1200[J] Mathematics for Computer Science(,)(Same subject as18.062[J])Prereq:Calculus I (GIR)Units: 5-0-7Lecture:TR2.30-4(26-100)Recitation:WF10(38-166,36-155) orWF11(38-166,36-155,26-168) orWF12(38-166,36-156,26-168) orWF1(38-166,36-156,35-310) orWF2(38-166,36-156,35-308) orWF3(38-166,36-156)+finalElementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.Fall:Z. AbelSpring:Z. AbelNo textbook information available",EECS,2022
6.120A Discrete Mathematics and Proof for Computer Science,"6.120A Discrete Mathematics and Proof for Computer Science(); second half of termPrereq:Calculus I (GIR)Units: 3-0-3Begins Mar 31.Lecture:TR1-2.30(32-144)Recitation:WF1(13-3101) orWF2(13-3101)+finalSubset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.P. JailletNo textbook information available",EECS,2022
6.1210 Introduction to Algorithms,"6.1210 Introduction to Algorithms(,)Prereq:6.100Aand (6.1200or (6.120Aand (6.3700,6.3800,18.05, or18.600)))Units: 5-0-7Lecture:TR11-12.30(26-100)Recitation:WF10(34-304,34-303,36-156) orWF11(34-304,34-303,34-301) orWF12(34-304,34-301) orWF1(34-304,34-303,34-301) orWF2(34-304,34-303,34-301) orWF3(34-304,34-301) orWF4(34-304) orWF10(36-153) orWF4(36-155)+finalIntroduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems. Enrollment may be limited.Fall:B. ChapmanSpring:B. ChapmanNo textbook information available",EECS,2022
6.1220[J] Design and Analysis of Algorithms,"6.1220[J] Design and Analysis of Algorithms(,)(Same subject as18.410[J])Prereq:6.1200and6.1210Units: 4-0-8Lecture:TR11-12.30(32-123)Recitation:F9(36-112) orF10(36-112) orF11(36-112) orF12(36-112) orF1(36-112) orF2(36-112) orF3(36-112) orF10(24-121) orF11(4-265) orF12(4-265) orF1(4-265) orF2(24-121) orF3(24-121)+finalTechniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.Fall:S. RaghuramanSpring:S. RaghuramanTextbooks (Spring 2025)",EECS,2022
6.1400[J] Computability and Complexity Theory,"6.1400[J] Computability and Complexity Theory()(Same subject as18.400[J])Prereq: (6.1200and6.1210) or permission of instructorUnits: 4-0-8Lecture:TR2.30-4(37-212)Recitation:F11(4-257) orF1(24-121)+finalMathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.R. WilliamsTextbooks (Spring 2025)",EECS,2022
6.1420 Fixed Parameter and Fine-grained Computation,"6.1420 Fixed Parameter and Fine-grained Computation()Prereq:6.1200,6.1210, and (6.1220,6.1400, or18.404)Units: 3-0-9An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.V. Vassilevska Williams",EECS,2022
6.5210[J] Advanced Algorithms,"6.5210[J] Advanced Algorithms()(Same subject as18.415[J])Prereq:6.1220and (6.1200,6.3700, or18.600)Units: 5-0-7First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.D. Karger",EECS,2022
6.5220[J] Randomized Algorithms,"6.5220[J] Randomized Algorithms()(Same subject as18.416[J])Prereq: (6.1200or6.3700) and (6.1220or6.5210)Units: 5-0-7Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.Staff",EECS,2022
6.5230 Advanced Data Structures,6.5230 Advanced Data Structures()Prereq:6.1220Units: 3-0-9More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.Staff,EECS,2022
6.5240 Sublinear Time Algorithms,"6.5240 Sublinear Time Algorithms()Prereq:6.1220or permission of instructorUnits: 3-0-9Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.R. Rubinfeld",EECS,2022
6.5250[J] Distributed Algorithms,"6.5250[J] Distributed Algorithms()(Same subject as18.437[J])Prereq:6.1220Units: 3-0-9Design and analysis of algorithms, emphasizing those suitable for use in distributed networks. Covers various topics includingÂ distributed graph algorithms, locality constraints,Â bandwidth limitations and communication complexity,Â process synchronization, allocation of computational resources, fault tolerance, and asynchrony. No background in distributed systems required.Staff",EECS,2022
"6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra","6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra()Prereq:6.1220or permission of instructorUnits: 3-0-9Lecture:TR11-12.30(32-082)Covers discrete geometry and algorithms underlying the reconfiguration of foldable structures, with applications to robotics, manufacturing, and biology. Linkages made from one-dimensional rods connected by hinges: constructing polynomial curves, characterizing rigidity, characterizing unfoldable versus locked, protein folding. Folding two-dimensional paper (origami): characterizing flat foldability, algorithmic origami design, one-cut magic trick. Unfolding and folding three-dimensional polyhedra: edge unfolding, vertex unfolding, gluings, Alexandrov's Theorem, hinged dissections.E. DemaineTextbooks (Spring 2025)",EECS,2022
6.5320 Geometric Computing,"6.5320 Geometric Computing()Prereq:6.1220Units: 3-0-9Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.Staff",EECS,2022
6.5340 Topics in Algorithmic Game Theory,"6.5340 Topics in Algorithmic Game Theory()Not offered regularly; consult departmentPrereq:6.1210or6.1220Units: 3-0-9Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.K. Daskalakis",EECS,2022
6.5350 Matrix Multiplication and Graph Algorithms,"6.5350 Matrix Multiplication and Graph Algorithms()Prereq:6.1220Units: 3-0-9Lecture:TR11-12.30(45-102)Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.V. Vassilevska WilliamsNo textbook information available",EECS,2022
6.5400[J] Theory of Computation,"6.5400[J] Theory of Computation()(Same subject as18.4041[J])(Subject meets with18.404)Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.M. Sipser",EECS,2022
6.5410[J] Advanced Complexity Theory,"6.5410[J] Advanced Complexity Theory()(Same subject as18.405[J])Prereq:18.404Units: 3-0-9Lecture:TR11-12.30(4-163)Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.D. MinzerNo textbook information available",EECS,2022
6.5420 Randomness and Computation,"6.5420 Randomness and Computation()Prereq:6.1220and18.4041Units: 3-0-9The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.R. Rubinfeld",EECS,2022
6.5430 Quantum Complexity Theory,"6.5430 Quantum Complexity Theory()Prereq:6.1400,18.4041, and18.435Units: 3-0-9Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.Staff",EECS,2022
6.1600 Foundations of Computer Security,"6.1600 Foundations of Computer Security()Prereq: (6.1210and (6.1800or6.1810)) or permission of instructorUnits: 4-0-8Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.S. Devadas",EECS,2022
6.5610 Applied Cryptography,"6.5610 Applied Cryptography()Prereq:6.1200and (6.1800or6.1810)Units: 4-0-8Lecture:MW11-12.30(6-120)Recitation:F11(1-190)Covers advanced applications of cryptography, implementation of cryptographic primitives, and cryptanalysis. Topics may include: proof systems; zero knowledge; secret sharing; multiparty computation; fully homomorphic encryption; electronic voting; design of block ciphers and hash functions; elliptic-curve and lattice-based cryptosystems; and algorithms for collision-finding, discrete-log, and factoring. Assignments include a final group project. Topics may vary from year to year.Y. KalaiNo textbook information available",EECS,2022
6.5620[J] Foundations of Cryptography,"6.5620[J] Foundations of Cryptography()(Same subject as18.425[J])Prereq:6.1220,6.1400, or18.4041Units: 3-0-9A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives such as public-key encryption, digital signatures, and pseudo-random number generation, as well as advanced cryptographic primitives such as zero-knowledge proofs, homomorphic encryption, and secure multiparty computation.Staff",EECS,2022
6.5630 Advanced Topics in Cryptography,6.5630 Advanced Topics in Cryptography()Prereq:6.5620Units: 3-0-9In-depth exploration of recent results in cryptography.V. Vaikuntanathan,EECS,2022
6.5660 Computer Systems Security,"6.5660 Computer Systems Security()Prereq:6.1020and (6.1800or6.1810)Units: 3-6-3Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.Staff",EECS,2022
6.1800 Computer Systems Engineering,"6.1800 Computer Systems Engineering()Prereq:6.1910Units: 5-1-6URL:https://mit.edu/6.1800Lecture:MW2(26-100)Lab:F1(36-144) orF2(36-144) orF1(26-142) orF2(26-142) orF1(26-210) orF2(26-210) orF1(26-314) orF2(26-314) orF1(4-149) orF2(4-149) orF1(4-261) orF2(4-261) orF1(4-145) orF2(4-145) orF1(24-307) orF2(24-307)Recitation:TR10(34-301,36-153,36-156) orTR11(34-301,36-153,36-156,34-303) orTR12(34-303,36-155) orTR1(34-302,35-310,36-155,24-307) orTR2(34-302,35-308,24-307)+finalTopics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.K. LaCurtsTextbooks (Spring 2025)",EECS,2022
6.1810 Operating System Engineering,"6.1810 Operating System Engineering()Prereq:6.1910Units: 3-0-9Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.M. Kaashoek",EECS,2022
6.1820[J] Mobile and Sensor Computing,"6.1820[J] Mobile and Sensor Computing()(Same subject asMAS.453[J])Prereq:6.1800or permission of instructorUnits: 3-0-9Lecture:TR1-2.30(24-121)Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.F. AdibNo textbook information available",EECS,2022
6.1850 Computer Systems and Society,"6.1850 Computer Systems and Society()Prereq:6.1800Units: 3-0-9Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.K. Lacurts",EECS,2022
6.5810 Operating System Engineering,"6.5810 Operating System Engineering()Prereq:6.1020and (6.1800or6.1810)Units: 3-6-3Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.Staff",EECS,2022
6.5820 Computer Networks,"6.5820 Computer Networks()Prereq:6.1800or permission of instructorUnits: 4-0-8Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.H. Balakrishnan",EECS,2022
6.5830 Database Systems,"6.5830 Database Systems()(Subject meets with6.5831)Prereq: ((6.1210or6.1220) and (6.1800or6.1810)) or permission of instructorUnits: 3-0-9Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.S. R. Madden",EECS,2022
6.5831 Database Systems,"6.5831 Database Systems()(Subject meets with6.5830)Prereq: ((6.1210or6.1220) and (6.1800or6.1810)) or permission of instructorUnits: 3-0-9Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.S. R. Madden",EECS,2022
6.5840 Distributed Computer Systems Engineering,"6.5840 Distributed Computer Systems Engineering()Prereq:6.1800,6.1810, or permission of instructorUnits: 3-0-9Lecture:TR1-2.30(54-100)+finalAbstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.R. MorrisNo textbook information available",EECS,2022
6.5850 Principles of Computer Systems,"6.5850 Principles of Computer Systems()Not offered regularly; consult departmentPrereq: Permission of instructorUnits: 3-0-9Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.M. F. Kaashoek, B. Lampson, N. B. Zeldovich",EECS,2022
6.1903 Introduction to Low-level Programming in C and Assembly,"6.1903 Introduction to Low-level Programming in C and Assembly(); first half of termPrereq:6.100AUnits: 2-2-2Credit cannot also be received for6.1904Ends Mar 21.Lecture:M9.30-11(32-123)Lab:W9.30-12(38-530) orW12-2.30(38-530) orW2.30-5(38-530)Recitation:T9.30-11(45-230) orT11-12.30(45-230) orT1-2.30(45-230) orT2.30-4(2-190) orT9.30-11(32-144) orT11-12.30(32-141) orT1-2.30(32-155) orT2.30-4(36-155)Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.J. D. Steinmeyer, S. Z. Hanono WachmanNo textbook information available",EECS,2022
6.1904 Introduction to Low-level Programming in C and Assembly,"6.1904 Introduction to Low-level Programming in C and Assembly(); second half of termPrereq:6.100AUnits: 2-2-2Credit cannot also be received for6.1903Begins Mar 31.Lecture:M9.30-11(32-123)Lab:W9.30-12(38-530) orW12-2.30(38-530) orW2.30-5(38-530)Recitation:T9.30-11(45-230) orT11-12.30(45-230) orT1-2.30(45-230) orT2.30-4(2-190) orT9.30-11(32-144) orT11-12.30(32-141) orT1-2.30(32-155) orT2.30-4(36-155)Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.J. D. Steinmeyer, S. Z. Hanono WachmanNo textbook information available",EECS,2022
6.1910 Computation Structures,"6.1910 Computation Structures(,)Prereq:Physics II (GIR),6.100A, and (Coreq:6.1903or6.1904); or permission of instructorUnits: 4-0-8Lecture:TR1(32-123)Recitation:WF10(34-302) orWF11(34-302) orWF12(34-302) orWF1(34-302) orWF2(34-302) orWF3(34-302) orWF10(35-308) orWF11(35-308) orWF12(35-308) orWF1(35-308) orWF2(8-205) orWF3(8-205)Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware description language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.Fall:S. Hanono WachmanSpring:S. Hanono WachmanNo textbook information available",EECS,2022
6.1920 Constructive Computer Architecture,"6.1920 Constructive Computer Architecture()Prereq:6.1910Units: 3-8-1Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.Staff",EECS,2022
6.5900 Computer System Architecture,"6.5900 Computer System Architecture()Prereq:6.1910Units: 4-0-8Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.J. Emer",EECS,2022
6.5910 Complex Digital Systems Design,"6.5910 Complex Digital Systems Design()Not offered regularly; consult departmentPrereq:6.1910Units: 5-5-2Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.Staff",EECS,2022
6.5920 Parallel Computing,"6.5920 Parallel Computing()Not offered regularly; consult departmentPrereq:6.1910or permission of instructorUnits: 3-0-9Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.Staff",EECS,2022
6.5930 Hardware Architecture for Deep Learning,"6.5930 Hardware Architecture for Deep Learning()(Subject meets with6.5931)Prereq:6.1910and (6.3000or6.3900)Units: 3-3-6Lecture:MW1-2.30(54-100)Lab:TBARecitation:F11(32-155)Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.V. Sze, J. EmerNo textbook information available",EECS,2022
6.5931 Hardware Architecture for Deep Learning,"6.5931 Hardware Architecture for Deep Learning()(Subject meets with6.5930)Prereq:6.1910and (6.3000or6.3900)Units: 3-3-6Lecture:MW1-2.30(54-100)Lab:TBARecitation:F11(32-155)Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.V. Sze, J. EmerNo textbook information available",EECS,2022
6.5940 TinyML and Efficient Deep Learning Computing,"6.5940 TinyML and Efficient Deep Learning Computing()Prereq:6.1910and6.3900Units: 3-0-9Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.S. Han",EECS,2022
6.5950 Secure Hardware Design,"6.5950 Secure Hardware Design()(Subject meets with6.5951)Prereq:6.1910Units: 3-0-9URL:https://shd.mit.edu/Lecture:MW1-2.30(E25-111)IntroductionÂ to basic concepts, principles, and implementation issues in the designing of secure hardware systems. Through a mixture of lectures and paper discussions, covers state-of-the-art security attacks and defenses targeting the computer architecture, digital circuits, and physics layers of computerÂ systems. Emphasizes both the conceptual and the practical aspects of security issues in modern hardware systems. Topics include microarchitectural timing side channels, speculative execution attacks, RowHammer, Trusted Execution Environment, physical attacks, hardware support for software security, and verification of digital systems. Students taking graduate version complete additional assignments.M. YanNo textbook information available",EECS,2022
6.5951 Secure Hardware Design,"6.5951 Secure Hardware Design()(Subject meets with6.5950)Prereq:6.1910Units: 3-0-9URL:https://shd.mit.edu/Lecture:MW1-2.30(E25-111)IntroductionÂ to basic concepts, principles, and implementation issues in the designing of secure hardware systems. Through a mixture of lectures and paper discussions, covers state-of-the-art security attacks and defenses targeting the computer architecture, digital circuits, and physics layers of computerÂ systems. Emphasizes both the conceptual and the practical aspects of security issues in modern hardware systems. Topics include microarchitectural timing side channels, speculative execution attacks, RowHammer, Trusted Execution Environment, physical attacks, hardware support for software security, and verification of digital systems. Students taking graduate version complete additional assignments.M. YanNo textbook information available",EECS,2022
18.01 Calculus,"18.01 Calculus(,)Prereq: NoneUnits: 5-0-7Credit cannot also be received for18.01A,CC.1801,ES.1801,ES.181ALecture:TR11,F2(2-135)Recitation:MW10(2-135)+finalDifferentiation and integration of functions of one variable, with applications. Informal treatment of limits and continuity. Differentiation: definition, rules, application to graphing, rates, approximations, and extremum problems. Indefinite integration; separable first-order differential equations. Definite integral; fundamental theorem of calculus. Applications of integration to geometry and science. Elementary functions. Techniques of integration. Polar coordinates. L'Hopital's rule. Improper integrals. Infinite series: geometric, p-harmonic, simple comparison tests, power series for some elementary functions.Fall:P. SeidelSpring:T. RudNo required or recommended textbooks",Mathematics,2022
18.01A Calculus,"18.01A Calculus(); first half of termPrereq: Knowledge of differentiation and elementary integrationUnits: 5-0-7Credit cannot also be received for18.01,CC.1801,ES.1801,ES.181ASix-week review of one-variable calculus, emphasizing material not on the high-school AB syllabus: integration techniques and applications, improper integrals, infinite series, applications to other topics, such as probability and statistics, as time permits. Prerequisites: one year of high-school calculus or the equivalent, with a score of 5 on the AB Calculus test (or the AB portion of the BC test, or an equivalent score on a standard international exam), or equivalent college transfer credit, or a passing grade on the first half of the 18.01 advanced standing exam.D. Jerison",Mathematics,2022
18.02 Calculus,"18.02 Calculus(,)Prereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.022,18.02A,CC.1802,ES.1802,ES.182ALecture:TR11,F2(54-100)Recitation:MW10(2-146) orMW11(2-146) orMW12(2-136) orMW1(2-146) orMW2(2-146)+finalCalculus of several variables. Vector algebra in 3-space, determinants, matrices. Vector-valued functions of one variable, space motion. Scalar functions of several variables: partial differentiation, gradient, optimization techniques. Double integrals and line integrals in the plane; exact differentials and conservative fields; Green's theorem and applications, triple integrals, line and surface integrals in space, Divergence theorem, Stokes' theorem; applications.Fall:D. MaulikSpring:M. KingTextbooks (Spring 2025)",Mathematics,2022
18.02A Calculus,"18.02A Calculus(,,); second half of termPrereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.02,18.022,CC.1802,ES.1802,ES.182AAttend any 18.02 recitation.Lecture:TR11,F2 (BEGINS MAR 31)(54-100)Recitation:TBA+finalFirst half is taught during the last six weeks of the Fall term; covers material in the first half of 18.02 (through double integrals). Second half of 18.02A can be taken either during IAP (daily lectures) or during the second half of the Spring term; it covers the remaining material in 18.02.Fall:J. BushIAP:J. BushSpring:M. KingTextbooks (IAP 2025);Textbooks (Spring 2025)",Mathematics,2022
18.022 Calculus,"18.022 Calculus()Prereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.02,18.02A,CC.1802,ES.1802,ES.182ACalculus of several variables. Topics as in 18.02 but with more focus on mathematical concepts. Vector algebra, dot product, matrices, determinant. Functions of several variables, continuity, differentiability, derivative. Parametrized curves, arc length, curvature, torsion. Vector fields, gradient, curl, divergence. Multiple integrals, change of variables, line integrals, surface integrals. Stokes' theorem in one, two, and three dimensions.J. Zung",Mathematics,2022
18.03 Differential Equations,"18.03 Differential Equations(,)Prereq: None.Coreq:Calculus II (GIR)Units: 5-0-7Credit cannot also be received forCC.1803,ES.1803Lecture:MWF1(10-250)Recitation:TR9(2-132) orTR10(2-147,26-328) orTR11(2-139,2-131,26-328) orTR12(2-139,2-135,2-131) orTR1(4-163,1-375) orTR2(1-375,2-131) orTR3(2-139)+finalStudy of differential equations, including modeling physical systems. Solution of first-order ODEs by analytical, graphical, and numerical methods. Linear ODEs with constant coefficients. Complex numbers and exponentials. Inhomogeneous equations: polynomial, sinusoidal, and exponential inputs. Oscillations, damping, resonance. Fourier series. Matrices, eigenvalues, eigenvectors, diagonalization. First order linear systems: normal modes, matrix exponentials, variation of parameters. Heat equation, wave equation. Nonlinear autonomous systems: critical point analysis, phase plane diagrams.Fall:H. CohnSpring:B. PoonenNo textbook information available",Mathematics,2022
18.031 System Functions and the Laplace Transform,"18.031 System Functions and the Laplace Transform()Prereq: None.Coreq:18.03Units: 1-0-2 [P/D/F]Studies basic continuous control theory as well as representation of functions in the complex frequency domain. Covers generalized functions, unit impulse response, and convolution; and Laplace transform, system (or transfer) function, and the pole diagram. Includes examples from mechanical and electrical engineering.S. NadimpalliNo required or recommended textbooks",Mathematics,2022
18.032 Differential Equations,18.032 Differential Equations()Prereq: None.Coreq:Calculus II (GIR)Units: 5-0-7Lecture:MWF1(2-142)Recitation:TR11(2-142)+finalCovers much of the same material as 18.03 with more emphasis on theory. The point of view is rigorous and results are proven. Local existence and uniqueness of solutions.A. LawrieNo textbook information available,Mathematics,2022
18.04 Complex Variables with Applications,"18.04 Complex Variables with Applications()Prereq:Calculus II (GIR)and (18.03or18.032)Units: 4-0-8Credit cannot also be received for18.075,18.0751Complex algebra and functions; analyticity; contour integration, Cauchy's theorem; singularities, Taylor and Laurent series; residues, evaluation of integrals; multivalued functions, potential theory in two dimensions; Fourier analysis, Laplace transforms, and partial differential equations.J. Dunkel",Mathematics,2022
18.05 Introduction to Probability and Statistics,"18.05 Introduction to Probability and Statistics()Prereq:Calculus II (GIR)Units: 4-0-8Lecture:TR2.30-4,F4(32-082) orTR1-2.30,F2(32-082)+finalA unified introduction to probability, Bayesian inference, and frequentist statistics. Topics include: combinatorics, random variables, (joint) distributions, covariance, central limit theorem; Bayesian updating, odds, posterior prediction; significance tests, confidence intervals, bootstrapping, regression. Students also develop computational skills and statistical thinking by using R to simulate, analyze, and visualize data; and by exploring privacy, fairness, and causality in contemporary media and research. Flipped subject taught in a Technology Enabled Active Learning (TEAL) classroom to facilitate discussion, group problem solving, and coding studios with ample mentorship.J. BloomNo textbook information available",Mathematics,2022
18.06 Linear Algebra,"18.06 Linear Algebra(,)Prereq:Calculus II (GIR)Units: 4-0-8Credit cannot also be received for6.C06,18.700,18.C06,ES.1806Lecture:MWF10(26-100)Recitation:T9(2-131) orT11(2-136,4-159) orT12(4-159,2-105) orT1(2-132,2-135) orT2(2-132) orT3(2-361) orT10(2-131,2-132)+finalBasic subject on matrix theory and linear algebra, emphasizing topics useful in other disciplines, including systems of equations, vector spaces, determinants, eigenvalues, singular value decomposition, and positive definite matrices. Applications to least-squares approximations, stability of differential equations, networks, Fourier transforms, and Markov processes. Uses linear algebra software. Compared with 18.700, more emphasis on matrix algorithms and many applications.Fall:W. MinicozziSpring:N. SunTextbooks (Spring 2025)",Mathematics,2022
18.C06[J] Linear Algebra and Optimization,"18.C06[J] Linear Algebra and Optimization()(Same subject as6.C06[J])Prereq:Calculus II (GIR)Units: 5-0-7Credit cannot also be received for18.06,18.700,ES.1806Introductory course in linear algebra and optimization, assuming no prior exposure to linear algebra and starting from the basics, including vectors, matrices, eigenvalues, singular values, and least squares. Covers the basics in optimization including convex optimization, linear/quadratic programming, gradient descent, and regularization, building on insights from linear algebra. Explores a variety of applications in science and engineering, where the tools developed give powerful ways to understand complex systems and also extract structure from data.S. Johnson",Mathematics,2022
18.062[J] Mathematics for Computer Science,"18.062[J] Mathematics for Computer Science(,)(Same subject as6.1200[J])Prereq:Calculus I (GIR)Units: 5-0-7Lecture:TR2.30-4(26-100)Recitation:WF10(38-166,36-155) orWF11(38-166,36-155,26-168) orWF12(38-166,36-156,26-168) orWF1(38-166,36-156,35-310) orWF2(38-166,36-156,35-308) orWF3(38-166,36-156)+finalElementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.Fall:Z. AbelSpring:Z. AbelNo textbook information available",Mathematics,2022
18.063 Matrix Calculus for Machine Learning and Beyond(New),"18.063 Matrix Calculus for Machine Learning and Beyond(New)(); partial termPrereq:Calculus II (GIR)and18.06Units: 1-0-2 [P/D/F]Covers a coherent approach to matrix calculus, showing techniques that allow the student to think of a matrix holistically, rather than as an array of scalars; generalize and compute derivatives of important matrix factorizations and other complicated-looking operations; and understand how differentiation formulas must be reimagined in large-scale computing. Discusses ""adjoint"" or ""reverse-mode"" differentiation, custom vector-Jacobian products, and how modern automatic differentiation is more computer science than calculus.S. JohnsonNo textbook information available",Mathematics,2022
"18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning","18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning()(Subject meets with18.0651)Prereq:18.06Units: 3-0-9Lecture:TR9.30-11(32-141)Reviews linear algebra with applications to life sciences, finance, engineering, and big data. Covers singular value decomposition, weighted least squares, signal and image processing, principal component analysis, covariance and correlation matrices, directed and undirected graphs, matrix factorizations, neural nets, machine learning, and computations with large matrices.Z. ChenTextbooks (Spring 2025)",Mathematics,2022
"18.0651 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning","18.0651 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning()(Subject meets with18.065)Prereq:18.06Units: 3-0-9Lecture:TR9.30-11(32-141)Reviews linear algebra with applications to life sciences, finance, engineering, and big data. Covers singular value decomposition, weighted least squares, signal and image processing, principal component analysis, covariance and correlation matrices, directed and undirected graphs, matrix factorizations, neural nets, machine learning, and computations with large matrices. Students in Course 18 must register for the undergraduate version, 18.065.StaffNo textbook information available",Mathematics,2022
18.075 Methods for Scientists and Engineers,18.075 Methods for Scientists and Engineers()(Subject meets with18.0751)Prereq:Calculus II (GIR)and18.03Units: 3-0-9Credit cannot also be received for18.04Covers functions of a complex variable; calculus of residues. Includes ordinary differential equations; Bessel and Legendre functions; Sturm-Liouville theory; partial differential equations; heat equation; and wave equations.H. Cheng,Mathematics,2022
18.0751 Methods for Scientists and Engineers,"18.0751 Methods for Scientists and Engineers()(Subject meets with18.075)Prereq:Calculus II (GIR)and18.03Units: 3-0-9Credit cannot also be received for18.04Covers functions of a complex variable; calculus of residues. Includes ordinary differential equations; Bessel and Legendre functions; Sturm-Liouville theory; partial differential equations; heat equation; and wave equations. Students in Courses 6, 8, 12, 18, and 22 must register for undergraduate version, 18.075.H. Cheng",Mathematics,2022
18.085 Computational Science and Engineering I,"18.085 Computational Science and Engineering I(,,)(Subject meets with18.0851)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR1-2.30(4-145)+finalReview of linear algebra, applications to networks, structures, and estimation, finite difference and finite element solution of differential equations, Laplace's equation and potential flow, boundary-value problems, Fourier series, discrete Fourier transform, convolution. Frequent use of MATLAB in a wide range of scientific and engineering applications.Fall:P. ChaoSpring:P. ChaoSummer:StaffTextbooks (Spring 2025)",Mathematics,2022
18.0851 Computational Science and Engineering I,"18.0851 Computational Science and Engineering I(,,)(Subject meets with18.085)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR1-2.30(4-145)+finalReview of linear algebra, applications to networks, structures, and estimation, finite difference and finite element solution of differential equations, Laplace's equation and potential flow, boundary-value problems, Fourier series, discrete Fourier transform, convolution. Frequent use of MATLAB in a wide range of scientific and engineering applications. Students in Course 18 must register for the undergraduate version, 18.085.Fall:D. KouskoulasSummer:StaffNo textbook information available",Mathematics,2022
18.086 Computational Science and Engineering II,"18.086 Computational Science and Engineering II()Not offered regularly; consult department(Subject meets with18.0861)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9URL:http://math.mit.edu/18086/Initial value problems: finite difference methods, accuracy and stability, heat equation, wave equations, conservation laws and shocks, level sets, Navier-Stokes. Solving large systems: elimination with reordering, iterative methods, preconditioning, multigrid, Krylov subspaces, conjugate gradients. Optimization and minimum principles: weighted least squares, constraints, inverse problems, calculus of variations, saddle point problems, linear programming, duality, adjoint methods.Staff",Mathematics,2022
18.0861 Computational Science and Engineering II,"18.0861 Computational Science and Engineering II()Not offered regularly; consult department(Subject meets with18.086)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Initial value problems: finite difference methods, accuracy and stability, heat equation, wave equations, conservation laws and shocks, level sets, Navier-Stokes. Solving large systems: elimination with reordering, iterative methods, preconditioning, multigrid, Krylov subspaces, conjugate gradients. Optimization and minimum principles: weighted least squares, constraints, inverse problems, calculus of variations, saddle point problems, linear programming, duality, adjoint methods. Students in Course 18 must register for the undergraduate version, 18.086.Staff",Mathematics,2022
18.089 Review of Mathematics,"18.089 Review of Mathematics()Prereq: Permission of instructorUnits: 5-0-7One-week review of one-variable calculus (18.01), followed by concentrated study covering multivariable calculus (18.02), two hours per day for five weeks. Primarily for graduate students in Course 2N. Degree credit allowed only in special circumstances.T. Cummings",Mathematics,2022
18.090 Introduction to Mathematical Reasoning,"18.090 Introduction to Mathematical Reasoning()Prereq: None.Coreq:Calculus II (GIR)Units: 3-0-9Lecture:TR9.30-11(2-142)Focuses on understanding and constructing mathematical arguments. Discusses foundational topics (such as infinite sets, quantifiers, and methods of proof) as well as selected concepts from algebra (permutations, vector spaces, fields) and analysis (sequences of real numbers). Particularly suitable for students desiring additional experience with proofs before going on to more advanced mathematics subjects or subjects in related areas with significant mathematical content.S. DyatlovNo textbook information available",Mathematics,2022
18.091 Introduction to Metric Spaces(New),"18.091 Introduction to Metric Spaces(New)(); partial termPrereq:18.100AUnits: 1-0-2 [P/D/F]Covers metrics, open and closed sets, continuous functions (from a topological perspective), function spaces, completeness, and compactness. Aims to provide more complex concepts and proofs for students who have taken 18.100A as their real analysis subject.S. NadimpalliNo required or recommended textbooks",Mathematics,2022
18.094[J] Teaching College-Level Science and Engineering,"18.094[J] Teaching College-Level Science and Engineering()(Same subject as1.95[J],5.95[J],7.59[J],8.395[J])(Subject meets with2.978)Prereq: NoneUnits: 2-0-2 [P/D/F]Participatory seminar focuses on the knowledge and skills necessary for teaching science and engineering in higher education. Topics include theories of adult learning; course development; promoting active learning, problemsolving, and critical thinking in students; communicating with a diverse student body; using educational technology to further learning; lecturing; creating effective tests and assignments; and assessment and evaluation. Students research and present a relevant topic of particular interest. Appropriate for both novices and those with teaching experience.J. Rankin",Mathematics,2022
18.095 Mathematics Lecture Series,"18.095 Mathematics Lecture Series()Prereq:Calculus I (GIR)Units: 2-0-4 [P/D/F]Ten lectures by mathematics faculty members on interesting topics from both classical and modern mathematics. All lectures accessible to students with calculus background and an interest in mathematics. At each lecture, reading and exercises are assigned. Students prepare these for discussion in a weekly problem session.J. DunkelNo textbook information available",Mathematics,2022
18.098 Internship in Mathematics,"18.098 Internship in Mathematics(,,,)Prereq: Permission of instructorUnits arranged [P/D/F]TBA.Provides academic credit for students pursuing internships to gain practical experience in the applications of mathematical concepts and methods.Fall:T. CummingsIAP:T. CummingsSpring:T. CummingsSummer:T. CummingsNo required or recommended textbooks",Mathematics,2022
18.099 Independent Study,"18.099 Independent Study(,,,)Prereq: Permission of instructorUnits arrangedTBA.Studies (during IAP) or special individual reading (during regular terms). Arranged in consultation with individual faculty members and subject to departmental approval.Â  May not be used to satisfy Mathematics major requirements.Fall:T. CummingsIAP:T. CummingsSpring:T. CummingsSummer:T. CummingsNo required or recommended textbooks",Mathematics,2022
18.1001 Real Analysis,"18.1001 Real Analysis(,)(Subject meets with18.100A)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1002,18.100A,18.100B,18.100P,18.100QLecture:TR1-2.30(4-270)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line. Students in Course 18 must register for undergraduate version 18.100A.Fall:Q. DengSpring:J. ZhuNo textbook information available",Mathematics,2022
18.1002 Real Analysis,"18.1002 Real Analysis(,)(Subject meets with18.100B)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.100A,18.100B,18.100P,18.100QLecture:TR9.30-11(2-190)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. More demanding than 18.100A, for students with more mathematical maturity. Places more emphasis on point-set topology and n-space. Students in Course 18 must register for undergraduate version 18.100B.Fall:R. MelroseSpring:G. FranzNo textbook information available",Mathematics,2022
18.100A Real Analysis,"18.100A Real Analysis(,)(Subject meets with18.1001)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.1002,18.100B,18.100P,18.100QLecture:TR1-2.30(4-270)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line.Fall:T. ChowSpring:J. ZhuNo required or recommended textbooks",Mathematics,2022
18.100B Real Analysis,"18.100B Real Analysis(,)(Subject meets with18.1002)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.1002,18.100A,18.100P,18.100QLecture:TR9.30-11(2-190)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. More demanding than 18.100A, for students with more mathematical maturity. Places more emphasis on point-set topology and n-space.Fall:L. GuthSpring:T. ColdingTextbooks (Spring 2025)",Mathematics,2022
18.100P Real Analysis,"18.100P Real Analysis()Prereq:Calculus II (GIR)Units: 4-0-11Credit cannot also be received for18.1001,18.1002,18.100A,18.100B,18.100QLecture:MW9.30-11 (LIMITED 30)(2-131)Recitation:F11(2-146) orF1(2-151)Covers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line. Includes instruction and practice in written communication. Enrollment limited.R. MaguireNo required or recommended textbooks",Mathematics,2022
18.100Q Real Analysis,"18.101 Analysis and Manifolds()(Subject meets with18.1011)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduction to the theory of manifolds: vector fields and densities on manifolds, integral calculus in the manifold setting and the manifold version of the divergence theorem. 18.901 helpful but not required.R. Jiang",Mathematics,2022
18.101 Analysis and Manifolds,"18.1011 Analysis and Manifolds()(Subject meets with18.101)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduction to the theory of manifolds: vector fields and densities on manifolds, integral calculus in the manifold setting and the manifold version of the divergence theorem. 18.9011 helpful but not required. Students in Course 18 must register for the undergraduate version, 18.101.Staff",Mathematics,2022
18.1011 Analysis and Manifolds,"18.102 Introduction to Functional Analysis()(Subject meets with18.1021)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Lecture:MW9.30-11(4-237)+finalNormed spaces, completeness, functionals, Hahn-Banach theorem, duality, operators. Lebesgue measure, measurable functions, integrability, completeness of L-p spaces. Hilbert space. Compact, Hilbert-Schmidt and trace class operators. Spectral theorem.C. KehleTextbooks (Spring 2025)",Mathematics,2022
18.102 Introduction to Functional Analysis,"18.1021 Introduction to Functional Analysis()(Subject meets with18.102)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Lecture:MW9.30-11(4-237)+finalNormed spaces, completeness, functionals, Hahn-Banach theorem, duality, operators. Lebesgue measure, measurable functions, integrability, completeness of L-p spaces. Hilbert space. Compact, Hilbert-Schmidt and trace class operators. Spectral theorem. Students in Course 18 must register for the undergraduate version, 18.102.StaffNo textbook information available",Mathematics,2022
18.1021 Introduction to Functional Analysis,"18.103 Fourier Analysis: Theory and Applications()(Subject meets with18.1031)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Roughly half the subject devoted to the theory of the Lebesgue integral with applications to probability, and half to Fourier series and Fourier integrals.Staff",Mathematics,2022
18.103 Fourier Analysis: Theory and Applications,"18.1031 Fourier Analysis: Theory and Applications()(Subject meets with18.103)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Roughly half the subject devoted to the theory of the Lebesgue integral with applications to probability, and half to Fourier series and Fourier integrals. Students in Course 18 must register for the undergraduate version, 18.103.Staff",Mathematics,2022
18.1031 Fourier Analysis: Theory and Applications,"18.104 Seminar in Analysis(,)Prereq:18.100A,18.100B,18.100P, or18.100QUnits: 3-0-9Lecture:MW11-12.30(2-151)Students present and discuss material from books or journals. Topics vary from year to year. Instruction and practice in written and oral communication provided. Enrollment limited.Fall:L. AlonSpring:T. Ozuch-MeerssemanNo required or recommended textbooks",Mathematics,2022
18.104 Seminar in Analysis,"18.112 Functions of a Complex Variable()(Subject meets with18.1121)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Studies the basic properties of analytic functions of one complex variable. Conformal mappings and the Poincare model of non-Euclidean geometry. Cauchy-Goursat theorem and Cauchy integral formula. Taylor and Laurent decompositions. Singularities, residues and computation of integrals. Harmonic functions and Dirichlet's problem for the Laplace equation. The partial fractions decomposition. Infinite series and infinite product expansions. The Gamma function. The Riemann mapping theorem. Elliptic functions.J. Shi",Mathematics,2022
18.112 Functions of a Complex Variable,"18.1121 Functions of a Complex Variable()(Subject meets with18.112)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Studies the basic properties of analytic functions of one complex variable. Conformal mappings and the Poincare model of non-Euclidean geometry. Cauchy-Goursat theorem and Cauchy integral formula. Taylor and Laurent decompositions. Singularities, residues and computation of integrals. Harmonic functions and Dirichlet's problem for the Laplace equation. The partial fractions decomposition. Infinite series and infinite product expansions. The Gamma function. The Riemann mapping theorem. Elliptic functions. Students in Course 18 must register for the undergraduate version, 18.112.Staff",Mathematics,2022
18.1121 Functions of a Complex Variable,"18.116 Riemann Surfaces()Prereq:18.112Units: 3-0-9Riemann surfaces, uniformization, Riemann-Roch Theorem. Theory of elliptic functions and modular forms. Some applications, such as to number theory.Staff",Mathematics,2022
18.116 Riemann Surfaces,"18.117 Topics in Several Complex Variables()Prereq:18.112and18.965Units: 3-0-9Harmonic theory on complex manifolds, Hodge decomposition theorem, Hard Lefschetz theorem. Vanishing theorems. Theory of Stein manifolds. As time permits students also study holomorphic vector bundles on Kahler manifolds.Staff",Mathematics,2022
18.117 Topics in Several Complex Variables,18.118 Topics in Analysis()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2022
18.118 Topics in Analysis,"18.125 Measure Theory and Analysis()Prereq:18.100A,18.100B,18.100P, or18.100QUnits: 3-0-9Provides a rigorous introduction to Lebesgue's theory of measure and integration. Covers material that is essential in analysis, probability theory, and differential geometry.Staff",Mathematics,2022
18.125 Measure Theory and Analysis,18.137 Topics in Geometric Partial Differential Equations()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.T. Colding,Mathematics,2022
18.137 Topics in Geometric Partial Differential Equations,"18.152 Introduction to Partial Differential Equations()(Subject meets with18.1521)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduces three main types of partial differential equations: diffusion, elliptic, and hyperbolic. Includes mathematical tools, real-world examples and applications, such as the Black-Scholes equation, the European options problem, water waves, scalar conservation laws, first order equations and traffic problems.F. Hernandez",Mathematics,2022
18.152 Introduction to Partial Differential Equations,"18.1521 Introduction to Partial Differential Equations()(Subject meets with18.152)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduces three main types of partial differential equations: diffusion, elliptic, and hyperbolic. Includes mathematical tools, real-world examples and applications, such as the Black-Scholes equation, the European options problem, water waves, scalar conservation laws, first order equations and traffic problems. Students in Course 18 must register for the undergraduate version, 18.152.Staff",Mathematics,2022
18.1521 Introduction to Partial Differential Equations,"18.155 Differential Analysis I()Prereq:18.102or18.103Units: 3-0-9First part of a two-subject sequence. Review of Lebesgue integration. Lp spaces. Distributions. Fourier transform. Sobolev spaces. Spectral theorem, discrete and continuous spectrum. Homogeneous distributions. Fundamental solutions for elliptic, hyperbolic and parabolic differential operators. Recommended prerequisite: 18.112.A. Logunov",Mathematics,2022
18.155 Differential Analysis I,"18.156 Differential Analysis II()Prereq:18.155Units: 3-0-9Lecture:TR1-2.30(2-142)Second part of a two-subject sequence. Covers variable coefficient elliptic, parabolic and hyperbolic partial differential equations.L. GuthNo required or recommended textbooks",Mathematics,2022
18.156 Differential Analysis II,"18.157 Introduction to Microlocal Analysis()Prereq:18.155Units: 3-0-9The semi-classical theory of partial differential equations. Discussion of Pseudodifferential operators, Fourier integral operators, asymptotic solutions of partial differential equations, and the spectral theory of Schroedinger operators from the semi-classical perspective. Heavy emphasis placed on the symplectic geometric underpinnings of this subject.Staff",Mathematics,2022
18.157 Introduction to Microlocal Analysis,18.158 Topics in Differential Equations()Prereq:18.157Units: 3-0-9Lecture:MW1-2.30(2-147)Topics vary from year to year.A. LogunovNo textbook information available,Mathematics,2022
18.158 Topics in Differential Equations,18.199 Graduate Analysis Seminar()Prereq: Permission of instructorUnits: 3-0-9Studies original papers in differential analysis and differential equations. Intended for first- and second-year graduate students. Permission must be secured in advance.Staff,Mathematics,2022
18.199 Graduate Analysis Seminar,"18.200 Principles of Discrete Applied Mathematics()Prereq: None.Coreq:18.06Units: 4-0-11Credit cannot also be received for18.200ALimited 45.Lecture:MWF2(2-190)Recitation:R10(2-146) orR1(2-146) orR2(2-146)Study of illustrative topics in discrete applied mathematics, including probability theory, information theory, coding theory, secret codes, generating functions, and linear programming. Instruction and practice in written communication provided. Enrollment limited.P. ShorNo required or recommended textbooks",Mathematics,2022
18.200 Principles of Discrete Applied Mathematics,"18.200A Principles of Discrete Applied Mathematics()Prereq: None.Coreq:18.06Units: 3-0-9Credit cannot also be received for18.200Study of illustrative topics in discrete applied mathematics, including probability theory, information theory, coding theory, secret codes, generating functions, and linear programming.Staff",Mathematics,2022
18.200A Principles of Discrete Applied Mathematics,"18.204 Undergraduate Seminar in Discrete Mathematics(,)Prereq: ((6.1200or18.200) and (18.06,18.700, or18.701)) or permission of instructorUnits: 3-0-9Lecture:TR2.30-4 (LIMITED 15 EACH S ..(2-151) orTR2.30-4(4-237,2-147)Seminar in combinatorics, graph theory, and discrete mathematics in general. Participants read and present papers from recent mathematics literature. Instruction and practice in written and oral communication provided. Enrollment limited.Fall:M. DharSpring:M. DharNo textbook information available",Mathematics,2022
18.204 Undergraduate Seminar in Discrete Mathematics,"18.211 Combinatorial Analysis()Prereq:Calculus II (GIR)and (18.06,18.700, or18.701)Units: 3-0-9Combinatorial problems and methods for their solution. Enumeration, generating functions, recurrence relations, construction of bijections. Introduction to graph theory. Prior experience with abstraction and proofs is helpful.M. Simkin",Mathematics,2022
18.211 Combinatorial Analysis,"18.212 Algebraic Combinatorics()Prereq:18.701or18.703Units: 3-0-9Lecture:MWF1(4-237)Applications of algebra to combinatorics. Topics include walks in graphs, the Radon transform, groups acting on posets, Young tableaux, electrical networks.A. PostnikovNo textbook information available",Mathematics,2022
18.212 Algebraic Combinatorics,18.217 Combinatorial Theory()Prereq: Permission of instructorUnits: 3-0-9Content varies from year to year.A. Postnikov,Mathematics,2022
18.217 Combinatorial Theory,18.218 Topics in Combinatorics()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2022
18.218 Topics in Combinatorics,18.219 Seminar in Combinatorics()Not offered regularly; consult departmentPrereq: Permission of instructorUnits: 3-0-9Content varies from year to year. Readings from current research papers in combinatorics. Topics to be chosen and presented by the class.Staff,Mathematics,2022
18.219 Seminar in Combinatorics,"18.225 Graph Theory and Additive Combinatorics()Prereq: ((18.701or18.703) and (18.100A,18.100B,18.100P, or18.100Q)) or permission of instructorUnits: 3-0-9Introduction to extremal graph theory and additive combinatorics. Highlights common themes, such as the dichotomy between structure versus pseudorandomness. Topics include Turan-type problems, Szemeredi's regularity lemma and applications, pseudorandom graphs, spectral graph theory, graph limits, arithmetic progressions (Roth, Szemeredi, Green-Tao), discrete Fourier analysis, Freiman's theorem on sumsets and structure. Discusses current research topics and open problems.Y. Zhao",Mathematics,2022
18.225 Graph Theory and Additive Combinatorics,"18.226 Probabilistic Methods in Combinatorics()Prereq: (18.211,18.600, and (18.100A,18.100B,18.100P, or18.100Q)) or permission of instructorUnits: 3-0-9Introduction to the probabilistic method, a fundamental and powerful technique in combinatorics and theoretical computer science. Focuses on methodology as well as combinatorial applications. Suitable for students with strong interest and background in mathematical problem solving. Topics include linearity of expectations, alteration, second moment, Lovasz local lemma, correlation inequalities, Janson inequalities, concentration inequalities, entropy method.S. Luo",Mathematics,2022
18.226 Probabilistic Methods in Combinatorics,"18.300 Principles of Continuum Applied Mathematics()Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR2.30-4(4-145)Covers fundamental concepts in continuous applied mathematics. Applications from traffic flow, fluids, elasticity, granular flows, etc. Also covers continuum limit; conservation laws, quasi-equilibrium; kinematic waves; characteristics, simple waves, shocks; diffusion (linear and nonlinear); numerical solution of wave equations; finite differences, consistency, stability; discrete and fast Fourier transforms; spectral methods; transforms and series (Fourier, Laplace). Additional topics may include sonic booms, Mach cone, caustics, lattices, dispersion and group velocity. Uses MATLAB computing environment.L. DemanetNo textbook information available",Mathematics,2022
18.300 Principles of Continuum Applied Mathematics,"18.303 Linear Partial Differential Equations: Analysis and Numerics()Prereq:18.06or18.700Units: 3-0-9Provides students with the basic analytical and computational tools of linear partial differential equations (PDEs) for practical applications in science and engineering, including heat/diffusion, wave, and Poisson equations. Analytics emphasize the viewpoint of linear algebra and the analogy with finite matrix problems. Studies operator adjoints and eigenproblems, series solutions, Green's functions, and separation of variables. Numerics focus on finite-difference and finite-element techniques to reduce PDEs to matrix problems, including stability and convergence analysis and implicit/explicit timestepping. Some programming required for homework and final project.Staff",Mathematics,2022
18.303 Linear Partial Differential Equations: Analysis and Numerics,"18.305 Advanced Analytic Methods in Science and Engineering()Prereq:18.04,18.075, or18.112Units: 3-0-9Covers expansion around singular points: the WKB method on ordinary and partial differential equations; the method of stationary phase and the saddle point method; the two-scale method and the method of renormalized perturbation; singular perturbation and boundary-layer techniques; WKB method on partial differential equations.Staff",Mathematics,2022
18.305 Advanced Analytic Methods in Science and Engineering,"18.306 Advanced Partial Differential Equations with Applications()Prereq: (18.03or18.032) and (18.04,18.075, or18.112)Units: 3-0-9Concepts and techniques for partial differential equations, especially nonlinear. Diffusion, dispersion and other phenomena. Initial and boundary value problems. Normal mode analysis, Green's functions, and transforms. Conservation laws, kinematic waves, hyperbolic equations, characteristics shocks, simple waves. Geometrical optics, caustics. Free-boundary problems. Dimensional analysis. Singular perturbation, boundary layers, homogenization. Variational methods. Solitons. Applications from fluid dynamics, materials science, optics, traffic flow, etc.Staff",Mathematics,2022
18.306 Advanced Partial Differential Equations with Applications,18.327 Topics in Applied Mathematics()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2022
18.327 Topics in Applied Mathematics,"18.330 Introduction to Numerical Analysis()Not offered regularly; consult departmentPrereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Basic techniques for the efficient numerical solution of problems in science and engineering. Root finding, interpolation, approximation of functions, integration, differential equations, direct and iterative methods in linear algebra. Knowledge of programming in a language such as MATLAB, Python, or Julia is helpful.Staff",Mathematics,2022
18.330 Introduction to Numerical Analysis,"18.335[J] Introduction to Numerical Methods()(Same subject as6.7310[J])Prereq:18.06,18.700, or18.701Units: 3-0-9Lecture:MW9.30-11(2-190)Advanced introduction to numerical analysis: accuracy and efficiency of numerical algorithms. In-depth coverage of sparse-matrix/iterative and dense-matrix algorithms in numerical linear algebra (for linear systems and eigenproblems). Floating-point arithmetic, backwards error analysis, conditioning, and stability. Other computational topics (e.g., numerical integration or nonlinear optimization) may also be surveyed. Final project involves some programming.S. ChenTextbooks (Spring 2025)",Mathematics,2022
18.335[J] Introduction to Numerical Methods,"18.336[J] Fast Methods for Partial Differential and Integral Equations(,)(Same subject as6.7340[J])Prereq:6.7300,16.920,18.085,18.335, or permission of instructorUnits: 3-0-9Unified introduction to the theory and practice of modern, near linear-time, numerical methods for large-scale partial-differential and integral equations. Topics include preconditioned iterative methods; generalized Fast Fourier Transform and other butterfly-based methods; multiresolution approaches, such as multigrid algorithms and hierarchical low-rank matrix decompositions; and low and high frequency Fast Multipole Methods. Example applications include aircraft design, cardiovascular system modeling, electronic structure computation, and tomographic imaging.Staff",Mathematics,2022
18.336[J] Fast Methods for Partial Differential and Integral Equations,"18.337[J] Parallel Computing and Scientific Machine Learning()(Same subject as6.7320[J])Prereq:18.06,18.700, or18.701Units: 3-0-9Introduction to scientific machine learning with an emphasis on developing scalable differentiable programs. Covers scientific computing topics (numerical differential equations, dense and sparse linear algebra, Fourier transformations, parallelization of large-scale scientific simulation) simultaneously with modern data science (machine learning, deep neural networks, automatic differentiation), focusing on the emerging techniques at the connection between these areas, such as neural differential equations and physics-informed deep learning. Provides direct experience with the modern realities of optimizing code performance for supercomputers, GPUs, and multicores in a high-level language.Staff",Mathematics,2022
18.337[J] Parallel Computing and Scientific Machine Learning,"18.338 Eigenvalues of Random Matrices()Prereq:18.701or permission of instructorUnits: 3-0-9Covers the modern main results of random matrix theory as it is currently applied in engineering and science. Topics include matrix calculus for finite and infinite matrices (e.g., Wigner's semi-circle and Marcenko-Pastur laws), free probability, random graphs, combinatorial methods, matrix statistics, stochastic operators, passage to the continuum limit, moment methods, and compressed sensing. Knowledge of Julia helpful, but not required.A. Edelman",Mathematics,2022
18.338 Eigenvalues of Random Matrices,"18.352[J] Nonlinear Dynamics: The Natural Environment()Not offered regularly; consult department(Same subject as12.009[J])Prereq:Calculus II (GIR)andPhysics I (GIR);Coreq:18.03Units: 3-0-9Analyzes cooperative processes that shape the natural environment, now and in the geologic past. Emphasizes the development of theoretical models that relate the physical and biological worlds, the comparison of theory to observational data, and associated mathematical methods. Topics include carbon cycle dynamics; ecosystem structure, stability and complexity; mass extinctions; biosphere-geosphere coevolution; and climate change. Employs techniques such as stability analysis; scaling; null model construction; time series and network analysis.D. H. Rothman",Mathematics,2022
18.352[J] Nonlinear Dynamics: The Natural Environment,"18.353[J] Nonlinear Dynamics: Chaos()(Same subject as2.050[J],12.006[J])Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Introduction to nonlinear dynamics and chaos in dissipative systems. Forced and parametric oscillators. Phase space. Periodic, quasiperiodic, and aperiodic flows. Sensitivity to initial conditions and strange attractors. Lorenz attractor. Period doubling, intermittency, and quasiperiodicity. Scaling and universality. Analysis of experimental data: Fourier transforms, Poincare sections, fractal dimension, and Lyapunov exponents. Applications to mechanical systems, fluid dynamics, physics, geophysics, and chemistry. See 12.207J/18.354J for Nonlinear Dynamics: Continuum Systems.R. Rosales",Mathematics,2022
18.353[J] Nonlinear Dynamics: Chaos,"18.354[J] Nonlinear Dynamics: Continuum Systems()(Same subject as1.062[J],12.207[J])(Subject meets with18.3541)Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR9.30-11(2-143)General mathematical principles of continuum systems. From microscopic to macroscopic descriptions in the form of linear or nonlinear (partial) differential equations. Exact solutions, dimensional analysis, calculus of variations and singular perturbation methods. Stability, waves and pattern formation in continuum systems. Subject matter illustrated using natural fluid and solid systems found, for example, in geophysics and biology.N. DerrNo textbook information available",Mathematics,2022
18.354[J] Nonlinear Dynamics: Continuum Systems,"18.3541 Nonlinear Dynamics: Continuum Systems()(Subject meets with1.062[J],12.207[J],18.354[J])Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR9.30-11(2-143)General mathematical principles of continuum systems. From microscopic to macroscopic descriptions in the form of linear or nonlinear (partial) differential equations. Exact solutions, dimensional analysis, calculus of variations and singular perturbation methods. Stability, waves and pattern formation in continuum systems. Subject matter illustrated using natural fluid and solid systems found, for example, in geophysics and biology. Students in Courses 1, 12, and 18 must register for undergraduate version, 18.354.B. PrimkulovNo textbook information available",Mathematics,2022
18.3541 Nonlinear Dynamics: Continuum Systems,"18.355 Fluid Mechanics()Prereq:2.25,12.800, or18.354Units: 3-0-9Topics include the development of Navier-Stokes equations, inviscid flows, boundary layers, lubrication theory, Stokes flows, and surface tension. Fundamental concepts illustrated through problems drawn from a variety of areas, including geophysics, biology, and the dynamics of sport. Particular emphasis on the interplay between dimensional analysis, scaling arguments, and theory. Includes classroom and laboratory demonstrations.Staff",Mathematics,2022
18.355 Fluid Mechanics,"18.357 Interfacial Phenomena()Prereq:2.25,12.800,18.354,18.355, or permission of instructorUnits: 3-0-9Lecture:MW3-4.30(2-151)Fluid systems dominated by the influence of interfacial tension. Elucidates the roles of curvature pressure and Marangoni stress in a variety of hydrodynamic settings. Particular attention to drops and bubbles, soap films and minimal surfaces, wetting phenomena, water-repellency, surfactants, Marangoni flows, capillary origami and contact line dynamics. Theoretical developments are accompanied by classroom demonstrations. Highlights the role of surface tension in biology.J. BushNo textbook information available",Mathematics,2022
18.357 Interfacial Phenomena,"18.358[J] Nonlinear Dynamics and Turbulence()(Same subject as1.686[J],2.033[J])(Subject meets with1.068)Prereq:1.060AUnits: 3-2-7Reviews theoretical notions of nonlinear dynamics, instabilities, and waves with applications in fluid dynamics. Discusses hydrodynamic instabilities leading to flow destabilization and transition to turbulence. Focuses on physical turbulence and mixing from homogeneous isotropic turbulence. Also covers topics such as rotating and stratified flows as they arise in the environment, wave-turbulence, and point source turbulent flows. Laboratory activities integrate theoretical concepts covered in lectures and problem sets. Students taking graduate version complete additional assignments.L. Bourouiba",Mathematics,2022
18.358[J] Nonlinear Dynamics and Turbulence,"18.367 Waves and Imaging()Prereq: Permission of instructorUnits: 3-0-9The mathematics of inverse problems involving waves, with examples taken from reflection seismology, synthetic aperture radar, and computerized tomography. Suitable for graduate students from all departments who have affinities with applied mathematics. Topics include acoustic, elastic, electromagnetic wave equations; geometrical optics; scattering series and inversion; migration and backprojection; adjoint-state methods; Radon and curvilinear Radon transforms; microlocal analysis of imaging; optimization, regularization, and sparse regression.L. Demanet",Mathematics,2022
18.367 Waves and Imaging,"18.369[J] Mathematical Methods in Nanophotonics()(Same subject as8.315[J])Prereq:8.07,18.303, or permission of instructorUnits: 3-0-9High-level approaches to understanding complex optical media, structured on the scale of the wavelength, that are not generally analytically soluable. The basis for understanding optical phenomena such as photonic crystals and band gaps, anomalous diffraction, mechanisms for optical confinement, optical fibers (new and old), nonlinearities, and integrated optical devices. Methods covered include linear algebra and eigensystems for Maxwell's equations, symmetry groups and representation theory, Bloch's theorem, numerical eigensolver methods, time and frequency-domain computation, perturbation theory, and coupled-mode theories.S. G. Johnson",Mathematics,2022
18.369[J] Mathematical Methods in Nanophotonics,"18.376[J] Wave Propagation()Not offered regularly; consult department(Same subject as1.138[J],2.062[J])Prereq:2.003and18.075Units: 3-0-9Theoretical concepts and analysis of wave problems in science and engineering with examples chosen from elasticity, acoustics, geophysics, hydrodynamics, blood flow, nondestructive evaluation, and other applications.  Progressive waves, group velocity and dispersion, energy density and transport. Reflection, refraction and transmission of plane waves by an interface. Mode conversion in elastic waves. Rayleigh waves. Waves due to a moving load. Scattering by a two-dimensional obstacle.  Reciprocity theorems. Parabolic approximation. Waves on the sea surface. Capillary-gravity waves. Wave resistance. Radiation of surface waves. Internal waves in stratified fluids.  Waves in rotating media.  Waves in random media.T. R. Akylas, R. R. Rosales",Mathematics,2022
18.376[J] Wave Propagation,"18.377[J] Nonlinear Dynamics and Waves()(Same subject as1.685[J],2.034[J])Prereq: Permission of instructorUnits: 3-0-9A unified treatment of nonlinear oscillations and wave phenomena with applications to mechanical, optical, geophysical, fluid, electrical and flow-structure interaction problems. Nonlinear free and forced vibrations; nonlinear resonances; self-excited oscillations; lock-in phenomena.  Nonlinear dispersive and nondispersive waves; resonant wave interactions; propagation of wave pulses and nonlinear Schrodinger equation.  Nonlinear long waves and breaking; theory of characteristics; the Korteweg-de Vries equation; solitons and solitary wave interactions.  Stability of shear flows.  Some topics and applications may vary from year to year.Staff",Mathematics,2022
18.377[J] Nonlinear Dynamics and Waves,"18.384 Undergraduate Seminar in Physical Mathematics()Prereq:12.006,18.300,18.354, or permission of instructorUnits: 3-0-9Covers the mathematical modeling of physical systems, with emphasis on the reading and presentation of papers. Addresses a broad range of topics, with particular focus on macroscopic physics and continuum systems: fluid dynamics, solid mechanics, and biophysics. Instruction and practice in written and oral communication provided. Enrollment limited.N. Derr",Mathematics,2022
18.384 Undergraduate Seminar in Physical Mathematics,"18.385[J] Nonlinear Dynamics and Chaos()(Same subject as2.036[J])Prereq:18.03or18.032Units: 3-0-9Introduction to the theory of nonlinear dynamical systems with applications from science and engineering. Local and global existence of solutions, dependence on initial data and parameters. Elementary bifurcations, normal forms. Phase plane, limit cycles, relaxation oscillations, Poincare-Bendixson theory. Floquet theory. Poincare maps. Averaging. Near-equilibrium dynamics. Synchronization. Introduction to chaos. Universality. Strange attractors. Lorenz and Rossler systems. Hamiltonian dynamics and KAM theory. Uses MATLAB computing environment.Staff",Mathematics,2022
18.385[J] Nonlinear Dynamics and Chaos,18.397 Mathematical Methods in Physics()Not offered regularly; consult departmentPrereq:18.745or some familiarity with Lie theoryUnits: 3-0-9Content varies from year to year. Recent developments in quantum field theory require mathematical techniques not usually covered in standard graduate subjects.Staff,Mathematics,2022
18.397 Mathematical Methods in Physics,"18.400[J] Computability and Complexity Theory()(Same subject as6.1400[J])Prereq: (6.1200and6.1210) or permission of instructorUnits: 4-0-8Lecture:TR2.30-4(37-212)Recitation:F11(4-257) orF1(24-121)+finalMathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.R. WilliamsTextbooks (Spring 2025)",Mathematics,2022
18.400[J] Computability and Complexity Theory,"18.404 Theory of Computation()(Subject meets with6.5400[J],18.4041[J])Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems.M. Sipser",Mathematics,2022
18.404 Theory of Computation,"18.4041[J] Theory of Computation()(Same subject as6.5400[J])(Subject meets with18.404)Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.M. Sipser",Mathematics,2022
18.4041[J] Theory of Computation,"18.405[J] Advanced Complexity Theory()(Same subject as6.5410[J])Prereq:18.404Units: 3-0-9Lecture:TR11-12.30(4-163)Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.D. MinzerNo textbook information available",Mathematics,2022
18.405[J] Advanced Complexity Theory,18.408 Topics in Theoretical Computer Science()Prereq: Permission of instructorUnits: 3-0-9Study of areas of current interest in theoretical computer science. Topics vary from term to term.J. Kelner,Mathematics,2022
18.408 Topics in Theoretical Computer Science,"18.410[J] Design and Analysis of Algorithms(,)(Same subject as6.1220[J])Prereq:6.1200and6.1210Units: 4-0-8Lecture:TR11-12.30(32-123)Recitation:F9(36-112) orF10(36-112) orF11(36-112) orF12(36-112) orF1(36-112) orF2(36-112) orF3(36-112) orF10(24-121) orF11(4-265) orF12(4-265) orF1(4-265) orF2(24-121) orF3(24-121)+finalTechniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.Fall:S. RaghuramanSpring:S. RaghuramanTextbooks (Spring 2025)",Mathematics,2022
18.410[J] Design and Analysis of Algorithms,"18.413 Introduction to Computational Molecular Biology()(Subject meets with18.417)Prereq:6.1210or permission of instructorUnits: 3-0-9Introduction to computational molecular biology with a focus on the basic computational algorithms used to solve problems in practice. Covers classical techniques in the field for solving problems such as genome sequencing, assembly, and search; detecting genome rearrangements; constructing evolutionary trees; analyzing mass spectrometry data; connecting gene expression to cellular function; and machine learning for drug discovery. Prior knowledge of biology is not required. Particular emphasis on problem solving, collaborative learning, theoretical analysis, and practical implementation of algorithms. Students taking graduate version complete additional and more complex assignments.B. Berger",Mathematics,2022
18.413 Introduction to Computational Molecular Biology,"18.415[J] Advanced Algorithms()(Same subject as6.5210[J])Prereq:6.1220and (6.1200,6.3700, or18.600)Units: 5-0-7First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.D. Karger",Mathematics,2022
18.415[J] Advanced Algorithms,"18.416[J] Randomized Algorithms()(Same subject as6.5220[J])Prereq: (6.1200or6.3700) and (6.1220or6.5210)Units: 5-0-7Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.Staff",Mathematics,2022
18.416[J] Randomized Algorithms,"18.417 Introduction to Computational Molecular Biology()(Subject meets with18.413)Prereq:6.1210or permission of instructorUnits: 3-0-9Introduction to computational molecular biology with a focus on the basic computational algorithms used to solve problems in practice. Covers classical techniques in the field for solving problems such as genome sequencing, assembly, and search; detecting genome rearrangements; constructing evolutionary trees; analyzing mass spectrometry data; connecting gene expression to cellular function; and machine learning for drug discovery. Prior knowledge of biology is not required. Particular emphasis on problem solving, collaborative learning, theoretical analysis, and practical implementation of algorithms. Students taking graduate version complete additional and more complex assignments.B. Berger",Mathematics,2022
18.417 Introduction to Computational Molecular Biology,"18.418[J] Topics in Computational Molecular Biology()(Same subject asHST.504[J])Prereq:6.8701,18.417, or permission of instructorUnits: 3-0-9Covers current research topics in computational molecular biology. Recent research papers presented from leading conferences such as the International Conference on Computational Molecular Biology (RECOMB) and the Conference on Intelligent Systems for Molecular Biology (ISMB). Topics include original research (both theoretical and experimental) in comparative genomics, sequence and structure analysis, molecular evolution, proteomics, gene expression, transcriptional regulation, biological networks, drug discovery, and privacy. Recent research by course participants also covered. Participants will be expected to present individual projects to the class.B. Berger",Mathematics,2022
18.418[J] Topics in Computational Molecular Biology,"18.424 Seminar in Information Theory()Prereq: (6.3700,18.05, or18.600) and (18.06,18.700, or18.701)Units: 3-0-9Considers various topics in information theory, including data compression, Shannon's Theorems, and error-correcting codes. Students present and discuss the subject matter. Instruction and practice in written and oral communication provided. Enrollment limited.J. Gaitonde",Mathematics,2022
18.424 Seminar in Information Theory,"18.425[J] Foundations of Cryptography()(Same subject as6.5620[J])Prereq:6.1220,6.1400, or18.4041Units: 3-0-9A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives such as public-key encryption, digital signatures, and pseudo-random number generation, as well as advanced cryptographic primitives such as zero-knowledge proofs, homomorphic encryption, and secure multiparty computation.Staff",Mathematics,2022
18.425[J] Foundations of Cryptography,18.434 Seminar in Theoretical Computer Science()Prereq:6.1220Units: 3-0-9Topics vary from year to year. Students present and discuss the subject matter. Instruction and practice in written and oral communication provided. Enrollment limited.D. Minzer,Mathematics,2022
18.434 Seminar in Theoretical Computer Science,"18.435[J] Quantum Computation()(Same subject as2.111[J],6.6410[J],8.370[J])Prereq:8.05,18.06,18.700,18.701, or18.C06Units: 3-0-9Provides an introduction to the theory and practice of quantum computation. Topics covered: physics of information processing; quantum algorithms including the factoring algorithm and Grover's search algorithm; quantum error correction; quantum communication and cryptography. Knowledge of quantum mechanics helpful but not required.P. Shor",Mathematics,2022
18.435[J] Quantum Computation,"18.436[J] Quantum Information Science()(Same subject as6.6420[J],8.371[J])Prereq:18.435Units: 3-0-9Lecture:MW9.30-11(4-163)Examines quantum computation and quantum information. Topics include quantum circuits, the quantum Fourier transform and search algorithms, the quantum operations formalism, quantum error correction, Calderbank-Shor-Steane and stabilizer codes, fault tolerant quantum computation, quantum data compression, quantum entanglement, capacity of quantum channels, and quantum cryptography and the proof of its security. Prior knowledge of quantum mechanics required.I. ChuangTextbooks (Spring 2025)",Mathematics,2022
18.436[J] Quantum Information Science,"18.437[J] Distributed Algorithms()(Same subject as6.5250[J])Prereq:6.1220Units: 3-0-9Design and analysis of algorithms, emphasizing those suitable for use in distributed networks. Covers various topics includingÂ distributed graph algorithms, locality constraints,Â bandwidth limitations and communication complexity,Â process synchronization, allocation of computational resources, fault tolerance, and asynchrony. No background in distributed systems required.Staff",Mathematics,2022
18.437[J] Distributed Algorithms,"18.453 Combinatorial Optimization()(Subject meets with18.4531)Prereq:18.06,18.700, or18.701Units: 3-0-9Thorough treatment of linear programming and combinatorial optimization. Topics include matching theory, network flow, matroid optimization, and how to deal with NP-hard optimization problems. Prior exposure to discrete mathematics (such as 18.200) helpful.Staff",Mathematics,2022
18.453 Combinatorial Optimization,"18.4531 Combinatorial Optimization()(Subject meets with18.453)Prereq:18.06,18.700, or18.701Units: 3-0-9Thorough treatment of linear programming and combinatorial optimization. Topics include matching theory, network flow, matroid optimization, and how to deal with NP-hard optimization problems. Prior exposure to discrete mathematics (such as 18.200) helpful. Students in Course 18 must register for the undergraduate version, 18.453.Staff",Mathematics,2022
18.4531 Combinatorial Optimization,"18.455 Advanced Combinatorial Optimization()Prereq:18.453or permission of instructorUnits: 3-0-9Advanced treatment of combinatorial optimization with an emphasis on combinatorial aspects. Non-bipartite matchings, submodular functions, matroid intersection/union, matroid matching, submodular flows, multicommodity flows, packing and connectivity problems, and other recent developments.M. X. Goemans",Mathematics,2022
18.455 Advanced Combinatorial Optimization,"18.456[J] Algebraic Techniques and Semidefinite Optimization()(Same subject as6.7230[J])Prereq:6.7210or15.093Units: 3-0-9Theory and computational techniques for optimization problems involving polynomial equations and inequalities with particular, emphasis on the connections with semidefinite optimization. Develops algebraic and numerical approaches of general applicability, with a view towards methods that simultaneously incorporate both elements, stressing convexity-based ideas, complexity results, and efficient implementations. Examples from several engineering areas, in particular systems and control applications. Topics include semidefinite programming, resultants/discriminants, hyperbolic polynomials, Groebner bases, quantifier elimination, and sum of squares.Staff",Mathematics,2022
6.100A Introduction to Computer Science Programming in Python,"6.100A Introduction to Computer Science Programming in Python(,); first half of termPrereq: NoneUnits: 2-0-4Credit cannot also be received for6.100LURL:https://introcomp.mit.edu/spring25Ends Mar 21.Lecture:MW3-4.30(26-100)Recitation:F10(5-134) orF11(5-134,24-121) orF12(24-121) orF1(5-134) orF2(5-134) orF1(5-217) orF2(5-217)Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2023
6.100B Introduction to Computational Thinking and Data Science,"6.100B Introduction to Computational Thinking and Data Science(,); second half of termPrereq:6.100Aor permission of instructorUnits: 2-0-4Credit cannot also be received for9.C20,16.C20,18.C20,CSE.C20URL:https://introcomp.mit.edu/spring25Begins Mar 31.Lecture:MW3-4.30(26-100)Recitation:F10(5-134) orF11(5-134,24-121) orF12(24-121) orF1(5-134) orF2(5-134) orF1(5-217) orF2(5-217)Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2023
6.100L Introduction to Computer Science and Programming,"6.100L Introduction to Computer Science and Programming(,)Prereq: NoneUnits: 2-0-4Credit cannot also be received for6.100AURL:https://introcomp.mit.edu/6.100L_sp25Lecture:MW3-4.30(34-101)Recitation:F10(32-123)Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Lectures are viewed outside of class; in-class time is dedicated to problem-solving and discussion. Combination of 6.100L and 6.100B or 16.C20 counts as REST subject.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2023
6.1010 Fundamentals of Programming,"6.1010 Fundamentals of Programming(,)Prereq:6.100AUnits: 2-4-6Lecture:MW9(32-124) orMW10(32-124,32-144) orMW11(56-154,37-212) orMW1(4-163,32-124) orMW2(4-163) orMW3(3-270) orMW12(32-124)Lab:F10-1(32-044) orF2-5(32-044)+finalIntroduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion. Â Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.Fall:R. MillerSpring:A. HartzNo textbook information available",EECS,2023
6.1020 Software Construction,"6.1020 Software Construction()Prereq:6.1010Units: 3-0-12Lecture:TR9.30-11(26-100)+finalIntroduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.M. GoldmanNo required or recommended textbooks",EECS,2023
6.1040 Software Design,"6.1040 Software Design()Prereq:6.1020and6.1200Units: 4-0-14Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.A. Satyanarayan",EECS,2023
6.1060 Software Performance Engineering,"6.1060 Software Performance Engineering()Prereq:6.1020,6.1210, and6.1910Units: 3-12-3Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.C. Leiserson",EECS,2023
6.5060 Algorithm Engineering,"6.5060 Algorithm Engineering()Prereq:6.1060and6.1220Units: 3-0-9Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.Staff",EECS,2023
6.5080 Multicore Programming,"6.5080 Multicore Programming()(Subject meets with6.5081)Prereq:6.1210Units: 4-0-8Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.N. Shavit",EECS,2023
6.5081 Multicore Programming,"6.5081 Multicore Programming()(Subject meets with6.5080)Prereq:6.1210Units: 4-0-8Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.Staff",EECS,2023
6.1100 Computer Language Engineering,"6.1100 Computer Language Engineering()Prereq:6.1020and6.1910Units: 4-4-4Lecture:MWF11(32-123)Recitation:TR12(32-155)Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.M. RinardNo textbook information available",EECS,2023
6.1120 Dynamic Computer Language Engineering,"6.1120 Dynamic Computer Language Engineering()Prereq:6.1020or6.1910Units: 4-4-4Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.M. Rinard",EECS,2023
6.5110 Foundations of Program Analysis,"6.5110 Foundations of Program Analysis()Not offered regularly; consult departmentPrereq:6.1100Units: 3-0-9Presents major principles and techniques for program analysis. Includes formal semantics, type systems and type-based program analysis, abstract interpretation and model checking and synthesis. Emphasis on Haskell and Ocaml, but no prior experience in these languages is assumed. Student assignments include implementing of techniques covered in class, including building simple verifiers.A. Solar-Lezama",EECS,2023
6.5120 Formal Reasoning About Programs,"6.5120 Formal Reasoning About Programs()Prereq:6.1020and6.1200Units: 3-0-9Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.A. Chlipala",EECS,2023
6.5150 Large-scale Symbolic Systems,"6.5150 Large-scale Symbolic Systems()(Subject meets with6.5151)Prereq:6.4100or permission of instructorUnits: 3-0-9Lecture:MWF2(35-225)Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.G. J. SussmanNo textbook information available",EECS,2023
6.5151 Large-scale Symbolic Systems,"6.5151 Large-scale Symbolic Systems()(Subject meets with6.5150)Prereq:6.4100or permission of instructorUnits: 3-0-9Lecture:MWF2(35-225)Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.G. SussmanTextbooks (Spring 2025)",EECS,2023
6.5160[J] Classical Mechanics: A Computational Approach,"6.5160[J] Classical Mechanics: A Computational Approach()(Same subject as8.351[J],12.620[J])Prereq:Physics I (GIR),18.03, and permission of instructorUnits: 3-3-6Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. PoincarÃ© integral invariants, PoincarÃ©-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.J. Wisdom, G. J. Sussman",EECS,2023
6.1200[J] Mathematics for Computer Science,"6.1200[J] Mathematics for Computer Science(,)(Same subject as18.062[J])Prereq:Calculus I (GIR)Units: 5-0-7Lecture:TR2.30-4(26-100)Recitation:WF10(38-166,36-155) orWF11(38-166,36-155,26-168) orWF12(38-166,36-156,26-168) orWF1(38-166,36-156,35-310) orWF2(38-166,36-156,35-308) orWF3(38-166,36-156)+finalElementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.Fall:Z. AbelSpring:Z. AbelNo textbook information available",EECS,2023
6.120A Discrete Mathematics and Proof for Computer Science,"6.120A Discrete Mathematics and Proof for Computer Science(); second half of termPrereq:Calculus I (GIR)Units: 3-0-3Begins Mar 31.Lecture:TR1-2.30(32-144)Recitation:WF1(13-3101) orWF2(13-3101)+finalSubset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.P. JailletNo textbook information available",EECS,2023
6.1210 Introduction to Algorithms,"6.1210 Introduction to Algorithms(,)Prereq:6.100Aand (6.1200or (6.120Aand (6.3700,6.3800,18.05, or18.600)))Units: 5-0-7Lecture:TR11-12.30(26-100)Recitation:WF10(34-304,34-303,36-156) orWF11(34-304,34-303,34-301) orWF12(34-304,34-301) orWF1(34-304,34-303,34-301) orWF2(34-304,34-303,34-301) orWF3(34-304,34-301) orWF4(34-304) orWF10(36-153) orWF4(36-155)+finalIntroduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems. Enrollment may be limited.Fall:B. ChapmanSpring:B. ChapmanNo textbook information available",EECS,2023
6.1220[J] Design and Analysis of Algorithms,"6.1220[J] Design and Analysis of Algorithms(,)(Same subject as18.410[J])Prereq:6.1200and6.1210Units: 4-0-8Lecture:TR11-12.30(32-123)Recitation:F9(36-112) orF10(36-112) orF11(36-112) orF12(36-112) orF1(36-112) orF2(36-112) orF3(36-112) orF10(24-121) orF11(4-265) orF12(4-265) orF1(4-265) orF2(24-121) orF3(24-121)+finalTechniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.Fall:S. RaghuramanSpring:S. RaghuramanTextbooks (Spring 2025)",EECS,2023
6.1400[J] Computability and Complexity Theory,"6.1400[J] Computability and Complexity Theory()(Same subject as18.400[J])Prereq: (6.1200and6.1210) or permission of instructorUnits: 4-0-8Lecture:TR2.30-4(37-212)Recitation:F11(4-257) orF1(24-121)+finalMathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.R. WilliamsTextbooks (Spring 2025)",EECS,2023
6.1420 Fixed Parameter and Fine-grained Computation,"6.1420 Fixed Parameter and Fine-grained Computation()Prereq:6.1200,6.1210, and (6.1220,6.1400, or18.404)Units: 3-0-9An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.V. Vassilevska Williams",EECS,2023
6.5210[J] Advanced Algorithms,"6.5210[J] Advanced Algorithms()(Same subject as18.415[J])Prereq:6.1220and (6.1200,6.3700, or18.600)Units: 5-0-7First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.D. Karger",EECS,2023
6.5220[J] Randomized Algorithms,"6.5220[J] Randomized Algorithms()(Same subject as18.416[J])Prereq: (6.1200or6.3700) and (6.1220or6.5210)Units: 5-0-7Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.Staff",EECS,2023
6.5230 Advanced Data Structures,6.5230 Advanced Data Structures()Prereq:6.1220Units: 3-0-9More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.Staff,EECS,2023
6.5240 Sublinear Time Algorithms,"6.5240 Sublinear Time Algorithms()Prereq:6.1220or permission of instructorUnits: 3-0-9Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.R. Rubinfeld",EECS,2023
6.5250[J] Distributed Algorithms,"6.5250[J] Distributed Algorithms()(Same subject as18.437[J])Prereq:6.1220Units: 3-0-9Design and analysis of algorithms, emphasizing those suitable for use in distributed networks. Covers various topics includingÂ distributed graph algorithms, locality constraints,Â bandwidth limitations and communication complexity,Â process synchronization, allocation of computational resources, fault tolerance, and asynchrony. No background in distributed systems required.Staff",EECS,2023
"6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra","6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra()Prereq:6.1220or permission of instructorUnits: 3-0-9Lecture:TR11-12.30(32-082)Covers discrete geometry and algorithms underlying the reconfiguration of foldable structures, with applications to robotics, manufacturing, and biology. Linkages made from one-dimensional rods connected by hinges: constructing polynomial curves, characterizing rigidity, characterizing unfoldable versus locked, protein folding. Folding two-dimensional paper (origami): characterizing flat foldability, algorithmic origami design, one-cut magic trick. Unfolding and folding three-dimensional polyhedra: edge unfolding, vertex unfolding, gluings, Alexandrov's Theorem, hinged dissections.E. DemaineTextbooks (Spring 2025)",EECS,2023
6.5320 Geometric Computing,"6.5320 Geometric Computing()Prereq:6.1220Units: 3-0-9Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.Staff",EECS,2023
6.5340 Topics in Algorithmic Game Theory,"6.5340 Topics in Algorithmic Game Theory()Not offered regularly; consult departmentPrereq:6.1210or6.1220Units: 3-0-9Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.K. Daskalakis",EECS,2023
6.5350 Matrix Multiplication and Graph Algorithms,"6.5350 Matrix Multiplication and Graph Algorithms()Prereq:6.1220Units: 3-0-9Lecture:TR11-12.30(45-102)Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.V. Vassilevska WilliamsNo textbook information available",EECS,2023
6.5400[J] Theory of Computation,"6.5400[J] Theory of Computation()(Same subject as18.4041[J])(Subject meets with18.404)Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.M. Sipser",EECS,2023
6.5410[J] Advanced Complexity Theory,"6.5410[J] Advanced Complexity Theory()(Same subject as18.405[J])Prereq:18.404Units: 3-0-9Lecture:TR11-12.30(4-163)Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.D. MinzerNo textbook information available",EECS,2023
6.5420 Randomness and Computation,"6.5420 Randomness and Computation()Prereq:6.1220and18.4041Units: 3-0-9The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.R. Rubinfeld",EECS,2023
6.5430 Quantum Complexity Theory,"6.5430 Quantum Complexity Theory()Prereq:6.1400,18.4041, and18.435Units: 3-0-9Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.Staff",EECS,2023
6.1600 Foundations of Computer Security,"6.1600 Foundations of Computer Security()Prereq: (6.1210and (6.1800or6.1810)) or permission of instructorUnits: 4-0-8Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.S. Devadas",EECS,2023
6.5610 Applied Cryptography,"6.5610 Applied Cryptography()Prereq:6.1200and (6.1800or6.1810)Units: 4-0-8Lecture:MW11-12.30(6-120)Recitation:F11(1-190)Covers advanced applications of cryptography, implementation of cryptographic primitives, and cryptanalysis. Topics may include: proof systems; zero knowledge; secret sharing; multiparty computation; fully homomorphic encryption; electronic voting; design of block ciphers and hash functions; elliptic-curve and lattice-based cryptosystems; and algorithms for collision-finding, discrete-log, and factoring. Assignments include a final group project. Topics may vary from year to year.Y. KalaiNo textbook information available",EECS,2023
6.5620[J] Foundations of Cryptography,"6.5620[J] Foundations of Cryptography()(Same subject as18.425[J])Prereq:6.1220,6.1400, or18.4041Units: 3-0-9A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives such as public-key encryption, digital signatures, and pseudo-random number generation, as well as advanced cryptographic primitives such as zero-knowledge proofs, homomorphic encryption, and secure multiparty computation.Staff",EECS,2023
6.5630 Advanced Topics in Cryptography,6.5630 Advanced Topics in Cryptography()Prereq:6.5620Units: 3-0-9In-depth exploration of recent results in cryptography.V. Vaikuntanathan,EECS,2023
6.5660 Computer Systems Security,"6.5660 Computer Systems Security()Prereq:6.1020and (6.1800or6.1810)Units: 3-6-3Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.Staff",EECS,2023
6.1800 Computer Systems Engineering,"6.1800 Computer Systems Engineering()Prereq:6.1910Units: 5-1-6URL:https://mit.edu/6.1800Lecture:MW2(26-100)Lab:F1(36-144) orF2(36-144) orF1(26-142) orF2(26-142) orF1(26-210) orF2(26-210) orF1(26-314) orF2(26-314) orF1(4-149) orF2(4-149) orF1(4-261) orF2(4-261) orF1(4-145) orF2(4-145) orF1(24-307) orF2(24-307)Recitation:TR10(34-301,36-153,36-156) orTR11(34-301,36-153,36-156,34-303) orTR12(34-303,36-155) orTR1(34-302,35-310,36-155,24-307) orTR2(34-302,35-308,24-307)+finalTopics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.K. LaCurtsTextbooks (Spring 2025)",EECS,2023
6.1810 Operating System Engineering,"6.1810 Operating System Engineering()Prereq:6.1910Units: 3-0-9Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.M. Kaashoek",EECS,2023
6.1820[J] Mobile and Sensor Computing,"6.1820[J] Mobile and Sensor Computing()(Same subject asMAS.453[J])Prereq:6.1800or permission of instructorUnits: 3-0-9Lecture:TR1-2.30(24-121)Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.F. AdibNo textbook information available",EECS,2023
6.1850 Computer Systems and Society,"6.1850 Computer Systems and Society()Prereq:6.1800Units: 3-0-9Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.K. Lacurts",EECS,2023
6.5810 Operating System Engineering,"6.5810 Operating System Engineering()Prereq:6.1020and (6.1800or6.1810)Units: 3-6-3Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.Staff",EECS,2023
6.5820 Computer Networks,"6.5820 Computer Networks()Prereq:6.1800or permission of instructorUnits: 4-0-8Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.H. Balakrishnan",EECS,2023
6.5830 Database Systems,"6.5830 Database Systems()(Subject meets with6.5831)Prereq: ((6.1210or6.1220) and (6.1800or6.1810)) or permission of instructorUnits: 3-0-9Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.S. R. Madden",EECS,2023
6.5831 Database Systems,"6.5831 Database Systems()(Subject meets with6.5830)Prereq: ((6.1210or6.1220) and (6.1800or6.1810)) or permission of instructorUnits: 3-0-9Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.S. R. Madden",EECS,2023
6.5840 Distributed Computer Systems Engineering,"6.5840 Distributed Computer Systems Engineering()Prereq:6.1800,6.1810, or permission of instructorUnits: 3-0-9Lecture:TR1-2.30(54-100)+finalAbstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.R. MorrisNo textbook information available",EECS,2023
6.5850 Principles of Computer Systems,"6.5850 Principles of Computer Systems()Not offered regularly; consult departmentPrereq: Permission of instructorUnits: 3-0-9Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.M. F. Kaashoek, B. Lampson, N. B. Zeldovich",EECS,2023
6.1903 Introduction to Low-level Programming in C and Assembly,"6.1903 Introduction to Low-level Programming in C and Assembly(); first half of termPrereq:6.100AUnits: 2-2-2Credit cannot also be received for6.1904Ends Mar 21.Lecture:M9.30-11(32-123)Lab:W9.30-12(38-530) orW12-2.30(38-530) orW2.30-5(38-530)Recitation:T9.30-11(45-230) orT11-12.30(45-230) orT1-2.30(45-230) orT2.30-4(2-190) orT9.30-11(32-144) orT11-12.30(32-141) orT1-2.30(32-155) orT2.30-4(36-155)Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.J. D. Steinmeyer, S. Z. Hanono WachmanNo textbook information available",EECS,2023
6.1904 Introduction to Low-level Programming in C and Assembly,"6.1904 Introduction to Low-level Programming in C and Assembly(); second half of termPrereq:6.100AUnits: 2-2-2Credit cannot also be received for6.1903Begins Mar 31.Lecture:M9.30-11(32-123)Lab:W9.30-12(38-530) orW12-2.30(38-530) orW2.30-5(38-530)Recitation:T9.30-11(45-230) orT11-12.30(45-230) orT1-2.30(45-230) orT2.30-4(2-190) orT9.30-11(32-144) orT11-12.30(32-141) orT1-2.30(32-155) orT2.30-4(36-155)Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.J. D. Steinmeyer, S. Z. Hanono WachmanNo textbook information available",EECS,2023
6.1910 Computation Structures,"6.1910 Computation Structures(,)Prereq:Physics II (GIR),6.100A, and (Coreq:6.1903or6.1904); or permission of instructorUnits: 4-0-8Lecture:TR1(32-123)Recitation:WF10(34-302) orWF11(34-302) orWF12(34-302) orWF1(34-302) orWF2(34-302) orWF3(34-302) orWF10(35-308) orWF11(35-308) orWF12(35-308) orWF1(35-308) orWF2(8-205) orWF3(8-205)Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware description language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.Fall:S. Hanono WachmanSpring:S. Hanono WachmanNo textbook information available",EECS,2023
6.1920 Constructive Computer Architecture,"6.1920 Constructive Computer Architecture()Prereq:6.1910Units: 3-8-1Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.Staff",EECS,2023
6.5900 Computer System Architecture,"6.5900 Computer System Architecture()Prereq:6.1910Units: 4-0-8Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.J. Emer",EECS,2023
6.5910 Complex Digital Systems Design,"6.5910 Complex Digital Systems Design()Not offered regularly; consult departmentPrereq:6.1910Units: 5-5-2Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.Staff",EECS,2023
6.5920 Parallel Computing,"6.5920 Parallel Computing()Not offered regularly; consult departmentPrereq:6.1910or permission of instructorUnits: 3-0-9Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.Staff",EECS,2023
6.5930 Hardware Architecture for Deep Learning,"6.5930 Hardware Architecture for Deep Learning()(Subject meets with6.5931)Prereq:6.1910and (6.3000or6.3900)Units: 3-3-6Lecture:MW1-2.30(54-100)Lab:TBARecitation:F11(32-155)Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.V. Sze, J. EmerNo textbook information available",EECS,2023
6.5931 Hardware Architecture for Deep Learning,"6.5931 Hardware Architecture for Deep Learning()(Subject meets with6.5930)Prereq:6.1910and (6.3000or6.3900)Units: 3-3-6Lecture:MW1-2.30(54-100)Lab:TBARecitation:F11(32-155)Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.V. Sze, J. EmerNo textbook information available",EECS,2023
6.5940 TinyML and Efficient Deep Learning Computing,"6.5940 TinyML and Efficient Deep Learning Computing()Prereq:6.1910and6.3900Units: 3-0-9Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.S. Han",EECS,2023
6.5950 Secure Hardware Design,"6.5950 Secure Hardware Design()(Subject meets with6.5951)Prereq:6.1910Units: 3-0-9URL:https://shd.mit.edu/Lecture:MW1-2.30(E25-111)IntroductionÂ to basic concepts, principles, and implementation issues in the designing of secure hardware systems. Through a mixture of lectures and paper discussions, covers state-of-the-art security attacks and defenses targeting the computer architecture, digital circuits, and physics layers of computerÂ systems. Emphasizes both the conceptual and the practical aspects of security issues in modern hardware systems. Topics include microarchitectural timing side channels, speculative execution attacks, RowHammer, Trusted Execution Environment, physical attacks, hardware support for software security, and verification of digital systems. Students taking graduate version complete additional assignments.M. YanNo textbook information available",EECS,2023
6.5951 Secure Hardware Design,"6.5951 Secure Hardware Design()(Subject meets with6.5950)Prereq:6.1910Units: 3-0-9URL:https://shd.mit.edu/Lecture:MW1-2.30(E25-111)IntroductionÂ to basic concepts, principles, and implementation issues in the designing of secure hardware systems. Through a mixture of lectures and paper discussions, covers state-of-the-art security attacks and defenses targeting the computer architecture, digital circuits, and physics layers of computerÂ systems. Emphasizes both the conceptual and the practical aspects of security issues in modern hardware systems. Topics include microarchitectural timing side channels, speculative execution attacks, RowHammer, Trusted Execution Environment, physical attacks, hardware support for software security, and verification of digital systems. Students taking graduate version complete additional assignments.M. YanNo textbook information available",EECS,2023
18.01 Calculus,"18.01 Calculus(,)Prereq: NoneUnits: 5-0-7Credit cannot also be received for18.01A,CC.1801,ES.1801,ES.181ALecture:TR11,F2(2-135)Recitation:MW10(2-135)+finalDifferentiation and integration of functions of one variable, with applications. Informal treatment of limits and continuity. Differentiation: definition, rules, application to graphing, rates, approximations, and extremum problems. Indefinite integration; separable first-order differential equations. Definite integral; fundamental theorem of calculus. Applications of integration to geometry and science. Elementary functions. Techniques of integration. Polar coordinates. L'Hopital's rule. Improper integrals. Infinite series: geometric, p-harmonic, simple comparison tests, power series for some elementary functions.Fall:P. SeidelSpring:T. RudNo required or recommended textbooks",Mathematics,2023
18.01A Calculus,"18.01A Calculus(); first half of termPrereq: Knowledge of differentiation and elementary integrationUnits: 5-0-7Credit cannot also be received for18.01,CC.1801,ES.1801,ES.181ASix-week review of one-variable calculus, emphasizing material not on the high-school AB syllabus: integration techniques and applications, improper integrals, infinite series, applications to other topics, such as probability and statistics, as time permits. Prerequisites: one year of high-school calculus or the equivalent, with a score of 5 on the AB Calculus test (or the AB portion of the BC test, or an equivalent score on a standard international exam), or equivalent college transfer credit, or a passing grade on the first half of the 18.01 advanced standing exam.D. Jerison",Mathematics,2023
18.02 Calculus,"18.02 Calculus(,)Prereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.022,18.02A,CC.1802,ES.1802,ES.182ALecture:TR11,F2(54-100)Recitation:MW10(2-146) orMW11(2-146) orMW12(2-136) orMW1(2-146) orMW2(2-146)+finalCalculus of several variables. Vector algebra in 3-space, determinants, matrices. Vector-valued functions of one variable, space motion. Scalar functions of several variables: partial differentiation, gradient, optimization techniques. Double integrals and line integrals in the plane; exact differentials and conservative fields; Green's theorem and applications, triple integrals, line and surface integrals in space, Divergence theorem, Stokes' theorem; applications.Fall:D. MaulikSpring:M. KingTextbooks (Spring 2025)",Mathematics,2023
18.02A Calculus,"18.02A Calculus(,,); second half of termPrereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.02,18.022,CC.1802,ES.1802,ES.182AAttend any 18.02 recitation.Lecture:TR11,F2 (BEGINS MAR 31)(54-100)Recitation:TBA+finalFirst half is taught during the last six weeks of the Fall term; covers material in the first half of 18.02 (through double integrals). Second half of 18.02A can be taken either during IAP (daily lectures) or during the second half of the Spring term; it covers the remaining material in 18.02.Fall:J. BushIAP:J. BushSpring:M. KingTextbooks (IAP 2025);Textbooks (Spring 2025)",Mathematics,2023
18.022 Calculus,"18.022 Calculus()Prereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.02,18.02A,CC.1802,ES.1802,ES.182ACalculus of several variables. Topics as in 18.02 but with more focus on mathematical concepts. Vector algebra, dot product, matrices, determinant. Functions of several variables, continuity, differentiability, derivative. Parametrized curves, arc length, curvature, torsion. Vector fields, gradient, curl, divergence. Multiple integrals, change of variables, line integrals, surface integrals. Stokes' theorem in one, two, and three dimensions.J. Zung",Mathematics,2023
18.03 Differential Equations,"18.03 Differential Equations(,)Prereq: None.Coreq:Calculus II (GIR)Units: 5-0-7Credit cannot also be received forCC.1803,ES.1803Lecture:MWF1(10-250)Recitation:TR9(2-132) orTR10(2-147,26-328) orTR11(2-139,2-131,26-328) orTR12(2-139,2-135,2-131) orTR1(4-163,1-375) orTR2(1-375,2-131) orTR3(2-139)+finalStudy of differential equations, including modeling physical systems. Solution of first-order ODEs by analytical, graphical, and numerical methods. Linear ODEs with constant coefficients. Complex numbers and exponentials. Inhomogeneous equations: polynomial, sinusoidal, and exponential inputs. Oscillations, damping, resonance. Fourier series. Matrices, eigenvalues, eigenvectors, diagonalization. First order linear systems: normal modes, matrix exponentials, variation of parameters. Heat equation, wave equation. Nonlinear autonomous systems: critical point analysis, phase plane diagrams.Fall:H. CohnSpring:B. PoonenNo textbook information available",Mathematics,2023
18.031 System Functions and the Laplace Transform,"18.031 System Functions and the Laplace Transform()Prereq: None.Coreq:18.03Units: 1-0-2 [P/D/F]Studies basic continuous control theory as well as representation of functions in the complex frequency domain. Covers generalized functions, unit impulse response, and convolution; and Laplace transform, system (or transfer) function, and the pole diagram. Includes examples from mechanical and electrical engineering.S. NadimpalliNo required or recommended textbooks",Mathematics,2023
18.032 Differential Equations,18.032 Differential Equations()Prereq: None.Coreq:Calculus II (GIR)Units: 5-0-7Lecture:MWF1(2-142)Recitation:TR11(2-142)+finalCovers much of the same material as 18.03 with more emphasis on theory. The point of view is rigorous and results are proven. Local existence and uniqueness of solutions.A. LawrieNo textbook information available,Mathematics,2023
18.04 Complex Variables with Applications,"18.04 Complex Variables with Applications()Prereq:Calculus II (GIR)and (18.03or18.032)Units: 4-0-8Credit cannot also be received for18.075,18.0751Complex algebra and functions; analyticity; contour integration, Cauchy's theorem; singularities, Taylor and Laurent series; residues, evaluation of integrals; multivalued functions, potential theory in two dimensions; Fourier analysis, Laplace transforms, and partial differential equations.J. Dunkel",Mathematics,2023
18.05 Introduction to Probability and Statistics,"18.05 Introduction to Probability and Statistics()Prereq:Calculus II (GIR)Units: 4-0-8Lecture:TR2.30-4,F4(32-082) orTR1-2.30,F2(32-082)+finalA unified introduction to probability, Bayesian inference, and frequentist statistics. Topics include: combinatorics, random variables, (joint) distributions, covariance, central limit theorem; Bayesian updating, odds, posterior prediction; significance tests, confidence intervals, bootstrapping, regression. Students also develop computational skills and statistical thinking by using R to simulate, analyze, and visualize data; and by exploring privacy, fairness, and causality in contemporary media and research. Flipped subject taught in a Technology Enabled Active Learning (TEAL) classroom to facilitate discussion, group problem solving, and coding studios with ample mentorship.J. BloomNo textbook information available",Mathematics,2023
18.06 Linear Algebra,"18.06 Linear Algebra(,)Prereq:Calculus II (GIR)Units: 4-0-8Credit cannot also be received for6.C06,18.700,18.C06,ES.1806Lecture:MWF10(26-100)Recitation:T9(2-131) orT11(2-136,4-159) orT12(4-159,2-105) orT1(2-132,2-135) orT2(2-132) orT3(2-361) orT10(2-131,2-132)+finalBasic subject on matrix theory and linear algebra, emphasizing topics useful in other disciplines, including systems of equations, vector spaces, determinants, eigenvalues, singular value decomposition, and positive definite matrices. Applications to least-squares approximations, stability of differential equations, networks, Fourier transforms, and Markov processes. Uses linear algebra software. Compared with 18.700, more emphasis on matrix algorithms and many applications.Fall:W. MinicozziSpring:N. SunTextbooks (Spring 2025)",Mathematics,2023
18.C06[J] Linear Algebra and Optimization,"18.C06[J] Linear Algebra and Optimization()(Same subject as6.C06[J])Prereq:Calculus II (GIR)Units: 5-0-7Credit cannot also be received for18.06,18.700,ES.1806Introductory course in linear algebra and optimization, assuming no prior exposure to linear algebra and starting from the basics, including vectors, matrices, eigenvalues, singular values, and least squares. Covers the basics in optimization including convex optimization, linear/quadratic programming, gradient descent, and regularization, building on insights from linear algebra. Explores a variety of applications in science and engineering, where the tools developed give powerful ways to understand complex systems and also extract structure from data.S. Johnson",Mathematics,2023
18.062[J] Mathematics for Computer Science,"18.062[J] Mathematics for Computer Science(,)(Same subject as6.1200[J])Prereq:Calculus I (GIR)Units: 5-0-7Lecture:TR2.30-4(26-100)Recitation:WF10(38-166,36-155) orWF11(38-166,36-155,26-168) orWF12(38-166,36-156,26-168) orWF1(38-166,36-156,35-310) orWF2(38-166,36-156,35-308) orWF3(38-166,36-156)+finalElementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.Fall:Z. AbelSpring:Z. AbelNo textbook information available",Mathematics,2023
18.063 Matrix Calculus for Machine Learning and Beyond(New),"18.063 Matrix Calculus for Machine Learning and Beyond(New)(); partial termPrereq:Calculus II (GIR)and18.06Units: 1-0-2 [P/D/F]Covers a coherent approach to matrix calculus, showing techniques that allow the student to think of a matrix holistically, rather than as an array of scalars; generalize and compute derivatives of important matrix factorizations and other complicated-looking operations; and understand how differentiation formulas must be reimagined in large-scale computing. Discusses ""adjoint"" or ""reverse-mode"" differentiation, custom vector-Jacobian products, and how modern automatic differentiation is more computer science than calculus.S. JohnsonNo textbook information available",Mathematics,2023
"18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning","18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning()(Subject meets with18.0651)Prereq:18.06Units: 3-0-9Lecture:TR9.30-11(32-141)Reviews linear algebra with applications to life sciences, finance, engineering, and big data. Covers singular value decomposition, weighted least squares, signal and image processing, principal component analysis, covariance and correlation matrices, directed and undirected graphs, matrix factorizations, neural nets, machine learning, and computations with large matrices.Z. ChenTextbooks (Spring 2025)",Mathematics,2023
"18.0651 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning","18.0651 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning()(Subject meets with18.065)Prereq:18.06Units: 3-0-9Lecture:TR9.30-11(32-141)Reviews linear algebra with applications to life sciences, finance, engineering, and big data. Covers singular value decomposition, weighted least squares, signal and image processing, principal component analysis, covariance and correlation matrices, directed and undirected graphs, matrix factorizations, neural nets, machine learning, and computations with large matrices. Students in Course 18 must register for the undergraduate version, 18.065.StaffNo textbook information available",Mathematics,2023
18.075 Methods for Scientists and Engineers,18.075 Methods for Scientists and Engineers()(Subject meets with18.0751)Prereq:Calculus II (GIR)and18.03Units: 3-0-9Credit cannot also be received for18.04Covers functions of a complex variable; calculus of residues. Includes ordinary differential equations; Bessel and Legendre functions; Sturm-Liouville theory; partial differential equations; heat equation; and wave equations.H. Cheng,Mathematics,2023
18.0751 Methods for Scientists and Engineers,"18.0751 Methods for Scientists and Engineers()(Subject meets with18.075)Prereq:Calculus II (GIR)and18.03Units: 3-0-9Credit cannot also be received for18.04Covers functions of a complex variable; calculus of residues. Includes ordinary differential equations; Bessel and Legendre functions; Sturm-Liouville theory; partial differential equations; heat equation; and wave equations. Students in Courses 6, 8, 12, 18, and 22 must register for undergraduate version, 18.075.H. Cheng",Mathematics,2023
18.085 Computational Science and Engineering I,"18.085 Computational Science and Engineering I(,,)(Subject meets with18.0851)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR1-2.30(4-145)+finalReview of linear algebra, applications to networks, structures, and estimation, finite difference and finite element solution of differential equations, Laplace's equation and potential flow, boundary-value problems, Fourier series, discrete Fourier transform, convolution. Frequent use of MATLAB in a wide range of scientific and engineering applications.Fall:P. ChaoSpring:P. ChaoSummer:StaffTextbooks (Spring 2025)",Mathematics,2023
18.0851 Computational Science and Engineering I,"18.0851 Computational Science and Engineering I(,,)(Subject meets with18.085)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR1-2.30(4-145)+finalReview of linear algebra, applications to networks, structures, and estimation, finite difference and finite element solution of differential equations, Laplace's equation and potential flow, boundary-value problems, Fourier series, discrete Fourier transform, convolution. Frequent use of MATLAB in a wide range of scientific and engineering applications. Students in Course 18 must register for the undergraduate version, 18.085.Fall:D. KouskoulasSummer:StaffNo textbook information available",Mathematics,2023
18.086 Computational Science and Engineering II,"18.086 Computational Science and Engineering II()Not offered regularly; consult department(Subject meets with18.0861)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9URL:http://math.mit.edu/18086/Initial value problems: finite difference methods, accuracy and stability, heat equation, wave equations, conservation laws and shocks, level sets, Navier-Stokes. Solving large systems: elimination with reordering, iterative methods, preconditioning, multigrid, Krylov subspaces, conjugate gradients. Optimization and minimum principles: weighted least squares, constraints, inverse problems, calculus of variations, saddle point problems, linear programming, duality, adjoint methods.Staff",Mathematics,2023
18.0861 Computational Science and Engineering II,"18.0861 Computational Science and Engineering II()Not offered regularly; consult department(Subject meets with18.086)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Initial value problems: finite difference methods, accuracy and stability, heat equation, wave equations, conservation laws and shocks, level sets, Navier-Stokes. Solving large systems: elimination with reordering, iterative methods, preconditioning, multigrid, Krylov subspaces, conjugate gradients. Optimization and minimum principles: weighted least squares, constraints, inverse problems, calculus of variations, saddle point problems, linear programming, duality, adjoint methods. Students in Course 18 must register for the undergraduate version, 18.086.Staff",Mathematics,2023
18.089 Review of Mathematics,"18.089 Review of Mathematics()Prereq: Permission of instructorUnits: 5-0-7One-week review of one-variable calculus (18.01), followed by concentrated study covering multivariable calculus (18.02), two hours per day for five weeks. Primarily for graduate students in Course 2N. Degree credit allowed only in special circumstances.T. Cummings",Mathematics,2023
18.090 Introduction to Mathematical Reasoning,"18.090 Introduction to Mathematical Reasoning()Prereq: None.Coreq:Calculus II (GIR)Units: 3-0-9Lecture:TR9.30-11(2-142)Focuses on understanding and constructing mathematical arguments. Discusses foundational topics (such as infinite sets, quantifiers, and methods of proof) as well as selected concepts from algebra (permutations, vector spaces, fields) and analysis (sequences of real numbers). Particularly suitable for students desiring additional experience with proofs before going on to more advanced mathematics subjects or subjects in related areas with significant mathematical content.S. DyatlovNo textbook information available",Mathematics,2023
18.091 Introduction to Metric Spaces(New),"18.091 Introduction to Metric Spaces(New)(); partial termPrereq:18.100AUnits: 1-0-2 [P/D/F]Covers metrics, open and closed sets, continuous functions (from a topological perspective), function spaces, completeness, and compactness. Aims to provide more complex concepts and proofs for students who have taken 18.100A as their real analysis subject.S. NadimpalliNo required or recommended textbooks",Mathematics,2023
18.094[J] Teaching College-Level Science and Engineering,"18.094[J] Teaching College-Level Science and Engineering()(Same subject as1.95[J],5.95[J],7.59[J],8.395[J])(Subject meets with2.978)Prereq: NoneUnits: 2-0-2 [P/D/F]Participatory seminar focuses on the knowledge and skills necessary for teaching science and engineering in higher education. Topics include theories of adult learning; course development; promoting active learning, problemsolving, and critical thinking in students; communicating with a diverse student body; using educational technology to further learning; lecturing; creating effective tests and assignments; and assessment and evaluation. Students research and present a relevant topic of particular interest. Appropriate for both novices and those with teaching experience.J. Rankin",Mathematics,2023
18.095 Mathematics Lecture Series,"18.095 Mathematics Lecture Series()Prereq:Calculus I (GIR)Units: 2-0-4 [P/D/F]Ten lectures by mathematics faculty members on interesting topics from both classical and modern mathematics. All lectures accessible to students with calculus background and an interest in mathematics. At each lecture, reading and exercises are assigned. Students prepare these for discussion in a weekly problem session.J. DunkelNo textbook information available",Mathematics,2023
18.098 Internship in Mathematics,"18.098 Internship in Mathematics(,,,)Prereq: Permission of instructorUnits arranged [P/D/F]TBA.Provides academic credit for students pursuing internships to gain practical experience in the applications of mathematical concepts and methods.Fall:T. CummingsIAP:T. CummingsSpring:T. CummingsSummer:T. CummingsNo required or recommended textbooks",Mathematics,2023
18.099 Independent Study,"18.099 Independent Study(,,,)Prereq: Permission of instructorUnits arrangedTBA.Studies (during IAP) or special individual reading (during regular terms). Arranged in consultation with individual faculty members and subject to departmental approval.Â  May not be used to satisfy Mathematics major requirements.Fall:T. CummingsIAP:T. CummingsSpring:T. CummingsSummer:T. CummingsNo required or recommended textbooks",Mathematics,2023
18.1001 Real Analysis,"18.1001 Real Analysis(,)(Subject meets with18.100A)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1002,18.100A,18.100B,18.100P,18.100QLecture:TR1-2.30(4-270)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line. Students in Course 18 must register for undergraduate version 18.100A.Fall:Q. DengSpring:J. ZhuNo textbook information available",Mathematics,2023
18.1002 Real Analysis,"18.1002 Real Analysis(,)(Subject meets with18.100B)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.100A,18.100B,18.100P,18.100QLecture:TR9.30-11(2-190)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. More demanding than 18.100A, for students with more mathematical maturity. Places more emphasis on point-set topology and n-space. Students in Course 18 must register for undergraduate version 18.100B.Fall:R. MelroseSpring:G. FranzNo textbook information available",Mathematics,2023
18.100A Real Analysis,"18.100A Real Analysis(,)(Subject meets with18.1001)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.1002,18.100B,18.100P,18.100QLecture:TR1-2.30(4-270)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line.Fall:T. ChowSpring:J. ZhuNo required or recommended textbooks",Mathematics,2023
18.100B Real Analysis,"18.100B Real Analysis(,)(Subject meets with18.1002)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.1002,18.100A,18.100P,18.100QLecture:TR9.30-11(2-190)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. More demanding than 18.100A, for students with more mathematical maturity. Places more emphasis on point-set topology and n-space.Fall:L. GuthSpring:T. ColdingTextbooks (Spring 2025)",Mathematics,2023
18.100P Real Analysis,"18.100P Real Analysis()Prereq:Calculus II (GIR)Units: 4-0-11Credit cannot also be received for18.1001,18.1002,18.100A,18.100B,18.100QLecture:MW9.30-11 (LIMITED 30)(2-131)Recitation:F11(2-146) orF1(2-151)Covers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line. Includes instruction and practice in written communication. Enrollment limited.R. MaguireNo required or recommended textbooks",Mathematics,2023
18.100Q Real Analysis,"18.101 Analysis and Manifolds()(Subject meets with18.1011)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduction to the theory of manifolds: vector fields and densities on manifolds, integral calculus in the manifold setting and the manifold version of the divergence theorem. 18.901 helpful but not required.R. Jiang",Mathematics,2023
18.101 Analysis and Manifolds,"18.1011 Analysis and Manifolds()(Subject meets with18.101)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduction to the theory of manifolds: vector fields and densities on manifolds, integral calculus in the manifold setting and the manifold version of the divergence theorem. 18.9011 helpful but not required. Students in Course 18 must register for the undergraduate version, 18.101.Staff",Mathematics,2023
18.1011 Analysis and Manifolds,"18.102 Introduction to Functional Analysis()(Subject meets with18.1021)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Lecture:MW9.30-11(4-237)+finalNormed spaces, completeness, functionals, Hahn-Banach theorem, duality, operators. Lebesgue measure, measurable functions, integrability, completeness of L-p spaces. Hilbert space. Compact, Hilbert-Schmidt and trace class operators. Spectral theorem.C. KehleTextbooks (Spring 2025)",Mathematics,2023
18.102 Introduction to Functional Analysis,"18.1021 Introduction to Functional Analysis()(Subject meets with18.102)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Lecture:MW9.30-11(4-237)+finalNormed spaces, completeness, functionals, Hahn-Banach theorem, duality, operators. Lebesgue measure, measurable functions, integrability, completeness of L-p spaces. Hilbert space. Compact, Hilbert-Schmidt and trace class operators. Spectral theorem. Students in Course 18 must register for the undergraduate version, 18.102.StaffNo textbook information available",Mathematics,2023
18.1021 Introduction to Functional Analysis,"18.103 Fourier Analysis: Theory and Applications()(Subject meets with18.1031)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Roughly half the subject devoted to the theory of the Lebesgue integral with applications to probability, and half to Fourier series and Fourier integrals.Staff",Mathematics,2023
18.103 Fourier Analysis: Theory and Applications,"18.1031 Fourier Analysis: Theory and Applications()(Subject meets with18.103)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Roughly half the subject devoted to the theory of the Lebesgue integral with applications to probability, and half to Fourier series and Fourier integrals. Students in Course 18 must register for the undergraduate version, 18.103.Staff",Mathematics,2023
18.1031 Fourier Analysis: Theory and Applications,"18.104 Seminar in Analysis(,)Prereq:18.100A,18.100B,18.100P, or18.100QUnits: 3-0-9Lecture:MW11-12.30(2-151)Students present and discuss material from books or journals. Topics vary from year to year. Instruction and practice in written and oral communication provided. Enrollment limited.Fall:L. AlonSpring:T. Ozuch-MeerssemanNo required or recommended textbooks",Mathematics,2023
18.104 Seminar in Analysis,"18.112 Functions of a Complex Variable()(Subject meets with18.1121)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Studies the basic properties of analytic functions of one complex variable. Conformal mappings and the Poincare model of non-Euclidean geometry. Cauchy-Goursat theorem and Cauchy integral formula. Taylor and Laurent decompositions. Singularities, residues and computation of integrals. Harmonic functions and Dirichlet's problem for the Laplace equation. The partial fractions decomposition. Infinite series and infinite product expansions. The Gamma function. The Riemann mapping theorem. Elliptic functions.J. Shi",Mathematics,2023
18.112 Functions of a Complex Variable,"18.1121 Functions of a Complex Variable()(Subject meets with18.112)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Studies the basic properties of analytic functions of one complex variable. Conformal mappings and the Poincare model of non-Euclidean geometry. Cauchy-Goursat theorem and Cauchy integral formula. Taylor and Laurent decompositions. Singularities, residues and computation of integrals. Harmonic functions and Dirichlet's problem for the Laplace equation. The partial fractions decomposition. Infinite series and infinite product expansions. The Gamma function. The Riemann mapping theorem. Elliptic functions. Students in Course 18 must register for the undergraduate version, 18.112.Staff",Mathematics,2023
18.1121 Functions of a Complex Variable,"18.116 Riemann Surfaces()Prereq:18.112Units: 3-0-9Riemann surfaces, uniformization, Riemann-Roch Theorem. Theory of elliptic functions and modular forms. Some applications, such as to number theory.Staff",Mathematics,2023
18.116 Riemann Surfaces,"18.117 Topics in Several Complex Variables()Prereq:18.112and18.965Units: 3-0-9Harmonic theory on complex manifolds, Hodge decomposition theorem, Hard Lefschetz theorem. Vanishing theorems. Theory of Stein manifolds. As time permits students also study holomorphic vector bundles on Kahler manifolds.Staff",Mathematics,2023
18.117 Topics in Several Complex Variables,18.118 Topics in Analysis()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2023
18.118 Topics in Analysis,"18.125 Measure Theory and Analysis()Prereq:18.100A,18.100B,18.100P, or18.100QUnits: 3-0-9Provides a rigorous introduction to Lebesgue's theory of measure and integration. Covers material that is essential in analysis, probability theory, and differential geometry.Staff",Mathematics,2023
18.125 Measure Theory and Analysis,18.137 Topics in Geometric Partial Differential Equations()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.T. Colding,Mathematics,2023
18.137 Topics in Geometric Partial Differential Equations,"18.152 Introduction to Partial Differential Equations()(Subject meets with18.1521)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduces three main types of partial differential equations: diffusion, elliptic, and hyperbolic. Includes mathematical tools, real-world examples and applications, such as the Black-Scholes equation, the European options problem, water waves, scalar conservation laws, first order equations and traffic problems.F. Hernandez",Mathematics,2023
18.152 Introduction to Partial Differential Equations,"18.1521 Introduction to Partial Differential Equations()(Subject meets with18.152)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduces three main types of partial differential equations: diffusion, elliptic, and hyperbolic. Includes mathematical tools, real-world examples and applications, such as the Black-Scholes equation, the European options problem, water waves, scalar conservation laws, first order equations and traffic problems. Students in Course 18 must register for the undergraduate version, 18.152.Staff",Mathematics,2023
18.1521 Introduction to Partial Differential Equations,"18.155 Differential Analysis I()Prereq:18.102or18.103Units: 3-0-9First part of a two-subject sequence. Review of Lebesgue integration. Lp spaces. Distributions. Fourier transform. Sobolev spaces. Spectral theorem, discrete and continuous spectrum. Homogeneous distributions. Fundamental solutions for elliptic, hyperbolic and parabolic differential operators. Recommended prerequisite: 18.112.A. Logunov",Mathematics,2023
18.155 Differential Analysis I,"18.156 Differential Analysis II()Prereq:18.155Units: 3-0-9Lecture:TR1-2.30(2-142)Second part of a two-subject sequence. Covers variable coefficient elliptic, parabolic and hyperbolic partial differential equations.L. GuthNo required or recommended textbooks",Mathematics,2023
18.156 Differential Analysis II,"18.157 Introduction to Microlocal Analysis()Prereq:18.155Units: 3-0-9The semi-classical theory of partial differential equations. Discussion of Pseudodifferential operators, Fourier integral operators, asymptotic solutions of partial differential equations, and the spectral theory of Schroedinger operators from the semi-classical perspective. Heavy emphasis placed on the symplectic geometric underpinnings of this subject.Staff",Mathematics,2023
18.157 Introduction to Microlocal Analysis,18.158 Topics in Differential Equations()Prereq:18.157Units: 3-0-9Lecture:MW1-2.30(2-147)Topics vary from year to year.A. LogunovNo textbook information available,Mathematics,2023
18.158 Topics in Differential Equations,18.199 Graduate Analysis Seminar()Prereq: Permission of instructorUnits: 3-0-9Studies original papers in differential analysis and differential equations. Intended for first- and second-year graduate students. Permission must be secured in advance.Staff,Mathematics,2023
18.199 Graduate Analysis Seminar,"18.200 Principles of Discrete Applied Mathematics()Prereq: None.Coreq:18.06Units: 4-0-11Credit cannot also be received for18.200ALimited 45.Lecture:MWF2(2-190)Recitation:R10(2-146) orR1(2-146) orR2(2-146)Study of illustrative topics in discrete applied mathematics, including probability theory, information theory, coding theory, secret codes, generating functions, and linear programming. Instruction and practice in written communication provided. Enrollment limited.P. ShorNo required or recommended textbooks",Mathematics,2023
18.200 Principles of Discrete Applied Mathematics,"18.200A Principles of Discrete Applied Mathematics()Prereq: None.Coreq:18.06Units: 3-0-9Credit cannot also be received for18.200Study of illustrative topics in discrete applied mathematics, including probability theory, information theory, coding theory, secret codes, generating functions, and linear programming.Staff",Mathematics,2023
18.200A Principles of Discrete Applied Mathematics,"18.204 Undergraduate Seminar in Discrete Mathematics(,)Prereq: ((6.1200or18.200) and (18.06,18.700, or18.701)) or permission of instructorUnits: 3-0-9Lecture:TR2.30-4 (LIMITED 15 EACH S ..(2-151) orTR2.30-4(4-237,2-147)Seminar in combinatorics, graph theory, and discrete mathematics in general. Participants read and present papers from recent mathematics literature. Instruction and practice in written and oral communication provided. Enrollment limited.Fall:M. DharSpring:M. DharNo textbook information available",Mathematics,2023
18.204 Undergraduate Seminar in Discrete Mathematics,"18.211 Combinatorial Analysis()Prereq:Calculus II (GIR)and (18.06,18.700, or18.701)Units: 3-0-9Combinatorial problems and methods for their solution. Enumeration, generating functions, recurrence relations, construction of bijections. Introduction to graph theory. Prior experience with abstraction and proofs is helpful.M. Simkin",Mathematics,2023
18.211 Combinatorial Analysis,"18.212 Algebraic Combinatorics()Prereq:18.701or18.703Units: 3-0-9Lecture:MWF1(4-237)Applications of algebra to combinatorics. Topics include walks in graphs, the Radon transform, groups acting on posets, Young tableaux, electrical networks.A. PostnikovNo textbook information available",Mathematics,2023
18.212 Algebraic Combinatorics,18.217 Combinatorial Theory()Prereq: Permission of instructorUnits: 3-0-9Content varies from year to year.A. Postnikov,Mathematics,2023
18.217 Combinatorial Theory,18.218 Topics in Combinatorics()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2023
18.218 Topics in Combinatorics,18.219 Seminar in Combinatorics()Not offered regularly; consult departmentPrereq: Permission of instructorUnits: 3-0-9Content varies from year to year. Readings from current research papers in combinatorics. Topics to be chosen and presented by the class.Staff,Mathematics,2023
18.219 Seminar in Combinatorics,"18.225 Graph Theory and Additive Combinatorics()Prereq: ((18.701or18.703) and (18.100A,18.100B,18.100P, or18.100Q)) or permission of instructorUnits: 3-0-9Introduction to extremal graph theory and additive combinatorics. Highlights common themes, such as the dichotomy between structure versus pseudorandomness. Topics include Turan-type problems, Szemeredi's regularity lemma and applications, pseudorandom graphs, spectral graph theory, graph limits, arithmetic progressions (Roth, Szemeredi, Green-Tao), discrete Fourier analysis, Freiman's theorem on sumsets and structure. Discusses current research topics and open problems.Y. Zhao",Mathematics,2023
18.225 Graph Theory and Additive Combinatorics,"18.226 Probabilistic Methods in Combinatorics()Prereq: (18.211,18.600, and (18.100A,18.100B,18.100P, or18.100Q)) or permission of instructorUnits: 3-0-9Introduction to the probabilistic method, a fundamental and powerful technique in combinatorics and theoretical computer science. Focuses on methodology as well as combinatorial applications. Suitable for students with strong interest and background in mathematical problem solving. Topics include linearity of expectations, alteration, second moment, Lovasz local lemma, correlation inequalities, Janson inequalities, concentration inequalities, entropy method.S. Luo",Mathematics,2023
18.226 Probabilistic Methods in Combinatorics,"18.300 Principles of Continuum Applied Mathematics()Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR2.30-4(4-145)Covers fundamental concepts in continuous applied mathematics. Applications from traffic flow, fluids, elasticity, granular flows, etc. Also covers continuum limit; conservation laws, quasi-equilibrium; kinematic waves; characteristics, simple waves, shocks; diffusion (linear and nonlinear); numerical solution of wave equations; finite differences, consistency, stability; discrete and fast Fourier transforms; spectral methods; transforms and series (Fourier, Laplace). Additional topics may include sonic booms, Mach cone, caustics, lattices, dispersion and group velocity. Uses MATLAB computing environment.L. DemanetNo textbook information available",Mathematics,2023
18.300 Principles of Continuum Applied Mathematics,"18.303 Linear Partial Differential Equations: Analysis and Numerics()Prereq:18.06or18.700Units: 3-0-9Provides students with the basic analytical and computational tools of linear partial differential equations (PDEs) for practical applications in science and engineering, including heat/diffusion, wave, and Poisson equations. Analytics emphasize the viewpoint of linear algebra and the analogy with finite matrix problems. Studies operator adjoints and eigenproblems, series solutions, Green's functions, and separation of variables. Numerics focus on finite-difference and finite-element techniques to reduce PDEs to matrix problems, including stability and convergence analysis and implicit/explicit timestepping. Some programming required for homework and final project.Staff",Mathematics,2023
18.303 Linear Partial Differential Equations: Analysis and Numerics,"18.305 Advanced Analytic Methods in Science and Engineering()Prereq:18.04,18.075, or18.112Units: 3-0-9Covers expansion around singular points: the WKB method on ordinary and partial differential equations; the method of stationary phase and the saddle point method; the two-scale method and the method of renormalized perturbation; singular perturbation and boundary-layer techniques; WKB method on partial differential equations.Staff",Mathematics,2023
18.305 Advanced Analytic Methods in Science and Engineering,"18.306 Advanced Partial Differential Equations with Applications()Prereq: (18.03or18.032) and (18.04,18.075, or18.112)Units: 3-0-9Concepts and techniques for partial differential equations, especially nonlinear. Diffusion, dispersion and other phenomena. Initial and boundary value problems. Normal mode analysis, Green's functions, and transforms. Conservation laws, kinematic waves, hyperbolic equations, characteristics shocks, simple waves. Geometrical optics, caustics. Free-boundary problems. Dimensional analysis. Singular perturbation, boundary layers, homogenization. Variational methods. Solitons. Applications from fluid dynamics, materials science, optics, traffic flow, etc.Staff",Mathematics,2023
18.306 Advanced Partial Differential Equations with Applications,18.327 Topics in Applied Mathematics()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2023
18.327 Topics in Applied Mathematics,"18.330 Introduction to Numerical Analysis()Not offered regularly; consult departmentPrereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Basic techniques for the efficient numerical solution of problems in science and engineering. Root finding, interpolation, approximation of functions, integration, differential equations, direct and iterative methods in linear algebra. Knowledge of programming in a language such as MATLAB, Python, or Julia is helpful.Staff",Mathematics,2023
18.330 Introduction to Numerical Analysis,"18.335[J] Introduction to Numerical Methods()(Same subject as6.7310[J])Prereq:18.06,18.700, or18.701Units: 3-0-9Lecture:MW9.30-11(2-190)Advanced introduction to numerical analysis: accuracy and efficiency of numerical algorithms. In-depth coverage of sparse-matrix/iterative and dense-matrix algorithms in numerical linear algebra (for linear systems and eigenproblems). Floating-point arithmetic, backwards error analysis, conditioning, and stability. Other computational topics (e.g., numerical integration or nonlinear optimization) may also be surveyed. Final project involves some programming.S. ChenTextbooks (Spring 2025)",Mathematics,2023
18.335[J] Introduction to Numerical Methods,"18.336[J] Fast Methods for Partial Differential and Integral Equations(,)(Same subject as6.7340[J])Prereq:6.7300,16.920,18.085,18.335, or permission of instructorUnits: 3-0-9Unified introduction to the theory and practice of modern, near linear-time, numerical methods for large-scale partial-differential and integral equations. Topics include preconditioned iterative methods; generalized Fast Fourier Transform and other butterfly-based methods; multiresolution approaches, such as multigrid algorithms and hierarchical low-rank matrix decompositions; and low and high frequency Fast Multipole Methods. Example applications include aircraft design, cardiovascular system modeling, electronic structure computation, and tomographic imaging.Staff",Mathematics,2023
18.336[J] Fast Methods for Partial Differential and Integral Equations,"18.337[J] Parallel Computing and Scientific Machine Learning()(Same subject as6.7320[J])Prereq:18.06,18.700, or18.701Units: 3-0-9Introduction to scientific machine learning with an emphasis on developing scalable differentiable programs. Covers scientific computing topics (numerical differential equations, dense and sparse linear algebra, Fourier transformations, parallelization of large-scale scientific simulation) simultaneously with modern data science (machine learning, deep neural networks, automatic differentiation), focusing on the emerging techniques at the connection between these areas, such as neural differential equations and physics-informed deep learning. Provides direct experience with the modern realities of optimizing code performance for supercomputers, GPUs, and multicores in a high-level language.Staff",Mathematics,2023
18.337[J] Parallel Computing and Scientific Machine Learning,"18.338 Eigenvalues of Random Matrices()Prereq:18.701or permission of instructorUnits: 3-0-9Covers the modern main results of random matrix theory as it is currently applied in engineering and science. Topics include matrix calculus for finite and infinite matrices (e.g., Wigner's semi-circle and Marcenko-Pastur laws), free probability, random graphs, combinatorial methods, matrix statistics, stochastic operators, passage to the continuum limit, moment methods, and compressed sensing. Knowledge of Julia helpful, but not required.A. Edelman",Mathematics,2023
18.338 Eigenvalues of Random Matrices,"18.352[J] Nonlinear Dynamics: The Natural Environment()Not offered regularly; consult department(Same subject as12.009[J])Prereq:Calculus II (GIR)andPhysics I (GIR);Coreq:18.03Units: 3-0-9Analyzes cooperative processes that shape the natural environment, now and in the geologic past. Emphasizes the development of theoretical models that relate the physical and biological worlds, the comparison of theory to observational data, and associated mathematical methods. Topics include carbon cycle dynamics; ecosystem structure, stability and complexity; mass extinctions; biosphere-geosphere coevolution; and climate change. Employs techniques such as stability analysis; scaling; null model construction; time series and network analysis.D. H. Rothman",Mathematics,2023
18.352[J] Nonlinear Dynamics: The Natural Environment,"18.353[J] Nonlinear Dynamics: Chaos()(Same subject as2.050[J],12.006[J])Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Introduction to nonlinear dynamics and chaos in dissipative systems. Forced and parametric oscillators. Phase space. Periodic, quasiperiodic, and aperiodic flows. Sensitivity to initial conditions and strange attractors. Lorenz attractor. Period doubling, intermittency, and quasiperiodicity. Scaling and universality. Analysis of experimental data: Fourier transforms, Poincare sections, fractal dimension, and Lyapunov exponents. Applications to mechanical systems, fluid dynamics, physics, geophysics, and chemistry. See 12.207J/18.354J for Nonlinear Dynamics: Continuum Systems.R. Rosales",Mathematics,2023
18.353[J] Nonlinear Dynamics: Chaos,"18.354[J] Nonlinear Dynamics: Continuum Systems()(Same subject as1.062[J],12.207[J])(Subject meets with18.3541)Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR9.30-11(2-143)General mathematical principles of continuum systems. From microscopic to macroscopic descriptions in the form of linear or nonlinear (partial) differential equations. Exact solutions, dimensional analysis, calculus of variations and singular perturbation methods. Stability, waves and pattern formation in continuum systems. Subject matter illustrated using natural fluid and solid systems found, for example, in geophysics and biology.N. DerrNo textbook information available",Mathematics,2023
18.354[J] Nonlinear Dynamics: Continuum Systems,"18.3541 Nonlinear Dynamics: Continuum Systems()(Subject meets with1.062[J],12.207[J],18.354[J])Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR9.30-11(2-143)General mathematical principles of continuum systems. From microscopic to macroscopic descriptions in the form of linear or nonlinear (partial) differential equations. Exact solutions, dimensional analysis, calculus of variations and singular perturbation methods. Stability, waves and pattern formation in continuum systems. Subject matter illustrated using natural fluid and solid systems found, for example, in geophysics and biology. Students in Courses 1, 12, and 18 must register for undergraduate version, 18.354.B. PrimkulovNo textbook information available",Mathematics,2023
18.3541 Nonlinear Dynamics: Continuum Systems,"18.355 Fluid Mechanics()Prereq:2.25,12.800, or18.354Units: 3-0-9Topics include the development of Navier-Stokes equations, inviscid flows, boundary layers, lubrication theory, Stokes flows, and surface tension. Fundamental concepts illustrated through problems drawn from a variety of areas, including geophysics, biology, and the dynamics of sport. Particular emphasis on the interplay between dimensional analysis, scaling arguments, and theory. Includes classroom and laboratory demonstrations.Staff",Mathematics,2023
18.355 Fluid Mechanics,"18.357 Interfacial Phenomena()Prereq:2.25,12.800,18.354,18.355, or permission of instructorUnits: 3-0-9Lecture:MW3-4.30(2-151)Fluid systems dominated by the influence of interfacial tension. Elucidates the roles of curvature pressure and Marangoni stress in a variety of hydrodynamic settings. Particular attention to drops and bubbles, soap films and minimal surfaces, wetting phenomena, water-repellency, surfactants, Marangoni flows, capillary origami and contact line dynamics. Theoretical developments are accompanied by classroom demonstrations. Highlights the role of surface tension in biology.J. BushNo textbook information available",Mathematics,2023
18.357 Interfacial Phenomena,"18.358[J] Nonlinear Dynamics and Turbulence()(Same subject as1.686[J],2.033[J])(Subject meets with1.068)Prereq:1.060AUnits: 3-2-7Reviews theoretical notions of nonlinear dynamics, instabilities, and waves with applications in fluid dynamics. Discusses hydrodynamic instabilities leading to flow destabilization and transition to turbulence. Focuses on physical turbulence and mixing from homogeneous isotropic turbulence. Also covers topics such as rotating and stratified flows as they arise in the environment, wave-turbulence, and point source turbulent flows. Laboratory activities integrate theoretical concepts covered in lectures and problem sets. Students taking graduate version complete additional assignments.L. Bourouiba",Mathematics,2023
18.358[J] Nonlinear Dynamics and Turbulence,"18.367 Waves and Imaging()Prereq: Permission of instructorUnits: 3-0-9The mathematics of inverse problems involving waves, with examples taken from reflection seismology, synthetic aperture radar, and computerized tomography. Suitable for graduate students from all departments who have affinities with applied mathematics. Topics include acoustic, elastic, electromagnetic wave equations; geometrical optics; scattering series and inversion; migration and backprojection; adjoint-state methods; Radon and curvilinear Radon transforms; microlocal analysis of imaging; optimization, regularization, and sparse regression.L. Demanet",Mathematics,2023
18.367 Waves and Imaging,"18.369[J] Mathematical Methods in Nanophotonics()(Same subject as8.315[J])Prereq:8.07,18.303, or permission of instructorUnits: 3-0-9High-level approaches to understanding complex optical media, structured on the scale of the wavelength, that are not generally analytically soluable. The basis for understanding optical phenomena such as photonic crystals and band gaps, anomalous diffraction, mechanisms for optical confinement, optical fibers (new and old), nonlinearities, and integrated optical devices. Methods covered include linear algebra and eigensystems for Maxwell's equations, symmetry groups and representation theory, Bloch's theorem, numerical eigensolver methods, time and frequency-domain computation, perturbation theory, and coupled-mode theories.S. G. Johnson",Mathematics,2023
18.369[J] Mathematical Methods in Nanophotonics,"18.376[J] Wave Propagation()Not offered regularly; consult department(Same subject as1.138[J],2.062[J])Prereq:2.003and18.075Units: 3-0-9Theoretical concepts and analysis of wave problems in science and engineering with examples chosen from elasticity, acoustics, geophysics, hydrodynamics, blood flow, nondestructive evaluation, and other applications.  Progressive waves, group velocity and dispersion, energy density and transport. Reflection, refraction and transmission of plane waves by an interface. Mode conversion in elastic waves. Rayleigh waves. Waves due to a moving load. Scattering by a two-dimensional obstacle.  Reciprocity theorems. Parabolic approximation. Waves on the sea surface. Capillary-gravity waves. Wave resistance. Radiation of surface waves. Internal waves in stratified fluids.  Waves in rotating media.  Waves in random media.T. R. Akylas, R. R. Rosales",Mathematics,2023
18.376[J] Wave Propagation,"18.377[J] Nonlinear Dynamics and Waves()(Same subject as1.685[J],2.034[J])Prereq: Permission of instructorUnits: 3-0-9A unified treatment of nonlinear oscillations and wave phenomena with applications to mechanical, optical, geophysical, fluid, electrical and flow-structure interaction problems. Nonlinear free and forced vibrations; nonlinear resonances; self-excited oscillations; lock-in phenomena.  Nonlinear dispersive and nondispersive waves; resonant wave interactions; propagation of wave pulses and nonlinear Schrodinger equation.  Nonlinear long waves and breaking; theory of characteristics; the Korteweg-de Vries equation; solitons and solitary wave interactions.  Stability of shear flows.  Some topics and applications may vary from year to year.Staff",Mathematics,2023
18.377[J] Nonlinear Dynamics and Waves,"18.384 Undergraduate Seminar in Physical Mathematics()Prereq:12.006,18.300,18.354, or permission of instructorUnits: 3-0-9Covers the mathematical modeling of physical systems, with emphasis on the reading and presentation of papers. Addresses a broad range of topics, with particular focus on macroscopic physics and continuum systems: fluid dynamics, solid mechanics, and biophysics. Instruction and practice in written and oral communication provided. Enrollment limited.N. Derr",Mathematics,2023
18.384 Undergraduate Seminar in Physical Mathematics,"18.385[J] Nonlinear Dynamics and Chaos()(Same subject as2.036[J])Prereq:18.03or18.032Units: 3-0-9Introduction to the theory of nonlinear dynamical systems with applications from science and engineering. Local and global existence of solutions, dependence on initial data and parameters. Elementary bifurcations, normal forms. Phase plane, limit cycles, relaxation oscillations, Poincare-Bendixson theory. Floquet theory. Poincare maps. Averaging. Near-equilibrium dynamics. Synchronization. Introduction to chaos. Universality. Strange attractors. Lorenz and Rossler systems. Hamiltonian dynamics and KAM theory. Uses MATLAB computing environment.Staff",Mathematics,2023
18.385[J] Nonlinear Dynamics and Chaos,18.397 Mathematical Methods in Physics()Not offered regularly; consult departmentPrereq:18.745or some familiarity with Lie theoryUnits: 3-0-9Content varies from year to year. Recent developments in quantum field theory require mathematical techniques not usually covered in standard graduate subjects.Staff,Mathematics,2023
18.397 Mathematical Methods in Physics,"18.400[J] Computability and Complexity Theory()(Same subject as6.1400[J])Prereq: (6.1200and6.1210) or permission of instructorUnits: 4-0-8Lecture:TR2.30-4(37-212)Recitation:F11(4-257) orF1(24-121)+finalMathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.R. WilliamsTextbooks (Spring 2025)",Mathematics,2023
18.400[J] Computability and Complexity Theory,"18.404 Theory of Computation()(Subject meets with6.5400[J],18.4041[J])Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems.M. Sipser",Mathematics,2023
18.404 Theory of Computation,"18.4041[J] Theory of Computation()(Same subject as6.5400[J])(Subject meets with18.404)Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.M. Sipser",Mathematics,2023
18.4041[J] Theory of Computation,"18.405[J] Advanced Complexity Theory()(Same subject as6.5410[J])Prereq:18.404Units: 3-0-9Lecture:TR11-12.30(4-163)Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.D. MinzerNo textbook information available",Mathematics,2023
18.405[J] Advanced Complexity Theory,18.408 Topics in Theoretical Computer Science()Prereq: Permission of instructorUnits: 3-0-9Study of areas of current interest in theoretical computer science. Topics vary from term to term.J. Kelner,Mathematics,2023
18.408 Topics in Theoretical Computer Science,"18.410[J] Design and Analysis of Algorithms(,)(Same subject as6.1220[J])Prereq:6.1200and6.1210Units: 4-0-8Lecture:TR11-12.30(32-123)Recitation:F9(36-112) orF10(36-112) orF11(36-112) orF12(36-112) orF1(36-112) orF2(36-112) orF3(36-112) orF10(24-121) orF11(4-265) orF12(4-265) orF1(4-265) orF2(24-121) orF3(24-121)+finalTechniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.Fall:S. RaghuramanSpring:S. RaghuramanTextbooks (Spring 2025)",Mathematics,2023
18.410[J] Design and Analysis of Algorithms,"18.413 Introduction to Computational Molecular Biology()(Subject meets with18.417)Prereq:6.1210or permission of instructorUnits: 3-0-9Introduction to computational molecular biology with a focus on the basic computational algorithms used to solve problems in practice. Covers classical techniques in the field for solving problems such as genome sequencing, assembly, and search; detecting genome rearrangements; constructing evolutionary trees; analyzing mass spectrometry data; connecting gene expression to cellular function; and machine learning for drug discovery. Prior knowledge of biology is not required. Particular emphasis on problem solving, collaborative learning, theoretical analysis, and practical implementation of algorithms. Students taking graduate version complete additional and more complex assignments.B. Berger",Mathematics,2023
18.413 Introduction to Computational Molecular Biology,"18.415[J] Advanced Algorithms()(Same subject as6.5210[J])Prereq:6.1220and (6.1200,6.3700, or18.600)Units: 5-0-7First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.D. Karger",Mathematics,2023
18.415[J] Advanced Algorithms,"18.416[J] Randomized Algorithms()(Same subject as6.5220[J])Prereq: (6.1200or6.3700) and (6.1220or6.5210)Units: 5-0-7Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.Staff",Mathematics,2023
18.416[J] Randomized Algorithms,"18.417 Introduction to Computational Molecular Biology()(Subject meets with18.413)Prereq:6.1210or permission of instructorUnits: 3-0-9Introduction to computational molecular biology with a focus on the basic computational algorithms used to solve problems in practice. Covers classical techniques in the field for solving problems such as genome sequencing, assembly, and search; detecting genome rearrangements; constructing evolutionary trees; analyzing mass spectrometry data; connecting gene expression to cellular function; and machine learning for drug discovery. Prior knowledge of biology is not required. Particular emphasis on problem solving, collaborative learning, theoretical analysis, and practical implementation of algorithms. Students taking graduate version complete additional and more complex assignments.B. Berger",Mathematics,2023
18.417 Introduction to Computational Molecular Biology,"18.418[J] Topics in Computational Molecular Biology()(Same subject asHST.504[J])Prereq:6.8701,18.417, or permission of instructorUnits: 3-0-9Covers current research topics in computational molecular biology. Recent research papers presented from leading conferences such as the International Conference on Computational Molecular Biology (RECOMB) and the Conference on Intelligent Systems for Molecular Biology (ISMB). Topics include original research (both theoretical and experimental) in comparative genomics, sequence and structure analysis, molecular evolution, proteomics, gene expression, transcriptional regulation, biological networks, drug discovery, and privacy. Recent research by course participants also covered. Participants will be expected to present individual projects to the class.B. Berger",Mathematics,2023
18.418[J] Topics in Computational Molecular Biology,"18.424 Seminar in Information Theory()Prereq: (6.3700,18.05, or18.600) and (18.06,18.700, or18.701)Units: 3-0-9Considers various topics in information theory, including data compression, Shannon's Theorems, and error-correcting codes. Students present and discuss the subject matter. Instruction and practice in written and oral communication provided. Enrollment limited.J. Gaitonde",Mathematics,2023
18.424 Seminar in Information Theory,"18.425[J] Foundations of Cryptography()(Same subject as6.5620[J])Prereq:6.1220,6.1400, or18.4041Units: 3-0-9A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives such as public-key encryption, digital signatures, and pseudo-random number generation, as well as advanced cryptographic primitives such as zero-knowledge proofs, homomorphic encryption, and secure multiparty computation.Staff",Mathematics,2023
18.425[J] Foundations of Cryptography,18.434 Seminar in Theoretical Computer Science()Prereq:6.1220Units: 3-0-9Topics vary from year to year. Students present and discuss the subject matter. Instruction and practice in written and oral communication provided. Enrollment limited.D. Minzer,Mathematics,2023
18.434 Seminar in Theoretical Computer Science,"18.435[J] Quantum Computation()(Same subject as2.111[J],6.6410[J],8.370[J])Prereq:8.05,18.06,18.700,18.701, or18.C06Units: 3-0-9Provides an introduction to the theory and practice of quantum computation. Topics covered: physics of information processing; quantum algorithms including the factoring algorithm and Grover's search algorithm; quantum error correction; quantum communication and cryptography. Knowledge of quantum mechanics helpful but not required.P. Shor",Mathematics,2023
18.435[J] Quantum Computation,"18.436[J] Quantum Information Science()(Same subject as6.6420[J],8.371[J])Prereq:18.435Units: 3-0-9Lecture:MW9.30-11(4-163)Examines quantum computation and quantum information. Topics include quantum circuits, the quantum Fourier transform and search algorithms, the quantum operations formalism, quantum error correction, Calderbank-Shor-Steane and stabilizer codes, fault tolerant quantum computation, quantum data compression, quantum entanglement, capacity of quantum channels, and quantum cryptography and the proof of its security. Prior knowledge of quantum mechanics required.I. ChuangTextbooks (Spring 2025)",Mathematics,2023
18.436[J] Quantum Information Science,"18.437[J] Distributed Algorithms()(Same subject as6.5250[J])Prereq:6.1220Units: 3-0-9Design and analysis of algorithms, emphasizing those suitable for use in distributed networks. Covers various topics includingÂ distributed graph algorithms, locality constraints,Â bandwidth limitations and communication complexity,Â process synchronization, allocation of computational resources, fault tolerance, and asynchrony. No background in distributed systems required.Staff",Mathematics,2023
18.437[J] Distributed Algorithms,"18.453 Combinatorial Optimization()(Subject meets with18.4531)Prereq:18.06,18.700, or18.701Units: 3-0-9Thorough treatment of linear programming and combinatorial optimization. Topics include matching theory, network flow, matroid optimization, and how to deal with NP-hard optimization problems. Prior exposure to discrete mathematics (such as 18.200) helpful.Staff",Mathematics,2023
18.453 Combinatorial Optimization,"18.4531 Combinatorial Optimization()(Subject meets with18.453)Prereq:18.06,18.700, or18.701Units: 3-0-9Thorough treatment of linear programming and combinatorial optimization. Topics include matching theory, network flow, matroid optimization, and how to deal with NP-hard optimization problems. Prior exposure to discrete mathematics (such as 18.200) helpful. Students in Course 18 must register for the undergraduate version, 18.453.Staff",Mathematics,2023
18.4531 Combinatorial Optimization,"18.455 Advanced Combinatorial Optimization()Prereq:18.453or permission of instructorUnits: 3-0-9Advanced treatment of combinatorial optimization with an emphasis on combinatorial aspects. Non-bipartite matchings, submodular functions, matroid intersection/union, matroid matching, submodular flows, multicommodity flows, packing and connectivity problems, and other recent developments.M. X. Goemans",Mathematics,2023
18.455 Advanced Combinatorial Optimization,"18.456[J] Algebraic Techniques and Semidefinite Optimization()(Same subject as6.7230[J])Prereq:6.7210or15.093Units: 3-0-9Theory and computational techniques for optimization problems involving polynomial equations and inequalities with particular, emphasis on the connections with semidefinite optimization. Develops algebraic and numerical approaches of general applicability, with a view towards methods that simultaneously incorporate both elements, stressing convexity-based ideas, complexity results, and efficient implementations. Examples from several engineering areas, in particular systems and control applications. Topics include semidefinite programming, resultants/discriminants, hyperbolic polynomials, Groebner bases, quantifier elimination, and sum of squares.Staff",Mathematics,2023
6.100A Introduction to Computer Science Programming in Python,"6.100A Introduction to Computer Science Programming in Python(,); first half of termPrereq: NoneUnits: 2-0-4Credit cannot also be received for6.100LURL:https://introcomp.mit.edu/spring25Ends Mar 21.Lecture:MW3-4.30(26-100)Recitation:F10(5-134) orF11(5-134,24-121) orF12(24-121) orF1(5-134) orF2(5-134) orF1(5-217) orF2(5-217)Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Combination of 6.100A and 6.100B or 16.C20 counts as REST subject. Final given in the seventh week of the term.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2024
6.100B Introduction to Computational Thinking and Data Science,"6.100B Introduction to Computational Thinking and Data Science(,); second half of termPrereq:6.100Aor permission of instructorUnits: 2-0-4Credit cannot also be received for9.C20,16.C20,18.C20,CSE.C20URL:https://introcomp.mit.edu/spring25Begins Mar 31.Lecture:MW3-4.30(26-100)Recitation:F10(5-134) orF11(5-134,24-121) orF12(24-121) orF1(5-134) orF2(5-134) orF1(5-217) orF2(5-217)Provides an introduction to using computation to understand real-world phenomena. Topics include plotting, stochastic programs, probability and statistics, random walks, Monte Carlo simulations, modeling data, optimization problems, and clustering. Combination of 6.100A and 6.100B counts as REST subject.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2024
6.100L Introduction to Computer Science and Programming,"6.100L Introduction to Computer Science and Programming(,)Prereq: NoneUnits: 2-0-4Credit cannot also be received for6.100AURL:https://introcomp.mit.edu/6.100L_sp25Lecture:MW3-4.30(34-101)Recitation:F10(32-123)Introduction to computer science and programming for students with no programming experience. Presents content taught in 6.100A over an entire semester. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Lectures are viewed outside of class; in-class time is dedicated to problem-solving and discussion. Combination of 6.100L and 6.100B or 16.C20 counts as REST subject.Fall:A. BellSpring:A. BellTextbooks (Spring 2025)",EECS,2024
6.1010 Fundamentals of Programming,"6.1010 Fundamentals of Programming(,)Prereq:6.100AUnits: 2-4-6Lecture:MW9(32-124) orMW10(32-124,32-144) orMW11(56-154,37-212) orMW1(4-163,32-124) orMW2(4-163) orMW3(3-270) orMW12(32-124)Lab:F10-1(32-044) orF2-5(32-044)+finalIntroduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion. Â Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.Fall:R. MillerSpring:A. HartzNo textbook information available",EECS,2024
6.1020 Software Construction,"6.1020 Software Construction()Prereq:6.1010Units: 3-0-12Lecture:TR9.30-11(26-100)+finalIntroduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.M. GoldmanNo required or recommended textbooks",EECS,2024
6.1040 Software Design,"6.1040 Software Design()Prereq:6.1020and6.1200Units: 4-0-14Provides design-focused instruction on how to build complex software applications. Design topics include classic human-computer interaction (HCI) design tactics (need finding, heuristic evaluation, prototyping, user testing), conceptual design (inventing, modeling and evaluating constituent concepts), social and ethical implications, abstract data modeling, and visual design. Implementation topics include reactive front-ends, web services, and databases. Students work both on individual projects and a larger team project in which they design and build full-stack web applications.A. Satyanarayan",EECS,2024
6.1060 Software Performance Engineering,"6.1060 Software Performance Engineering()Prereq:6.1020,6.1210, and6.1910Units: 3-12-3Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.C. Leiserson",EECS,2024
6.5060 Algorithm Engineering,"6.5060 Algorithm Engineering()Prereq:6.1060and6.1220Units: 3-0-9Covers the theory and practice of algorithms and data structures. Topics include models of computation, algorithm design and analysis, and performance engineering of algorithm implementations. Presents the design and implementation of sequential, parallel, cache-efficient, and external-memory algorithms. Illustrates many of the principles of algorithm engineering in the context of parallel algorithms and graph problems.Staff",EECS,2024
6.5080 Multicore Programming,"6.5080 Multicore Programming()(Subject meets with6.5081)Prereq:6.1210Units: 4-0-8Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.N. Shavit",EECS,2024
6.5081 Multicore Programming,"6.5081 Multicore Programming()(Subject meets with6.5080)Prereq:6.1210Units: 4-0-8Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.Staff",EECS,2024
6.1100 Computer Language Engineering,"6.1100 Computer Language Engineering()Prereq:6.1020and6.1910Units: 4-4-4Lecture:MWF11(32-123)Recitation:TR12(32-155)Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.M. RinardNo textbook information available",EECS,2024
6.1120 Dynamic Computer Language Engineering,"6.1120 Dynamic Computer Language Engineering()Prereq:6.1020or6.1910Units: 4-4-4Studies the design and implementation of modern, dynamic programming languages. Topics include fundamental approaches for parsing, semantics and interpretation, virtual machines, garbage collection, just-in-time machine code generation, and optimization. Includes a semester-long, group project that delivers a virtual machine that spans all of these topics.M. Rinard",EECS,2024
6.5110 Foundations of Program Analysis,"6.5110 Foundations of Program Analysis()Not offered regularly; consult departmentPrereq:6.1100Units: 3-0-9Presents major principles and techniques for program analysis. Includes formal semantics, type systems and type-based program analysis, abstract interpretation and model checking and synthesis. Emphasis on Haskell and Ocaml, but no prior experience in these languages is assumed. Student assignments include implementing of techniques covered in class, including building simple verifiers.A. Solar-Lezama",EECS,2024
6.5120 Formal Reasoning About Programs,"6.5120 Formal Reasoning About Programs()Prereq:6.1020and6.1200Units: 3-0-9Surveys techniques for rigorous mathematical reasoning about correctness of software, emphasizing commonalities across approaches. Introduces interactive computer theorem proving with the Coq proof assistant, which is used for all assignments, providing immediate feedback on soundness of logical arguments. Covers common program-proof techniques, including operational semantics, model checking, abstract interpretation, type systems, program logics, and their applications to functional, imperative, and concurrent programs. Develops a common conceptual framework based on invariants, abstraction, and modularity applied to state and labeled transition systems.A. Chlipala",EECS,2024
6.5150 Large-scale Symbolic Systems,"6.5150 Large-scale Symbolic Systems()(Subject meets with6.5151)Prereq:6.4100or permission of instructorUnits: 3-0-9Lecture:MWF2(35-225)Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.G. J. SussmanNo textbook information available",EECS,2024
6.5151 Large-scale Symbolic Systems,"6.5151 Large-scale Symbolic Systems()(Subject meets with6.5150)Prereq:6.4100or permission of instructorUnits: 3-0-9Lecture:MWF2(35-225)Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.G. SussmanTextbooks (Spring 2025)",EECS,2024
6.5160[J] Classical Mechanics: A Computational Approach,"6.5160[J] Classical Mechanics: A Computational Approach()(Same subject as8.351[J],12.620[J])Prereq:Physics I (GIR),18.03, and permission of instructorUnits: 3-3-6Classical mechanics in a computational framework, Lagrangian formulation, action, variational principles, and Hamilton's principle. Conserved quantities, Hamiltonian formulation, surfaces of section, chaos, and Liouville's theorem. PoincarÃ© integral invariants, PoincarÃ©-Birkhoff and KAM theorems. Invariant curves and cantori. Nonlinear resonances, resonance overlap and transition to chaos. Symplectic integration. Adiabatic invariants. Applications to simple physical systems and solar system dynamics. Extensive use of computation to capture methods, for simulation, and for symbolic analysis. Programming experience required.J. Wisdom, G. J. Sussman",EECS,2024
6.1200[J] Mathematics for Computer Science,"6.1200[J] Mathematics for Computer Science(,)(Same subject as18.062[J])Prereq:Calculus I (GIR)Units: 5-0-7Lecture:TR2.30-4(26-100)Recitation:WF10(38-166,36-155) orWF11(38-166,36-155,26-168) orWF12(38-166,36-156,26-168) orWF1(38-166,36-156,35-310) orWF2(38-166,36-156,35-308) orWF3(38-166,36-156)+finalElementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.Fall:Z. AbelSpring:Z. AbelNo textbook information available",EECS,2024
6.120A Discrete Mathematics and Proof for Computer Science,"6.120A Discrete Mathematics and Proof for Computer Science(); second half of termPrereq:Calculus I (GIR)Units: 3-0-3Begins Mar 31.Lecture:TR1-2.30(32-144)Recitation:WF1(13-3101) orWF2(13-3101)+finalSubset of elementary discrete mathematics for science and engineering useful in computer science. Topics may include logical notation, sets, done relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools.P. JailletNo textbook information available",EECS,2024
6.1210 Introduction to Algorithms,"6.1210 Introduction to Algorithms(,)Prereq:6.100Aand (6.1200or (6.120Aand (6.3700,6.3800,18.05, or18.600)))Units: 5-0-7Lecture:TR11-12.30(26-100)Recitation:WF10(34-304,34-303,36-156) orWF11(34-304,34-303,34-301) orWF12(34-304,34-301) orWF1(34-304,34-303,34-301) orWF2(34-304,34-303,34-301) orWF3(34-304,34-301) orWF4(34-304) orWF10(36-153) orWF4(36-155)+finalIntroduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems. Enrollment may be limited.Fall:B. ChapmanSpring:B. ChapmanNo textbook information available",EECS,2024
6.1220[J] Design and Analysis of Algorithms,"6.1220[J] Design and Analysis of Algorithms(,)(Same subject as18.410[J])Prereq:6.1200and6.1210Units: 4-0-8Lecture:TR11-12.30(32-123)Recitation:F9(36-112) orF10(36-112) orF11(36-112) orF12(36-112) orF1(36-112) orF2(36-112) orF3(36-112) orF10(24-121) orF11(4-265) orF12(4-265) orF1(4-265) orF2(24-121) orF3(24-121)+finalTechniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.Fall:S. RaghuramanSpring:S. RaghuramanTextbooks (Spring 2025)",EECS,2024
6.1400[J] Computability and Complexity Theory,"6.1400[J] Computability and Complexity Theory()(Same subject as18.400[J])Prereq: (6.1200and6.1210) or permission of instructorUnits: 4-0-8Lecture:TR2.30-4(37-212)Recitation:F11(4-257) orF1(24-121)+finalMathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.R. WilliamsTextbooks (Spring 2025)",EECS,2024
6.1420 Fixed Parameter and Fine-grained Computation,"6.1420 Fixed Parameter and Fine-grained Computation()Prereq:6.1200,6.1210, and (6.1220,6.1400, or18.404)Units: 3-0-9An overview of the theory of parameterized algorithms and the ""problem-centric"" theory of fine-grained complexity, both of which reconsider how to measure the difficulty and feasibility of solving computational problems. Topics include: fixed-parameter tractability (FPT) and its characterizations, the W-hierarchy (W[1], W[2], W[P], etc.), 3-sum-hardness, all-pairs shortest paths (APSP)-equivalences, strong exponential time hypothesis (SETH) hardness of problems, and the connections to circuit complexity and other aspects of computing.V. Vassilevska Williams",EECS,2024
6.5210[J] Advanced Algorithms,"6.5210[J] Advanced Algorithms()(Same subject as18.415[J])Prereq:6.1220and (6.1200,6.3700, or18.600)Units: 5-0-7First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.D. Karger",EECS,2024
6.5220[J] Randomized Algorithms,"6.5220[J] Randomized Algorithms()(Same subject as18.416[J])Prereq: (6.1200or6.3700) and (6.1220or6.5210)Units: 5-0-7Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.Staff",EECS,2024
6.5230 Advanced Data Structures,6.5230 Advanced Data Structures()Prereq:6.1220Units: 3-0-9More advanced and powerful data structures for answering several queries on the same data. Such structures are crucial in particular for designing efficient algorithms. Dictionaries; hashing; search trees. Self-adjusting data structures; linear search; splay trees; dynamic optimality. Integer data structures; word RAM. Predecessor problem; van Emde Boas priority queues; y-fast trees; fusion trees. Lower bounds; cell-probe model; round elimination. Dynamic graphs; link-cut trees; dynamic connectivity. Strings; text indexing; suffix arrays; suffix trees. Static data structures; compact arrays; rank and select. Succinct data structures; tree encodings; implicit data structures. External-memory and cache-oblivious data structures; B-trees; buffer trees; tree layout; ordered-file maintenance. Temporal data structures; persistence; retroactivity.Staff,EECS,2024
6.5240 Sublinear Time Algorithms,"6.5240 Sublinear Time Algorithms()Prereq:6.1220or permission of instructorUnits: 3-0-9Sublinear time algorithms understand parameters and properties of input data after viewing only a minuscule fraction of it. Tools from number theory, combinatorics, linear algebra, optimization theory, distributed algorithms, statistics, and probability are covered. Topics include: testing and estimating properties of distributions, functions, graphs, strings, point sets, and various combinatorial objects.R. Rubinfeld",EECS,2024
6.5250[J] Distributed Algorithms,"6.5250[J] Distributed Algorithms()(Same subject as18.437[J])Prereq:6.1220Units: 3-0-9Design and analysis of algorithms, emphasizing those suitable for use in distributed networks. Covers various topics includingÂ distributed graph algorithms, locality constraints,Â bandwidth limitations and communication complexity,Â process synchronization, allocation of computational resources, fault tolerance, and asynchrony. No background in distributed systems required.Staff",EECS,2024
"6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra","6.5310 Geometric Folding Algorithms: Linkages, Origami, Polyhedra()Prereq:6.1220or permission of instructorUnits: 3-0-9Lecture:TR11-12.30(32-082)Covers discrete geometry and algorithms underlying the reconfiguration of foldable structures, with applications to robotics, manufacturing, and biology. Linkages made from one-dimensional rods connected by hinges: constructing polynomial curves, characterizing rigidity, characterizing unfoldable versus locked, protein folding. Folding two-dimensional paper (origami): characterizing flat foldability, algorithmic origami design, one-cut magic trick. Unfolding and folding three-dimensional polyhedra: edge unfolding, vertex unfolding, gluings, Alexandrov's Theorem, hinged dissections.E. DemaineTextbooks (Spring 2025)",EECS,2024
6.5320 Geometric Computing,"6.5320 Geometric Computing()Prereq:6.1220Units: 3-0-9Introduction to the design and analysis of algorithms for geometric problems, in low- and high-dimensional spaces. Algorithms: convex hulls, polygon triangulation, Delaunay triangulation, motion planning, pattern matching. Geometric data structures: point location, Voronoi diagrams, Binary Space Partitions. Geometric problems in higher dimensions: linear programming, closest pair problems. High-dimensional nearest neighbor search and low-distortion embeddings between metric spaces. Geometric algorithms for massive data sets: external memory and streaming algorithms. Geometric optimization.Staff",EECS,2024
6.5340 Topics in Algorithmic Game Theory,"6.5340 Topics in Algorithmic Game Theory()Not offered regularly; consult departmentPrereq:6.1210or6.1220Units: 3-0-9Presents research topics at the interface of computer science and game theory, with an emphasis on algorithms and computational complexity. Explores the types of game-theoretic tools that are applicable to computer systems, the loss in system performance due to the conflicts of interest of users and administrators, and the design of systems whose performance is robust with respect to conflicts of interest inside the system. Algorithmic focus is on algorithms for equilibria, the complexity of equilibria and fixed points, algorithmic tools in mechanism design, learning in games, and the price of anarchy.K. Daskalakis",EECS,2024
6.5350 Matrix Multiplication and Graph Algorithms,"6.5350 Matrix Multiplication and Graph Algorithms()Prereq:6.1220Units: 3-0-9Lecture:TR11-12.30(45-102)Explores topics around matrix multiplication (MM) and its use in the design of graph algorithms. Focuses on problems such as transitive closure, shortest paths, graph matching, and other classical graph problems. Explores fast approximation algorithms when MM techniques are too expensive.V. Vassilevska WilliamsNo textbook information available",EECS,2024
6.5400[J] Theory of Computation,"6.5400[J] Theory of Computation()(Same subject as18.4041[J])(Subject meets with18.404)Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.M. Sipser",EECS,2024
6.5410[J] Advanced Complexity Theory,"6.5410[J] Advanced Complexity Theory()(Same subject as18.405[J])Prereq:18.404Units: 3-0-9Lecture:TR11-12.30(4-163)Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.D. MinzerNo textbook information available",EECS,2024
6.5420 Randomness and Computation,"6.5420 Randomness and Computation()Prereq:6.1220and18.4041Units: 3-0-9The power and sources of randomness in computation. Connections and applications to computational complexity, computational learning theory, cryptography and combinatorics. Topics include: probabilistic proofs, uniform generation and approximate counting, Fourier analysis of Boolean functions, computational learning theory, expander graphs, pseudorandom generators, derandomization.R. Rubinfeld",EECS,2024
6.5430 Quantum Complexity Theory,"6.5430 Quantum Complexity Theory()Prereq:6.1400,18.4041, and18.435Units: 3-0-9Introduction to quantum computational complexity theory, the study of the fundamental capabilities and limitations of quantum computers. Topics include complexity classes, lower bounds, communication complexity, proofs and advice, and interactive proof systems in the quantum world; classical simulation of quantum circuits. The objective is to bring students to the research frontier.Staff",EECS,2024
6.1600 Foundations of Computer Security,"6.1600 Foundations of Computer Security()Prereq: (6.1210and (6.1800or6.1810)) or permission of instructorUnits: 4-0-8Fundamental notions and big ideas for achieving security in computer systems. Topics include cryptographic foundations (pseudorandomness, collision-resistant hash functions, authentication codes, signatures, authenticated encryption, public-key encryption), systems ideas (isolation, non-interference, authentication, access control, delegation, trust), and implementation techniques (privilege separation, fuzzing, symbolic execution, runtime defenses, side-channel attacks). Case studies of how these ideas are realized in deployed systems. Lab assignments apply ideas from lectures to learn how to build secure systems and how they can be attacked.S. Devadas",EECS,2024
6.5610 Applied Cryptography,"6.5610 Applied Cryptography()Prereq:6.1200and (6.1800or6.1810)Units: 4-0-8Lecture:MW11-12.30(6-120)Recitation:F11(1-190)Covers advanced applications of cryptography, implementation of cryptographic primitives, and cryptanalysis. Topics may include: proof systems; zero knowledge; secret sharing; multiparty computation; fully homomorphic encryption; electronic voting; design of block ciphers and hash functions; elliptic-curve and lattice-based cryptosystems; and algorithms for collision-finding, discrete-log, and factoring. Assignments include a final group project. Topics may vary from year to year.Y. KalaiNo textbook information available",EECS,2024
6.5620[J] Foundations of Cryptography,"6.5620[J] Foundations of Cryptography()(Same subject as18.425[J])Prereq:6.1220,6.1400, or18.4041Units: 3-0-9A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives such as public-key encryption, digital signatures, and pseudo-random number generation, as well as advanced cryptographic primitives such as zero-knowledge proofs, homomorphic encryption, and secure multiparty computation.Staff",EECS,2024
6.5630 Advanced Topics in Cryptography,6.5630 Advanced Topics in Cryptography()Prereq:6.5620Units: 3-0-9In-depth exploration of recent results in cryptography.V. Vaikuntanathan,EECS,2024
6.5660 Computer Systems Security,"6.5660 Computer Systems Security()Prereq:6.1020and (6.1800or6.1810)Units: 3-6-3Design and implementation of secure computer systems. Lectures cover attacks that compromise security as well as techniques for achieving security, based on recent research papers. Topics include operating system security, privilege separation, capabilities, language-based security, cryptographic network protocols, trusted hardware, and security in web applications and mobile phones. Labs involve implementing and compromising a web application that sandboxes arbitrary code, and a group final project.Staff",EECS,2024
6.1800 Computer Systems Engineering,"6.1800 Computer Systems Engineering()Prereq:6.1910Units: 5-1-6URL:https://mit.edu/6.1800Lecture:MW2(26-100)Lab:F1(36-144) orF2(36-144) orF1(26-142) orF2(26-142) orF1(26-210) orF2(26-210) orF1(26-314) orF2(26-314) orF1(4-149) orF2(4-149) orF1(4-261) orF2(4-261) orF1(4-145) orF2(4-145) orF1(24-307) orF2(24-307)Recitation:TR10(34-301,36-153,36-156) orTR11(34-301,36-153,36-156,34-303) orTR12(34-303,36-155) orTR1(34-302,35-310,36-155,24-307) orTR2(34-302,35-308,24-307)+finalTopics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.K. LaCurtsTextbooks (Spring 2025)",EECS,2024
6.1810 Operating System Engineering,"6.1810 Operating System Engineering()Prereq:6.1910Units: 3-0-9Design and implementation of operating systems, and their use as a foundation for systems programming. Topics include virtual memory, file systems, threads, context switches, kernels, interrupts, system calls, interprocess communication, coordination, and interaction between software and hardware. A multi-processor operating system for RISC-V, xv6, is used to illustrate these topics. Individual laboratory assignments involve extending the xv6 operating system, for example to support sophisticated virtual memory features and networking.M. Kaashoek",EECS,2024
6.1820[J] Mobile and Sensor Computing,"6.1820[J] Mobile and Sensor Computing()(Same subject asMAS.453[J])Prereq:6.1800or permission of instructorUnits: 3-0-9Lecture:TR1-2.30(24-121)Focuses on ""Internet of Things"" (IoT) systems and technologies, sensing, computing, and communication. Explores fundamental design and implementation issues in the engineering of mobile and sensor computing systems. Topics include battery-free sensors, seeing through wall, robotic sensors, vital sign sensors (breathing, heartbeats, emotions), sensing in cars and autonomous vehicles, subsea IoT, sensor security, positioning technologies (including GPS and indoor WiFi), inertial sensing (accelerometers, gyroscopes, inertial measurement units, dead-reckoning), embedded and distributed system architectures, sensing with radio signals, sensing with microphones and cameras, wireless sensor networks, embedded and distributed system architectures, mobile libraries and APIs to sensors, and application case studies. Includes readings from research literature, as well as laboratory assignments and a significant term project.F. AdibNo textbook information available",EECS,2024
6.1850 Computer Systems and Society,"6.1850 Computer Systems and Society()Prereq:6.1800Units: 3-0-9Explores the impact of computer systems on individual humans, society, and the environment. Examines large- and small-scale power structures that stem from low-level technical design decisions, the consequences of those structures on society, and how they can limit or provide access to certain technologies. Students learn to assess design decisions within an ethical framework and consider the impact of their decisions on non-users. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Possible topics include the implications of hierarchical designs (e.g., DNS) for scale; how layered models influence what parts of a network have the power to take certain actions; and the environmental impact of proof-of-work-based systems such as Bitcoin. Enrollment may be limited.K. Lacurts",EECS,2024
6.5810 Operating System Engineering,"6.5810 Operating System Engineering()Prereq:6.1020and (6.1800or6.1810)Units: 3-6-3Fundamental design and implementation issues in the engineering of operating systems. Lectures based on the study of a symmetric multiprocessor version of UNIX version 6 and research papers. Topics include virtual memory; file system; threads; context switches; kernels; interrupts; system calls; interprocess communication; coordination, and interaction between software and hardware. Individual laboratory assignments accumulate in the construction of a minimal operating system (for an x86-based personal computer) that implements the basic operating system abstractions and a shell. Knowledge of programming in the C language is a prerequisite.Staff",EECS,2024
6.5820 Computer Networks,"6.5820 Computer Networks()Prereq:6.1800or permission of instructorUnits: 4-0-8Topics on the engineering and analysis of network protocols and architecture, including architectural principles for designing heterogeneous networks; transport protocols; Internet routing; router design; congestion control and network resource management; wireless networks; network security; naming; overlay and peer-to-peer networks. Readings from original research papers. Semester-long project and paper.H. Balakrishnan",EECS,2024
6.5830 Database Systems,"6.5830 Database Systems()(Subject meets with6.5831)Prereq: ((6.1210or6.1220) and (6.1800or6.1810)) or permission of instructorUnits: 3-0-9Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.S. R. Madden",EECS,2024
6.5831 Database Systems,"6.5831 Database Systems()(Subject meets with6.5830)Prereq: ((6.1210or6.1220) and (6.1800or6.1810)) or permission of instructorUnits: 3-0-9Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.S. R. Madden",EECS,2024
6.5840 Distributed Computer Systems Engineering,"6.5840 Distributed Computer Systems Engineering()Prereq:6.1800,6.1810, or permission of instructorUnits: 3-0-9Lecture:TR1-2.30(54-100)+finalAbstractions and implementation techniques for engineering distributed systems: remote procedure call, threads and locking, client/server, peer-to-peer, consistency, fault tolerance, and security. Readings from current literature. Individual laboratory assignments culminate in the construction of a fault-tolerant and scalable network file system. Programming experience with C/C++ required. Enrollment limited.R. MorrisNo textbook information available",EECS,2024
6.5850 Principles of Computer Systems,"6.5850 Principles of Computer Systems()Not offered regularly; consult departmentPrereq: Permission of instructorUnits: 3-0-9Introduction to the basic principles of computer systems with emphasis on the use of rigorous techniques as an aid to understanding and building modern computing systems. Particular attention paid to concurrent and distributed systems. Topics include: specification and verification, concurrent algorithms, synchronization, naming, Networking, replication techniques (including distributed cache management), and principles and algorithms for achieving reliability.M. F. Kaashoek, B. Lampson, N. B. Zeldovich",EECS,2024
6.1903 Introduction to Low-level Programming in C and Assembly,"6.1903 Introduction to Low-level Programming in C and Assembly(); first half of termPrereq:6.100AUnits: 2-2-2Credit cannot also be received for6.1904Ends Mar 21.Lecture:M9.30-11(32-123)Lab:W9.30-12(38-530) orW12-2.30(38-530) orW2.30-5(38-530)Recitation:T9.30-11(45-230) orT11-12.30(45-230) orT1-2.30(45-230) orT2.30-4(2-190) orT9.30-11(32-144) orT11-12.30(32-141) orT1-2.30(32-155) orT2.30-4(36-155)Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.J. D. Steinmeyer, S. Z. Hanono WachmanNo textbook information available",EECS,2024
6.1904 Introduction to Low-level Programming in C and Assembly,"6.1904 Introduction to Low-level Programming in C and Assembly(); second half of termPrereq:6.100AUnits: 2-2-2Credit cannot also be received for6.1903Begins Mar 31.Lecture:M9.30-11(32-123)Lab:W9.30-12(38-530) orW12-2.30(38-530) orW2.30-5(38-530)Recitation:T9.30-11(45-230) orT11-12.30(45-230) orT1-2.30(45-230) orT2.30-4(2-190) orT9.30-11(32-144) orT11-12.30(32-141) orT1-2.30(32-155) orT2.30-4(36-155)Introduction to C and assembly language for students coming from a Python background (6.100A). Studies the C language, focusing on memory and associated topics including pointers, how different data structures are stored in memory, the stack, and the heap in order to build a strong understanding of the constraints involved in manipulating complex data structures in modern computational systems. Studies assembly language to facilitate a firm understanding of how high-level languages are translated to machine-level instructions.J. D. Steinmeyer, S. Z. Hanono WachmanNo textbook information available",EECS,2024
6.1910 Computation Structures,"6.1910 Computation Structures(,)Prereq:Physics II (GIR),6.100A, and (Coreq:6.1903or6.1904); or permission of instructorUnits: 4-0-8Lecture:TR1(32-123)Recitation:WF10(34-302) orWF11(34-302) orWF12(34-302) orWF1(34-302) orWF2(34-302) orWF3(34-302) orWF10(35-308) orWF11(35-308) orWF12(35-308) orWF1(35-308) orWF2(8-205) orWF3(8-205)Provides an introduction to the design of digital systems and computer architecture. Emphasizes expressing all hardware designs in a high-level hardware description language and synthesizing the designs. Topics include combinational and sequential circuits, instruction set abstraction for programmable hardware, single-cycle and pipelined processor implementations, multi-level memory hierarchies, virtual memory, exceptions and I/O, and parallel systems.Fall:S. Hanono WachmanSpring:S. Hanono WachmanNo textbook information available",EECS,2024
6.1920 Constructive Computer Architecture,"6.1920 Constructive Computer Architecture()Prereq:6.1910Units: 3-8-1Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.Staff",EECS,2024
6.5900 Computer System Architecture,"6.5900 Computer System Architecture()Prereq:6.1910Units: 4-0-8Introduction to the principles underlying modern computer architecture. Emphasizes the relationship among technology, hardware organization, and programming systems in the evolution of computer architecture. Topics include pipelined, out-of-order, and speculative execution; caches, virtual memory and exception handling, superscalar, very long instruction word (VLIW), vector, and multithreaded processors; on-chip networks, memory models, synchronization, and cache coherence protocols for multiprocessors.J. Emer",EECS,2024
6.5910 Complex Digital Systems Design,"6.5910 Complex Digital Systems Design()Not offered regularly; consult departmentPrereq:6.1910Units: 5-5-2Introduction to the design and implementation of large-scale digital systems using hardware description languages and high-level synthesis tools in conjunction with standard commercial electronic design automation (EDA) tools. Emphasizes modular and robust designs, reusable modules, correctness by construction, architectural exploration, meeting area and timing constraints, and developing functional field-programmable gate array (FPGA) prototypes. Extensive use of CAD tools in weekly labs serve as preparation for a multi-person design project on multi-million gate FPGAs. Enrollment may be limited.Staff",EECS,2024
6.5920 Parallel Computing,"6.5920 Parallel Computing()Not offered regularly; consult departmentPrereq:6.1910or permission of instructorUnits: 3-0-9Introduction to parallel and multicore computer architecture and programming. Topics include the design and implementation of multicore processors; networking, video, continuum, particle and graph applications for multicores; communication and synchronization algorithms and mechanisms; locality in parallel computations; computational models, including shared memory, streams, message passing, and data parallel; multicore mechanisms for synchronization, cache coherence, and multithreading. Performance evaluation of multicores; compilation and runtime systems for parallel computing. Substantial project required.Staff",EECS,2024
6.5930 Hardware Architecture for Deep Learning,"6.5930 Hardware Architecture for Deep Learning()(Subject meets with6.5931)Prereq:6.1910and (6.3000or6.3900)Units: 3-3-6Lecture:MW1-2.30(54-100)Lab:TBARecitation:F11(32-155)Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.V. Sze, J. EmerNo textbook information available",EECS,2024
6.5931 Hardware Architecture for Deep Learning,"6.5931 Hardware Architecture for Deep Learning()(Subject meets with6.5930)Prereq:6.1910and (6.3000or6.3900)Units: 3-3-6Lecture:MW1-2.30(54-100)Lab:TBARecitation:F11(32-155)Introduction to the design and implementation of hardware architectures for efficient processing of deep learning algorithms and tensor algebra in AI systems. Topics include basics of deep learning, optimization principles for programmable platforms, design principles of accelerator architectures, co-optimization of algorithms and hardware (including sparsity) and use of advanced technologies (including memristors and optical computing). Includes labs involving modeling and analysis of hardware architectures, architecting deep learning inference systems, and an open-ended design project. Students taking graduate version complete additional assignments.V. Sze, J. EmerNo textbook information available",EECS,2024
6.5940 TinyML and Efficient Deep Learning Computing,"6.5940 TinyML and Efficient Deep Learning Computing()Prereq:6.1910and6.3900Units: 3-0-9Introduces efficient deep learning computing techniques that enable powerful deep learning applications on resource-constrained devices. Topics include model compression, pruning, quantization, neural architecture search, distributed training, data/model parallellism, gradient compression, on-device fine-tuning. It also introduces application-specific acceleration techniques for video recognition, point cloud, and generative AI (diffusion model, LLM). Students will get hands-on experience accelerating deep learning applications with an open-ended design project.S. Han",EECS,2024
6.5950 Secure Hardware Design,"6.5950 Secure Hardware Design()(Subject meets with6.5951)Prereq:6.1910Units: 3-0-9URL:https://shd.mit.edu/Lecture:MW1-2.30(E25-111)IntroductionÂ to basic concepts, principles, and implementation issues in the designing of secure hardware systems. Through a mixture of lectures and paper discussions, covers state-of-the-art security attacks and defenses targeting the computer architecture, digital circuits, and physics layers of computerÂ systems. Emphasizes both the conceptual and the practical aspects of security issues in modern hardware systems. Topics include microarchitectural timing side channels, speculative execution attacks, RowHammer, Trusted Execution Environment, physical attacks, hardware support for software security, and verification of digital systems. Students taking graduate version complete additional assignments.M. YanNo textbook information available",EECS,2024
6.5951 Secure Hardware Design,"6.5951 Secure Hardware Design()(Subject meets with6.5950)Prereq:6.1910Units: 3-0-9URL:https://shd.mit.edu/Lecture:MW1-2.30(E25-111)IntroductionÂ to basic concepts, principles, and implementation issues in the designing of secure hardware systems. Through a mixture of lectures and paper discussions, covers state-of-the-art security attacks and defenses targeting the computer architecture, digital circuits, and physics layers of computerÂ systems. Emphasizes both the conceptual and the practical aspects of security issues in modern hardware systems. Topics include microarchitectural timing side channels, speculative execution attacks, RowHammer, Trusted Execution Environment, physical attacks, hardware support for software security, and verification of digital systems. Students taking graduate version complete additional assignments.M. YanNo textbook information available",EECS,2024
18.01 Calculus,"18.01 Calculus(,)Prereq: NoneUnits: 5-0-7Credit cannot also be received for18.01A,CC.1801,ES.1801,ES.181ALecture:TR11,F2(2-135)Recitation:MW10(2-135)+finalDifferentiation and integration of functions of one variable, with applications. Informal treatment of limits and continuity. Differentiation: definition, rules, application to graphing, rates, approximations, and extremum problems. Indefinite integration; separable first-order differential equations. Definite integral; fundamental theorem of calculus. Applications of integration to geometry and science. Elementary functions. Techniques of integration. Polar coordinates. L'Hopital's rule. Improper integrals. Infinite series: geometric, p-harmonic, simple comparison tests, power series for some elementary functions.Fall:P. SeidelSpring:T. RudNo required or recommended textbooks",Mathematics,2024
18.01A Calculus,"18.01A Calculus(); first half of termPrereq: Knowledge of differentiation and elementary integrationUnits: 5-0-7Credit cannot also be received for18.01,CC.1801,ES.1801,ES.181ASix-week review of one-variable calculus, emphasizing material not on the high-school AB syllabus: integration techniques and applications, improper integrals, infinite series, applications to other topics, such as probability and statistics, as time permits. Prerequisites: one year of high-school calculus or the equivalent, with a score of 5 on the AB Calculus test (or the AB portion of the BC test, or an equivalent score on a standard international exam), or equivalent college transfer credit, or a passing grade on the first half of the 18.01 advanced standing exam.D. Jerison",Mathematics,2024
18.02 Calculus,"18.02 Calculus(,)Prereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.022,18.02A,CC.1802,ES.1802,ES.182ALecture:TR11,F2(54-100)Recitation:MW10(2-146) orMW11(2-146) orMW12(2-136) orMW1(2-146) orMW2(2-146)+finalCalculus of several variables. Vector algebra in 3-space, determinants, matrices. Vector-valued functions of one variable, space motion. Scalar functions of several variables: partial differentiation, gradient, optimization techniques. Double integrals and line integrals in the plane; exact differentials and conservative fields; Green's theorem and applications, triple integrals, line and surface integrals in space, Divergence theorem, Stokes' theorem; applications.Fall:D. MaulikSpring:M. KingTextbooks (Spring 2025)",Mathematics,2024
18.02A Calculus,"18.02A Calculus(,,); second half of termPrereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.02,18.022,CC.1802,ES.1802,ES.182AAttend any 18.02 recitation.Lecture:TR11,F2 (BEGINS MAR 31)(54-100)Recitation:TBA+finalFirst half is taught during the last six weeks of the Fall term; covers material in the first half of 18.02 (through double integrals). Second half of 18.02A can be taken either during IAP (daily lectures) or during the second half of the Spring term; it covers the remaining material in 18.02.Fall:J. BushIAP:J. BushSpring:M. KingTextbooks (IAP 2025);Textbooks (Spring 2025)",Mathematics,2024
18.022 Calculus,"18.022 Calculus()Prereq:Calculus I (GIR)Units: 5-0-7Credit cannot also be received for18.02,18.02A,CC.1802,ES.1802,ES.182ACalculus of several variables. Topics as in 18.02 but with more focus on mathematical concepts. Vector algebra, dot product, matrices, determinant. Functions of several variables, continuity, differentiability, derivative. Parametrized curves, arc length, curvature, torsion. Vector fields, gradient, curl, divergence. Multiple integrals, change of variables, line integrals, surface integrals. Stokes' theorem in one, two, and three dimensions.J. Zung",Mathematics,2024
18.03 Differential Equations,"18.03 Differential Equations(,)Prereq: None.Coreq:Calculus II (GIR)Units: 5-0-7Credit cannot also be received forCC.1803,ES.1803Lecture:MWF1(10-250)Recitation:TR9(2-132) orTR10(2-147,26-328) orTR11(2-139,2-131,26-328) orTR12(2-139,2-135,2-131) orTR1(4-163,1-375) orTR2(1-375,2-131) orTR3(2-139)+finalStudy of differential equations, including modeling physical systems. Solution of first-order ODEs by analytical, graphical, and numerical methods. Linear ODEs with constant coefficients. Complex numbers and exponentials. Inhomogeneous equations: polynomial, sinusoidal, and exponential inputs. Oscillations, damping, resonance. Fourier series. Matrices, eigenvalues, eigenvectors, diagonalization. First order linear systems: normal modes, matrix exponentials, variation of parameters. Heat equation, wave equation. Nonlinear autonomous systems: critical point analysis, phase plane diagrams.Fall:H. CohnSpring:B. PoonenNo textbook information available",Mathematics,2024
18.031 System Functions and the Laplace Transform,"18.031 System Functions and the Laplace Transform()Prereq: None.Coreq:18.03Units: 1-0-2 [P/D/F]Studies basic continuous control theory as well as representation of functions in the complex frequency domain. Covers generalized functions, unit impulse response, and convolution; and Laplace transform, system (or transfer) function, and the pole diagram. Includes examples from mechanical and electrical engineering.S. NadimpalliNo required or recommended textbooks",Mathematics,2024
18.032 Differential Equations,18.032 Differential Equations()Prereq: None.Coreq:Calculus II (GIR)Units: 5-0-7Lecture:MWF1(2-142)Recitation:TR11(2-142)+finalCovers much of the same material as 18.03 with more emphasis on theory. The point of view is rigorous and results are proven. Local existence and uniqueness of solutions.A. LawrieNo textbook information available,Mathematics,2024
18.04 Complex Variables with Applications,"18.04 Complex Variables with Applications()Prereq:Calculus II (GIR)and (18.03or18.032)Units: 4-0-8Credit cannot also be received for18.075,18.0751Complex algebra and functions; analyticity; contour integration, Cauchy's theorem; singularities, Taylor and Laurent series; residues, evaluation of integrals; multivalued functions, potential theory in two dimensions; Fourier analysis, Laplace transforms, and partial differential equations.J. Dunkel",Mathematics,2024
18.05 Introduction to Probability and Statistics,"18.05 Introduction to Probability and Statistics()Prereq:Calculus II (GIR)Units: 4-0-8Lecture:TR2.30-4,F4(32-082) orTR1-2.30,F2(32-082)+finalA unified introduction to probability, Bayesian inference, and frequentist statistics. Topics include: combinatorics, random variables, (joint) distributions, covariance, central limit theorem; Bayesian updating, odds, posterior prediction; significance tests, confidence intervals, bootstrapping, regression. Students also develop computational skills and statistical thinking by using R to simulate, analyze, and visualize data; and by exploring privacy, fairness, and causality in contemporary media and research. Flipped subject taught in a Technology Enabled Active Learning (TEAL) classroom to facilitate discussion, group problem solving, and coding studios with ample mentorship.J. BloomNo textbook information available",Mathematics,2024
18.06 Linear Algebra,"18.06 Linear Algebra(,)Prereq:Calculus II (GIR)Units: 4-0-8Credit cannot also be received for6.C06,18.700,18.C06,ES.1806Lecture:MWF10(26-100)Recitation:T9(2-131) orT11(2-136,4-159) orT12(4-159,2-105) orT1(2-132,2-135) orT2(2-132) orT3(2-361) orT10(2-131,2-132)+finalBasic subject on matrix theory and linear algebra, emphasizing topics useful in other disciplines, including systems of equations, vector spaces, determinants, eigenvalues, singular value decomposition, and positive definite matrices. Applications to least-squares approximations, stability of differential equations, networks, Fourier transforms, and Markov processes. Uses linear algebra software. Compared with 18.700, more emphasis on matrix algorithms and many applications.Fall:W. MinicozziSpring:N. SunTextbooks (Spring 2025)",Mathematics,2024
18.C06[J] Linear Algebra and Optimization,"18.C06[J] Linear Algebra and Optimization()(Same subject as6.C06[J])Prereq:Calculus II (GIR)Units: 5-0-7Credit cannot also be received for18.06,18.700,ES.1806Introductory course in linear algebra and optimization, assuming no prior exposure to linear algebra and starting from the basics, including vectors, matrices, eigenvalues, singular values, and least squares. Covers the basics in optimization including convex optimization, linear/quadratic programming, gradient descent, and regularization, building on insights from linear algebra. Explores a variety of applications in science and engineering, where the tools developed give powerful ways to understand complex systems and also extract structure from data.S. Johnson",Mathematics,2024
18.062[J] Mathematics for Computer Science,"18.062[J] Mathematics for Computer Science(,)(Same subject as6.1200[J])Prereq:Calculus I (GIR)Units: 5-0-7Lecture:TR2.30-4(26-100)Recitation:WF10(38-166,36-155) orWF11(38-166,36-155,26-168) orWF12(38-166,36-156,26-168) orWF1(38-166,36-156,35-310) orWF2(38-166,36-156,35-308) orWF3(38-166,36-156)+finalElementary discrete mathematics for science and engineering, with a focus on mathematical tools and proof techniques useful in computer science. Topics include logical notation, sets, relations, elementary graph theory, state machines and invariants, induction and proofs by contradiction, recurrences, asymptotic notation, elementary analysis of algorithms, elementary number theory and cryptography, permutations and combinations, counting tools, and discrete probability.Fall:Z. AbelSpring:Z. AbelNo textbook information available",Mathematics,2024
18.063 Matrix Calculus for Machine Learning and Beyond(New),"18.063 Matrix Calculus for Machine Learning and Beyond(New)(); partial termPrereq:Calculus II (GIR)and18.06Units: 1-0-2 [P/D/F]Covers a coherent approach to matrix calculus, showing techniques that allow the student to think of a matrix holistically, rather than as an array of scalars; generalize and compute derivatives of important matrix factorizations and other complicated-looking operations; and understand how differentiation formulas must be reimagined in large-scale computing. Discusses ""adjoint"" or ""reverse-mode"" differentiation, custom vector-Jacobian products, and how modern automatic differentiation is more computer science than calculus.S. JohnsonNo textbook information available",Mathematics,2024
"18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning","18.065 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning()(Subject meets with18.0651)Prereq:18.06Units: 3-0-9Lecture:TR9.30-11(32-141)Reviews linear algebra with applications to life sciences, finance, engineering, and big data. Covers singular value decomposition, weighted least squares, signal and image processing, principal component analysis, covariance and correlation matrices, directed and undirected graphs, matrix factorizations, neural nets, machine learning, and computations with large matrices.Z. ChenTextbooks (Spring 2025)",Mathematics,2024
"18.0651 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning","18.0651 Matrix Methods in Data Analysis, Signal Processing, and Machine Learning()(Subject meets with18.065)Prereq:18.06Units: 3-0-9Lecture:TR9.30-11(32-141)Reviews linear algebra with applications to life sciences, finance, engineering, and big data. Covers singular value decomposition, weighted least squares, signal and image processing, principal component analysis, covariance and correlation matrices, directed and undirected graphs, matrix factorizations, neural nets, machine learning, and computations with large matrices. Students in Course 18 must register for the undergraduate version, 18.065.StaffNo textbook information available",Mathematics,2024
18.075 Methods for Scientists and Engineers,18.075 Methods for Scientists and Engineers()(Subject meets with18.0751)Prereq:Calculus II (GIR)and18.03Units: 3-0-9Credit cannot also be received for18.04Covers functions of a complex variable; calculus of residues. Includes ordinary differential equations; Bessel and Legendre functions; Sturm-Liouville theory; partial differential equations; heat equation; and wave equations.H. Cheng,Mathematics,2024
18.0751 Methods for Scientists and Engineers,"18.0751 Methods for Scientists and Engineers()(Subject meets with18.075)Prereq:Calculus II (GIR)and18.03Units: 3-0-9Credit cannot also be received for18.04Covers functions of a complex variable; calculus of residues. Includes ordinary differential equations; Bessel and Legendre functions; Sturm-Liouville theory; partial differential equations; heat equation; and wave equations. Students in Courses 6, 8, 12, 18, and 22 must register for undergraduate version, 18.075.H. Cheng",Mathematics,2024
18.085 Computational Science and Engineering I,"18.085 Computational Science and Engineering I(,,)(Subject meets with18.0851)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR1-2.30(4-145)+finalReview of linear algebra, applications to networks, structures, and estimation, finite difference and finite element solution of differential equations, Laplace's equation and potential flow, boundary-value problems, Fourier series, discrete Fourier transform, convolution. Frequent use of MATLAB in a wide range of scientific and engineering applications.Fall:P. ChaoSpring:P. ChaoSummer:StaffTextbooks (Spring 2025)",Mathematics,2024
18.0851 Computational Science and Engineering I,"18.0851 Computational Science and Engineering I(,,)(Subject meets with18.085)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR1-2.30(4-145)+finalReview of linear algebra, applications to networks, structures, and estimation, finite difference and finite element solution of differential equations, Laplace's equation and potential flow, boundary-value problems, Fourier series, discrete Fourier transform, convolution. Frequent use of MATLAB in a wide range of scientific and engineering applications. Students in Course 18 must register for the undergraduate version, 18.085.Fall:D. KouskoulasSummer:StaffNo textbook information available",Mathematics,2024
18.086 Computational Science and Engineering II,"18.086 Computational Science and Engineering II()Not offered regularly; consult department(Subject meets with18.0861)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9URL:http://math.mit.edu/18086/Initial value problems: finite difference methods, accuracy and stability, heat equation, wave equations, conservation laws and shocks, level sets, Navier-Stokes. Solving large systems: elimination with reordering, iterative methods, preconditioning, multigrid, Krylov subspaces, conjugate gradients. Optimization and minimum principles: weighted least squares, constraints, inverse problems, calculus of variations, saddle point problems, linear programming, duality, adjoint methods.Staff",Mathematics,2024
18.0861 Computational Science and Engineering II,"18.0861 Computational Science and Engineering II()Not offered regularly; consult department(Subject meets with18.086)Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Initial value problems: finite difference methods, accuracy and stability, heat equation, wave equations, conservation laws and shocks, level sets, Navier-Stokes. Solving large systems: elimination with reordering, iterative methods, preconditioning, multigrid, Krylov subspaces, conjugate gradients. Optimization and minimum principles: weighted least squares, constraints, inverse problems, calculus of variations, saddle point problems, linear programming, duality, adjoint methods. Students in Course 18 must register for the undergraduate version, 18.086.Staff",Mathematics,2024
18.089 Review of Mathematics,"18.089 Review of Mathematics()Prereq: Permission of instructorUnits: 5-0-7One-week review of one-variable calculus (18.01), followed by concentrated study covering multivariable calculus (18.02), two hours per day for five weeks. Primarily for graduate students in Course 2N. Degree credit allowed only in special circumstances.T. Cummings",Mathematics,2024
18.090 Introduction to Mathematical Reasoning,"18.090 Introduction to Mathematical Reasoning()Prereq: None.Coreq:Calculus II (GIR)Units: 3-0-9Lecture:TR9.30-11(2-142)Focuses on understanding and constructing mathematical arguments. Discusses foundational topics (such as infinite sets, quantifiers, and methods of proof) as well as selected concepts from algebra (permutations, vector spaces, fields) and analysis (sequences of real numbers). Particularly suitable for students desiring additional experience with proofs before going on to more advanced mathematics subjects or subjects in related areas with significant mathematical content.S. DyatlovNo textbook information available",Mathematics,2024
18.091 Introduction to Metric Spaces(New),"18.091 Introduction to Metric Spaces(New)(); partial termPrereq:18.100AUnits: 1-0-2 [P/D/F]Covers metrics, open and closed sets, continuous functions (from a topological perspective), function spaces, completeness, and compactness. Aims to provide more complex concepts and proofs for students who have taken 18.100A as their real analysis subject.S. NadimpalliNo required or recommended textbooks",Mathematics,2024
18.094[J] Teaching College-Level Science and Engineering,"18.094[J] Teaching College-Level Science and Engineering()(Same subject as1.95[J],5.95[J],7.59[J],8.395[J])(Subject meets with2.978)Prereq: NoneUnits: 2-0-2 [P/D/F]Participatory seminar focuses on the knowledge and skills necessary for teaching science and engineering in higher education. Topics include theories of adult learning; course development; promoting active learning, problemsolving, and critical thinking in students; communicating with a diverse student body; using educational technology to further learning; lecturing; creating effective tests and assignments; and assessment and evaluation. Students research and present a relevant topic of particular interest. Appropriate for both novices and those with teaching experience.J. Rankin",Mathematics,2024
18.095 Mathematics Lecture Series,"18.095 Mathematics Lecture Series()Prereq:Calculus I (GIR)Units: 2-0-4 [P/D/F]Ten lectures by mathematics faculty members on interesting topics from both classical and modern mathematics. All lectures accessible to students with calculus background and an interest in mathematics. At each lecture, reading and exercises are assigned. Students prepare these for discussion in a weekly problem session.J. DunkelNo textbook information available",Mathematics,2024
18.098 Internship in Mathematics,"18.098 Internship in Mathematics(,,,)Prereq: Permission of instructorUnits arranged [P/D/F]TBA.Provides academic credit for students pursuing internships to gain practical experience in the applications of mathematical concepts and methods.Fall:T. CummingsIAP:T. CummingsSpring:T. CummingsSummer:T. CummingsNo required or recommended textbooks",Mathematics,2024
18.099 Independent Study,"18.099 Independent Study(,,,)Prereq: Permission of instructorUnits arrangedTBA.Studies (during IAP) or special individual reading (during regular terms). Arranged in consultation with individual faculty members and subject to departmental approval.Â  May not be used to satisfy Mathematics major requirements.Fall:T. CummingsIAP:T. CummingsSpring:T. CummingsSummer:T. CummingsNo required or recommended textbooks",Mathematics,2024
18.1001 Real Analysis,"18.1001 Real Analysis(,)(Subject meets with18.100A)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1002,18.100A,18.100B,18.100P,18.100QLecture:TR1-2.30(4-270)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line. Students in Course 18 must register for undergraduate version 18.100A.Fall:Q. DengSpring:J. ZhuNo textbook information available",Mathematics,2024
18.1002 Real Analysis,"18.1002 Real Analysis(,)(Subject meets with18.100B)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.100A,18.100B,18.100P,18.100QLecture:TR9.30-11(2-190)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. More demanding than 18.100A, for students with more mathematical maturity. Places more emphasis on point-set topology and n-space. Students in Course 18 must register for undergraduate version 18.100B.Fall:R. MelroseSpring:G. FranzNo textbook information available",Mathematics,2024
18.100A Real Analysis,"18.100A Real Analysis(,)(Subject meets with18.1001)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.1002,18.100B,18.100P,18.100QLecture:TR1-2.30(4-270)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line.Fall:T. ChowSpring:J. ZhuNo required or recommended textbooks",Mathematics,2024
18.100B Real Analysis,"18.100B Real Analysis(,)(Subject meets with18.1002)Prereq:Calculus II (GIR)Units: 3-0-9Credit cannot also be received for18.1001,18.1002,18.100A,18.100P,18.100QLecture:TR9.30-11(2-190)+finalCovers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. More demanding than 18.100A, for students with more mathematical maturity. Places more emphasis on point-set topology and n-space.Fall:L. GuthSpring:T. ColdingTextbooks (Spring 2025)",Mathematics,2024
18.100P Real Analysis,"18.100P Real Analysis()Prereq:Calculus II (GIR)Units: 4-0-11Credit cannot also be received for18.1001,18.1002,18.100A,18.100B,18.100QLecture:MW9.30-11 (LIMITED 30)(2-131)Recitation:F11(2-146) orF1(2-151)Covers fundamentals of mathematical analysis: convergence of sequences and series, continuity, differentiability, Riemann integral, sequences and series of functions, uniformity, interchange of limit operations. Shows the utility of abstract concepts and teaches understanding and construction of proofs. Proofs and definitions are less abstract than in 18.100B. Gives applications where possible. Concerned primarily with the real line. Includes instruction and practice in written communication. Enrollment limited.R. MaguireNo required or recommended textbooks",Mathematics,2024
18.100Q Real Analysis,"18.101 Analysis and Manifolds()(Subject meets with18.1011)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduction to the theory of manifolds: vector fields and densities on manifolds, integral calculus in the manifold setting and the manifold version of the divergence theorem. 18.901 helpful but not required.R. Jiang",Mathematics,2024
18.101 Analysis and Manifolds,"18.1011 Analysis and Manifolds()(Subject meets with18.101)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduction to the theory of manifolds: vector fields and densities on manifolds, integral calculus in the manifold setting and the manifold version of the divergence theorem. 18.9011 helpful but not required. Students in Course 18 must register for the undergraduate version, 18.101.Staff",Mathematics,2024
18.1011 Analysis and Manifolds,"18.102 Introduction to Functional Analysis()(Subject meets with18.1021)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Lecture:MW9.30-11(4-237)+finalNormed spaces, completeness, functionals, Hahn-Banach theorem, duality, operators. Lebesgue measure, measurable functions, integrability, completeness of L-p spaces. Hilbert space. Compact, Hilbert-Schmidt and trace class operators. Spectral theorem.C. KehleTextbooks (Spring 2025)",Mathematics,2024
18.102 Introduction to Functional Analysis,"18.1021 Introduction to Functional Analysis()(Subject meets with18.102)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Lecture:MW9.30-11(4-237)+finalNormed spaces, completeness, functionals, Hahn-Banach theorem, duality, operators. Lebesgue measure, measurable functions, integrability, completeness of L-p spaces. Hilbert space. Compact, Hilbert-Schmidt and trace class operators. Spectral theorem. Students in Course 18 must register for the undergraduate version, 18.102.StaffNo textbook information available",Mathematics,2024
18.1021 Introduction to Functional Analysis,"18.103 Fourier Analysis: Theory and Applications()(Subject meets with18.1031)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Roughly half the subject devoted to the theory of the Lebesgue integral with applications to probability, and half to Fourier series and Fourier integrals.Staff",Mathematics,2024
18.103 Fourier Analysis: Theory and Applications,"18.1031 Fourier Analysis: Theory and Applications()(Subject meets with18.103)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Roughly half the subject devoted to the theory of the Lebesgue integral with applications to probability, and half to Fourier series and Fourier integrals. Students in Course 18 must register for the undergraduate version, 18.103.Staff",Mathematics,2024
18.1031 Fourier Analysis: Theory and Applications,"18.104 Seminar in Analysis(,)Prereq:18.100A,18.100B,18.100P, or18.100QUnits: 3-0-9Lecture:MW11-12.30(2-151)Students present and discuss material from books or journals. Topics vary from year to year. Instruction and practice in written and oral communication provided. Enrollment limited.Fall:L. AlonSpring:T. Ozuch-MeerssemanNo required or recommended textbooks",Mathematics,2024
18.104 Seminar in Analysis,"18.112 Functions of a Complex Variable()(Subject meets with18.1121)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Studies the basic properties of analytic functions of one complex variable. Conformal mappings and the Poincare model of non-Euclidean geometry. Cauchy-Goursat theorem and Cauchy integral formula. Taylor and Laurent decompositions. Singularities, residues and computation of integrals. Harmonic functions and Dirichlet's problem for the Laplace equation. The partial fractions decomposition. Infinite series and infinite product expansions. The Gamma function. The Riemann mapping theorem. Elliptic functions.J. Shi",Mathematics,2024
18.112 Functions of a Complex Variable,"18.1121 Functions of a Complex Variable()(Subject meets with18.112)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Studies the basic properties of analytic functions of one complex variable. Conformal mappings and the Poincare model of non-Euclidean geometry. Cauchy-Goursat theorem and Cauchy integral formula. Taylor and Laurent decompositions. Singularities, residues and computation of integrals. Harmonic functions and Dirichlet's problem for the Laplace equation. The partial fractions decomposition. Infinite series and infinite product expansions. The Gamma function. The Riemann mapping theorem. Elliptic functions. Students in Course 18 must register for the undergraduate version, 18.112.Staff",Mathematics,2024
18.1121 Functions of a Complex Variable,"18.116 Riemann Surfaces()Prereq:18.112Units: 3-0-9Riemann surfaces, uniformization, Riemann-Roch Theorem. Theory of elliptic functions and modular forms. Some applications, such as to number theory.Staff",Mathematics,2024
18.116 Riemann Surfaces,"18.117 Topics in Several Complex Variables()Prereq:18.112and18.965Units: 3-0-9Harmonic theory on complex manifolds, Hodge decomposition theorem, Hard Lefschetz theorem. Vanishing theorems. Theory of Stein manifolds. As time permits students also study holomorphic vector bundles on Kahler manifolds.Staff",Mathematics,2024
18.117 Topics in Several Complex Variables,18.118 Topics in Analysis()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2024
18.118 Topics in Analysis,"18.125 Measure Theory and Analysis()Prereq:18.100A,18.100B,18.100P, or18.100QUnits: 3-0-9Provides a rigorous introduction to Lebesgue's theory of measure and integration. Covers material that is essential in analysis, probability theory, and differential geometry.Staff",Mathematics,2024
18.125 Measure Theory and Analysis,18.137 Topics in Geometric Partial Differential Equations()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.T. Colding,Mathematics,2024
18.137 Topics in Geometric Partial Differential Equations,"18.152 Introduction to Partial Differential Equations()(Subject meets with18.1521)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduces three main types of partial differential equations: diffusion, elliptic, and hyperbolic. Includes mathematical tools, real-world examples and applications, such as the Black-Scholes equation, the European options problem, water waves, scalar conservation laws, first order equations and traffic problems.F. Hernandez",Mathematics,2024
18.152 Introduction to Partial Differential Equations,"18.1521 Introduction to Partial Differential Equations()(Subject meets with18.152)Prereq: (18.06,18.700, or18.701) and (18.100A,18.100B,18.100P, or18.100Q)Units: 3-0-9Introduces three main types of partial differential equations: diffusion, elliptic, and hyperbolic. Includes mathematical tools, real-world examples and applications, such as the Black-Scholes equation, the European options problem, water waves, scalar conservation laws, first order equations and traffic problems. Students in Course 18 must register for the undergraduate version, 18.152.Staff",Mathematics,2024
18.1521 Introduction to Partial Differential Equations,"18.155 Differential Analysis I()Prereq:18.102or18.103Units: 3-0-9First part of a two-subject sequence. Review of Lebesgue integration. Lp spaces. Distributions. Fourier transform. Sobolev spaces. Spectral theorem, discrete and continuous spectrum. Homogeneous distributions. Fundamental solutions for elliptic, hyperbolic and parabolic differential operators. Recommended prerequisite: 18.112.A. Logunov",Mathematics,2024
18.155 Differential Analysis I,"18.156 Differential Analysis II()Prereq:18.155Units: 3-0-9Lecture:TR1-2.30(2-142)Second part of a two-subject sequence. Covers variable coefficient elliptic, parabolic and hyperbolic partial differential equations.L. GuthNo required or recommended textbooks",Mathematics,2024
18.156 Differential Analysis II,"18.157 Introduction to Microlocal Analysis()Prereq:18.155Units: 3-0-9The semi-classical theory of partial differential equations. Discussion of Pseudodifferential operators, Fourier integral operators, asymptotic solutions of partial differential equations, and the spectral theory of Schroedinger operators from the semi-classical perspective. Heavy emphasis placed on the symplectic geometric underpinnings of this subject.Staff",Mathematics,2024
18.157 Introduction to Microlocal Analysis,18.158 Topics in Differential Equations()Prereq:18.157Units: 3-0-9Lecture:MW1-2.30(2-147)Topics vary from year to year.A. LogunovNo textbook information available,Mathematics,2024
18.158 Topics in Differential Equations,18.199 Graduate Analysis Seminar()Prereq: Permission of instructorUnits: 3-0-9Studies original papers in differential analysis and differential equations. Intended for first- and second-year graduate students. Permission must be secured in advance.Staff,Mathematics,2024
18.199 Graduate Analysis Seminar,"18.200 Principles of Discrete Applied Mathematics()Prereq: None.Coreq:18.06Units: 4-0-11Credit cannot also be received for18.200ALimited 45.Lecture:MWF2(2-190)Recitation:R10(2-146) orR1(2-146) orR2(2-146)Study of illustrative topics in discrete applied mathematics, including probability theory, information theory, coding theory, secret codes, generating functions, and linear programming. Instruction and practice in written communication provided. Enrollment limited.P. ShorNo required or recommended textbooks",Mathematics,2024
18.200 Principles of Discrete Applied Mathematics,"18.200A Principles of Discrete Applied Mathematics()Prereq: None.Coreq:18.06Units: 3-0-9Credit cannot also be received for18.200Study of illustrative topics in discrete applied mathematics, including probability theory, information theory, coding theory, secret codes, generating functions, and linear programming.Staff",Mathematics,2024
18.200A Principles of Discrete Applied Mathematics,"18.204 Undergraduate Seminar in Discrete Mathematics(,)Prereq: ((6.1200or18.200) and (18.06,18.700, or18.701)) or permission of instructorUnits: 3-0-9Lecture:TR2.30-4 (LIMITED 15 EACH S ..(2-151) orTR2.30-4(4-237,2-147)Seminar in combinatorics, graph theory, and discrete mathematics in general. Participants read and present papers from recent mathematics literature. Instruction and practice in written and oral communication provided. Enrollment limited.Fall:M. DharSpring:M. DharNo textbook information available",Mathematics,2024
18.204 Undergraduate Seminar in Discrete Mathematics,"18.211 Combinatorial Analysis()Prereq:Calculus II (GIR)and (18.06,18.700, or18.701)Units: 3-0-9Combinatorial problems and methods for their solution. Enumeration, generating functions, recurrence relations, construction of bijections. Introduction to graph theory. Prior experience with abstraction and proofs is helpful.M. Simkin",Mathematics,2024
18.211 Combinatorial Analysis,"18.212 Algebraic Combinatorics()Prereq:18.701or18.703Units: 3-0-9Lecture:MWF1(4-237)Applications of algebra to combinatorics. Topics include walks in graphs, the Radon transform, groups acting on posets, Young tableaux, electrical networks.A. PostnikovNo textbook information available",Mathematics,2024
18.212 Algebraic Combinatorics,18.217 Combinatorial Theory()Prereq: Permission of instructorUnits: 3-0-9Content varies from year to year.A. Postnikov,Mathematics,2024
18.217 Combinatorial Theory,18.218 Topics in Combinatorics()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2024
18.218 Topics in Combinatorics,18.219 Seminar in Combinatorics()Not offered regularly; consult departmentPrereq: Permission of instructorUnits: 3-0-9Content varies from year to year. Readings from current research papers in combinatorics. Topics to be chosen and presented by the class.Staff,Mathematics,2024
18.219 Seminar in Combinatorics,"18.225 Graph Theory and Additive Combinatorics()Prereq: ((18.701or18.703) and (18.100A,18.100B,18.100P, or18.100Q)) or permission of instructorUnits: 3-0-9Introduction to extremal graph theory and additive combinatorics. Highlights common themes, such as the dichotomy between structure versus pseudorandomness. Topics include Turan-type problems, Szemeredi's regularity lemma and applications, pseudorandom graphs, spectral graph theory, graph limits, arithmetic progressions (Roth, Szemeredi, Green-Tao), discrete Fourier analysis, Freiman's theorem on sumsets and structure. Discusses current research topics and open problems.Y. Zhao",Mathematics,2024
18.225 Graph Theory and Additive Combinatorics,"18.226 Probabilistic Methods in Combinatorics()Prereq: (18.211,18.600, and (18.100A,18.100B,18.100P, or18.100Q)) or permission of instructorUnits: 3-0-9Introduction to the probabilistic method, a fundamental and powerful technique in combinatorics and theoretical computer science. Focuses on methodology as well as combinatorial applications. Suitable for students with strong interest and background in mathematical problem solving. Topics include linearity of expectations, alteration, second moment, Lovasz local lemma, correlation inequalities, Janson inequalities, concentration inequalities, entropy method.S. Luo",Mathematics,2024
18.226 Probabilistic Methods in Combinatorics,"18.300 Principles of Continuum Applied Mathematics()Prereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR2.30-4(4-145)Covers fundamental concepts in continuous applied mathematics. Applications from traffic flow, fluids, elasticity, granular flows, etc. Also covers continuum limit; conservation laws, quasi-equilibrium; kinematic waves; characteristics, simple waves, shocks; diffusion (linear and nonlinear); numerical solution of wave equations; finite differences, consistency, stability; discrete and fast Fourier transforms; spectral methods; transforms and series (Fourier, Laplace). Additional topics may include sonic booms, Mach cone, caustics, lattices, dispersion and group velocity. Uses MATLAB computing environment.L. DemanetNo textbook information available",Mathematics,2024
18.300 Principles of Continuum Applied Mathematics,"18.303 Linear Partial Differential Equations: Analysis and Numerics()Prereq:18.06or18.700Units: 3-0-9Provides students with the basic analytical and computational tools of linear partial differential equations (PDEs) for practical applications in science and engineering, including heat/diffusion, wave, and Poisson equations. Analytics emphasize the viewpoint of linear algebra and the analogy with finite matrix problems. Studies operator adjoints and eigenproblems, series solutions, Green's functions, and separation of variables. Numerics focus on finite-difference and finite-element techniques to reduce PDEs to matrix problems, including stability and convergence analysis and implicit/explicit timestepping. Some programming required for homework and final project.Staff",Mathematics,2024
18.303 Linear Partial Differential Equations: Analysis and Numerics,"18.305 Advanced Analytic Methods in Science and Engineering()Prereq:18.04,18.075, or18.112Units: 3-0-9Covers expansion around singular points: the WKB method on ordinary and partial differential equations; the method of stationary phase and the saddle point method; the two-scale method and the method of renormalized perturbation; singular perturbation and boundary-layer techniques; WKB method on partial differential equations.Staff",Mathematics,2024
18.305 Advanced Analytic Methods in Science and Engineering,"18.306 Advanced Partial Differential Equations with Applications()Prereq: (18.03or18.032) and (18.04,18.075, or18.112)Units: 3-0-9Concepts and techniques for partial differential equations, especially nonlinear. Diffusion, dispersion and other phenomena. Initial and boundary value problems. Normal mode analysis, Green's functions, and transforms. Conservation laws, kinematic waves, hyperbolic equations, characteristics shocks, simple waves. Geometrical optics, caustics. Free-boundary problems. Dimensional analysis. Singular perturbation, boundary layers, homogenization. Variational methods. Solitons. Applications from fluid dynamics, materials science, optics, traffic flow, etc.Staff",Mathematics,2024
18.306 Advanced Partial Differential Equations with Applications,18.327 Topics in Applied Mathematics()Prereq: Permission of instructorUnits: 3-0-9Topics vary from year to year.Staff,Mathematics,2024
18.327 Topics in Applied Mathematics,"18.330 Introduction to Numerical Analysis()Not offered regularly; consult departmentPrereq:Calculus II (GIR)and (18.03or18.032)Units: 3-0-9Basic techniques for the efficient numerical solution of problems in science and engineering. Root finding, interpolation, approximation of functions, integration, differential equations, direct and iterative methods in linear algebra. Knowledge of programming in a language such as MATLAB, Python, or Julia is helpful.Staff",Mathematics,2024
18.330 Introduction to Numerical Analysis,"18.335[J] Introduction to Numerical Methods()(Same subject as6.7310[J])Prereq:18.06,18.700, or18.701Units: 3-0-9Lecture:MW9.30-11(2-190)Advanced introduction to numerical analysis: accuracy and efficiency of numerical algorithms. In-depth coverage of sparse-matrix/iterative and dense-matrix algorithms in numerical linear algebra (for linear systems and eigenproblems). Floating-point arithmetic, backwards error analysis, conditioning, and stability. Other computational topics (e.g., numerical integration or nonlinear optimization) may also be surveyed. Final project involves some programming.S. ChenTextbooks (Spring 2025)",Mathematics,2024
18.335[J] Introduction to Numerical Methods,"18.336[J] Fast Methods for Partial Differential and Integral Equations(,)(Same subject as6.7340[J])Prereq:6.7300,16.920,18.085,18.335, or permission of instructorUnits: 3-0-9Unified introduction to the theory and practice of modern, near linear-time, numerical methods for large-scale partial-differential and integral equations. Topics include preconditioned iterative methods; generalized Fast Fourier Transform and other butterfly-based methods; multiresolution approaches, such as multigrid algorithms and hierarchical low-rank matrix decompositions; and low and high frequency Fast Multipole Methods. Example applications include aircraft design, cardiovascular system modeling, electronic structure computation, and tomographic imaging.Staff",Mathematics,2024
18.336[J] Fast Methods for Partial Differential and Integral Equations,"18.337[J] Parallel Computing and Scientific Machine Learning()(Same subject as6.7320[J])Prereq:18.06,18.700, or18.701Units: 3-0-9Introduction to scientific machine learning with an emphasis on developing scalable differentiable programs. Covers scientific computing topics (numerical differential equations, dense and sparse linear algebra, Fourier transformations, parallelization of large-scale scientific simulation) simultaneously with modern data science (machine learning, deep neural networks, automatic differentiation), focusing on the emerging techniques at the connection between these areas, such as neural differential equations and physics-informed deep learning. Provides direct experience with the modern realities of optimizing code performance for supercomputers, GPUs, and multicores in a high-level language.Staff",Mathematics,2024
18.337[J] Parallel Computing and Scientific Machine Learning,"18.338 Eigenvalues of Random Matrices()Prereq:18.701or permission of instructorUnits: 3-0-9Covers the modern main results of random matrix theory as it is currently applied in engineering and science. Topics include matrix calculus for finite and infinite matrices (e.g., Wigner's semi-circle and Marcenko-Pastur laws), free probability, random graphs, combinatorial methods, matrix statistics, stochastic operators, passage to the continuum limit, moment methods, and compressed sensing. Knowledge of Julia helpful, but not required.A. Edelman",Mathematics,2024
18.338 Eigenvalues of Random Matrices,"18.352[J] Nonlinear Dynamics: The Natural Environment()Not offered regularly; consult department(Same subject as12.009[J])Prereq:Calculus II (GIR)andPhysics I (GIR);Coreq:18.03Units: 3-0-9Analyzes cooperative processes that shape the natural environment, now and in the geologic past. Emphasizes the development of theoretical models that relate the physical and biological worlds, the comparison of theory to observational data, and associated mathematical methods. Topics include carbon cycle dynamics; ecosystem structure, stability and complexity; mass extinctions; biosphere-geosphere coevolution; and climate change. Employs techniques such as stability analysis; scaling; null model construction; time series and network analysis.D. H. Rothman",Mathematics,2024
18.352[J] Nonlinear Dynamics: The Natural Environment,"18.353[J] Nonlinear Dynamics: Chaos()(Same subject as2.050[J],12.006[J])Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Introduction to nonlinear dynamics and chaos in dissipative systems. Forced and parametric oscillators. Phase space. Periodic, quasiperiodic, and aperiodic flows. Sensitivity to initial conditions and strange attractors. Lorenz attractor. Period doubling, intermittency, and quasiperiodicity. Scaling and universality. Analysis of experimental data: Fourier transforms, Poincare sections, fractal dimension, and Lyapunov exponents. Applications to mechanical systems, fluid dynamics, physics, geophysics, and chemistry. See 12.207J/18.354J for Nonlinear Dynamics: Continuum Systems.R. Rosales",Mathematics,2024
18.353[J] Nonlinear Dynamics: Chaos,"18.354[J] Nonlinear Dynamics: Continuum Systems()(Same subject as1.062[J],12.207[J])(Subject meets with18.3541)Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR9.30-11(2-143)General mathematical principles of continuum systems. From microscopic to macroscopic descriptions in the form of linear or nonlinear (partial) differential equations. Exact solutions, dimensional analysis, calculus of variations and singular perturbation methods. Stability, waves and pattern formation in continuum systems. Subject matter illustrated using natural fluid and solid systems found, for example, in geophysics and biology.N. DerrNo textbook information available",Mathematics,2024
18.354[J] Nonlinear Dynamics: Continuum Systems,"18.3541 Nonlinear Dynamics: Continuum Systems()(Subject meets with1.062[J],12.207[J],18.354[J])Prereq:Physics II (GIR)and (18.03or18.032)Units: 3-0-9Lecture:TR9.30-11(2-143)General mathematical principles of continuum systems. From microscopic to macroscopic descriptions in the form of linear or nonlinear (partial) differential equations. Exact solutions, dimensional analysis, calculus of variations and singular perturbation methods. Stability, waves and pattern formation in continuum systems. Subject matter illustrated using natural fluid and solid systems found, for example, in geophysics and biology. Students in Courses 1, 12, and 18 must register for undergraduate version, 18.354.B. PrimkulovNo textbook information available",Mathematics,2024
18.3541 Nonlinear Dynamics: Continuum Systems,"18.355 Fluid Mechanics()Prereq:2.25,12.800, or18.354Units: 3-0-9Topics include the development of Navier-Stokes equations, inviscid flows, boundary layers, lubrication theory, Stokes flows, and surface tension. Fundamental concepts illustrated through problems drawn from a variety of areas, including geophysics, biology, and the dynamics of sport. Particular emphasis on the interplay between dimensional analysis, scaling arguments, and theory. Includes classroom and laboratory demonstrations.Staff",Mathematics,2024
18.355 Fluid Mechanics,"18.357 Interfacial Phenomena()Prereq:2.25,12.800,18.354,18.355, or permission of instructorUnits: 3-0-9Lecture:MW3-4.30(2-151)Fluid systems dominated by the influence of interfacial tension. Elucidates the roles of curvature pressure and Marangoni stress in a variety of hydrodynamic settings. Particular attention to drops and bubbles, soap films and minimal surfaces, wetting phenomena, water-repellency, surfactants, Marangoni flows, capillary origami and contact line dynamics. Theoretical developments are accompanied by classroom demonstrations. Highlights the role of surface tension in biology.J. BushNo textbook information available",Mathematics,2024
18.357 Interfacial Phenomena,"18.358[J] Nonlinear Dynamics and Turbulence()(Same subject as1.686[J],2.033[J])(Subject meets with1.068)Prereq:1.060AUnits: 3-2-7Reviews theoretical notions of nonlinear dynamics, instabilities, and waves with applications in fluid dynamics. Discusses hydrodynamic instabilities leading to flow destabilization and transition to turbulence. Focuses on physical turbulence and mixing from homogeneous isotropic turbulence. Also covers topics such as rotating and stratified flows as they arise in the environment, wave-turbulence, and point source turbulent flows. Laboratory activities integrate theoretical concepts covered in lectures and problem sets. Students taking graduate version complete additional assignments.L. Bourouiba",Mathematics,2024
18.358[J] Nonlinear Dynamics and Turbulence,"18.367 Waves and Imaging()Prereq: Permission of instructorUnits: 3-0-9The mathematics of inverse problems involving waves, with examples taken from reflection seismology, synthetic aperture radar, and computerized tomography. Suitable for graduate students from all departments who have affinities with applied mathematics. Topics include acoustic, elastic, electromagnetic wave equations; geometrical optics; scattering series and inversion; migration and backprojection; adjoint-state methods; Radon and curvilinear Radon transforms; microlocal analysis of imaging; optimization, regularization, and sparse regression.L. Demanet",Mathematics,2024
18.367 Waves and Imaging,"18.369[J] Mathematical Methods in Nanophotonics()(Same subject as8.315[J])Prereq:8.07,18.303, or permission of instructorUnits: 3-0-9High-level approaches to understanding complex optical media, structured on the scale of the wavelength, that are not generally analytically soluable. The basis for understanding optical phenomena such as photonic crystals and band gaps, anomalous diffraction, mechanisms for optical confinement, optical fibers (new and old), nonlinearities, and integrated optical devices. Methods covered include linear algebra and eigensystems for Maxwell's equations, symmetry groups and representation theory, Bloch's theorem, numerical eigensolver methods, time and frequency-domain computation, perturbation theory, and coupled-mode theories.S. G. Johnson",Mathematics,2024
18.369[J] Mathematical Methods in Nanophotonics,"18.376[J] Wave Propagation()Not offered regularly; consult department(Same subject as1.138[J],2.062[J])Prereq:2.003and18.075Units: 3-0-9Theoretical concepts and analysis of wave problems in science and engineering with examples chosen from elasticity, acoustics, geophysics, hydrodynamics, blood flow, nondestructive evaluation, and other applications.  Progressive waves, group velocity and dispersion, energy density and transport. Reflection, refraction and transmission of plane waves by an interface. Mode conversion in elastic waves. Rayleigh waves. Waves due to a moving load. Scattering by a two-dimensional obstacle.  Reciprocity theorems. Parabolic approximation. Waves on the sea surface. Capillary-gravity waves. Wave resistance. Radiation of surface waves. Internal waves in stratified fluids.  Waves in rotating media.  Waves in random media.T. R. Akylas, R. R. Rosales",Mathematics,2024
18.376[J] Wave Propagation,"18.377[J] Nonlinear Dynamics and Waves()(Same subject as1.685[J],2.034[J])Prereq: Permission of instructorUnits: 3-0-9A unified treatment of nonlinear oscillations and wave phenomena with applications to mechanical, optical, geophysical, fluid, electrical and flow-structure interaction problems. Nonlinear free and forced vibrations; nonlinear resonances; self-excited oscillations; lock-in phenomena.  Nonlinear dispersive and nondispersive waves; resonant wave interactions; propagation of wave pulses and nonlinear Schrodinger equation.  Nonlinear long waves and breaking; theory of characteristics; the Korteweg-de Vries equation; solitons and solitary wave interactions.  Stability of shear flows.  Some topics and applications may vary from year to year.Staff",Mathematics,2024
18.377[J] Nonlinear Dynamics and Waves,"18.384 Undergraduate Seminar in Physical Mathematics()Prereq:12.006,18.300,18.354, or permission of instructorUnits: 3-0-9Covers the mathematical modeling of physical systems, with emphasis on the reading and presentation of papers. Addresses a broad range of topics, with particular focus on macroscopic physics and continuum systems: fluid dynamics, solid mechanics, and biophysics. Instruction and practice in written and oral communication provided. Enrollment limited.N. Derr",Mathematics,2024
18.384 Undergraduate Seminar in Physical Mathematics,"18.385[J] Nonlinear Dynamics and Chaos()(Same subject as2.036[J])Prereq:18.03or18.032Units: 3-0-9Introduction to the theory of nonlinear dynamical systems with applications from science and engineering. Local and global existence of solutions, dependence on initial data and parameters. Elementary bifurcations, normal forms. Phase plane, limit cycles, relaxation oscillations, Poincare-Bendixson theory. Floquet theory. Poincare maps. Averaging. Near-equilibrium dynamics. Synchronization. Introduction to chaos. Universality. Strange attractors. Lorenz and Rossler systems. Hamiltonian dynamics and KAM theory. Uses MATLAB computing environment.Staff",Mathematics,2024
18.385[J] Nonlinear Dynamics and Chaos,18.397 Mathematical Methods in Physics()Not offered regularly; consult departmentPrereq:18.745or some familiarity with Lie theoryUnits: 3-0-9Content varies from year to year. Recent developments in quantum field theory require mathematical techniques not usually covered in standard graduate subjects.Staff,Mathematics,2024
18.397 Mathematical Methods in Physics,"18.400[J] Computability and Complexity Theory()(Same subject as6.1400[J])Prereq: (6.1200and6.1210) or permission of instructorUnits: 4-0-8Lecture:TR2.30-4(37-212)Recitation:F11(4-257) orF1(24-121)+finalMathematical introduction to the theory of computing. Rigorously explores what kinds of tasks can be efficiently solved with computers by way of finite automata, circuits, Turing machines, and communication complexity, introducing students to some major open problems in mathematics. Builds skills in classifying computational tasks in terms of their difficulty. Discusses other fundamental issues in computing, including the Halting Problem, the Church-Turing Thesis, the P versus NP problem, and the power of randomness.R. WilliamsTextbooks (Spring 2025)",Mathematics,2024
18.400[J] Computability and Complexity Theory,"18.404 Theory of Computation()(Subject meets with6.5400[J],18.4041[J])Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems.M. Sipser",Mathematics,2024
18.404 Theory of Computation,"18.4041[J] Theory of Computation()(Same subject as6.5400[J])(Subject meets with18.404)Prereq:6.1200or18.200Units: 4-0-8A more extensive and theoretical treatment of the material in 6.1400J/18.400J, emphasizing computability and computational complexity theory. Regular and context-free languages. Decidable and undecidable problems, reducibility, recursive function theory. Time and space measures on computation, completeness, hierarchy theorems, inherently complex problems, oracles, probabilistic computation, and interactive proof systems. Students in Course 18 must register for the undergraduate version, 18.404.M. Sipser",Mathematics,2024
18.4041[J] Theory of Computation,"18.405[J] Advanced Complexity Theory()(Same subject as6.5410[J])Prereq:18.404Units: 3-0-9Lecture:TR11-12.30(4-163)Current research topics in computational complexity theory. Nondeterministic, alternating, probabilistic, and parallel computation models. Boolean circuits. Complexity classes and complete sets. The polynomial-time hierarchy. Interactive proof systems. Relativization. Definitions of randomness. Pseudo-randomness and derandomizations. Interactive proof systems and probabilistically checkable proofs.D. MinzerNo textbook information available",Mathematics,2024
18.405[J] Advanced Complexity Theory,18.408 Topics in Theoretical Computer Science()Prereq: Permission of instructorUnits: 3-0-9Study of areas of current interest in theoretical computer science. Topics vary from term to term.J. Kelner,Mathematics,2024
18.408 Topics in Theoretical Computer Science,"18.410[J] Design and Analysis of Algorithms(,)(Same subject as6.1220[J])Prereq:6.1200and6.1210Units: 4-0-8Lecture:TR11-12.30(32-123)Recitation:F9(36-112) orF10(36-112) orF11(36-112) orF12(36-112) orF1(36-112) orF2(36-112) orF3(36-112) orF10(24-121) orF11(4-265) orF12(4-265) orF1(4-265) orF2(24-121) orF3(24-121)+finalTechniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.Fall:S. RaghuramanSpring:S. RaghuramanTextbooks (Spring 2025)",Mathematics,2024
18.410[J] Design and Analysis of Algorithms,"18.413 Introduction to Computational Molecular Biology()(Subject meets with18.417)Prereq:6.1210or permission of instructorUnits: 3-0-9Introduction to computational molecular biology with a focus on the basic computational algorithms used to solve problems in practice. Covers classical techniques in the field for solving problems such as genome sequencing, assembly, and search; detecting genome rearrangements; constructing evolutionary trees; analyzing mass spectrometry data; connecting gene expression to cellular function; and machine learning for drug discovery. Prior knowledge of biology is not required. Particular emphasis on problem solving, collaborative learning, theoretical analysis, and practical implementation of algorithms. Students taking graduate version complete additional and more complex assignments.B. Berger",Mathematics,2024
18.413 Introduction to Computational Molecular Biology,"18.415[J] Advanced Algorithms()(Same subject as6.5210[J])Prereq:6.1220and (6.1200,6.3700, or18.600)Units: 5-0-7First-year graduate subject in algorithms. Emphasizes fundamental algorithms and advanced methods of algorithmic design, analysis, and implementation. Surveys a variety of computational models and the algorithms for them. Data structures, network flows, linear programming, computational geometry, approximation algorithms, online algorithms, parallel algorithms, external memory, streaming algorithms.D. Karger",Mathematics,2024
18.415[J] Advanced Algorithms,"18.416[J] Randomized Algorithms()(Same subject as6.5220[J])Prereq: (6.1200or6.3700) and (6.1220or6.5210)Units: 5-0-7Studies how randomization can be used to make algorithms simpler and more efficient via random sampling, random selection of witnesses, symmetry breaking, and Markov chains. Models of randomized computation. Data structures: hash tables, and skip lists. Graph algorithms: minimum spanning trees, shortest paths, and minimum cuts. Geometric algorithms: convex hulls, linear programming in fixed or arbitrary dimension. Approximate counting; parallel algorithms; online algorithms; derandomization techniques; and tools for probabilistic analysis of algorithms.Staff",Mathematics,2024
18.416[J] Randomized Algorithms,"18.417 Introduction to Computational Molecular Biology()(Subject meets with18.413)Prereq:6.1210or permission of instructorUnits: 3-0-9Introduction to computational molecular biology with a focus on the basic computational algorithms used to solve problems in practice. Covers classical techniques in the field for solving problems such as genome sequencing, assembly, and search; detecting genome rearrangements; constructing evolutionary trees; analyzing mass spectrometry data; connecting gene expression to cellular function; and machine learning for drug discovery. Prior knowledge of biology is not required. Particular emphasis on problem solving, collaborative learning, theoretical analysis, and practical implementation of algorithms. Students taking graduate version complete additional and more complex assignments.B. Berger",Mathematics,2024
18.417 Introduction to Computational Molecular Biology,"18.418[J] Topics in Computational Molecular Biology()(Same subject asHST.504[J])Prereq:6.8701,18.417, or permission of instructorUnits: 3-0-9Covers current research topics in computational molecular biology. Recent research papers presented from leading conferences such as the International Conference on Computational Molecular Biology (RECOMB) and the Conference on Intelligent Systems for Molecular Biology (ISMB). Topics include original research (both theoretical and experimental) in comparative genomics, sequence and structure analysis, molecular evolution, proteomics, gene expression, transcriptional regulation, biological networks, drug discovery, and privacy. Recent research by course participants also covered. Participants will be expected to present individual projects to the class.B. Berger",Mathematics,2024
18.418[J] Topics in Computational Molecular Biology,"18.424 Seminar in Information Theory()Prereq: (6.3700,18.05, or18.600) and (18.06,18.700, or18.701)Units: 3-0-9Considers various topics in information theory, including data compression, Shannon's Theorems, and error-correcting codes. Students present and discuss the subject matter. Instruction and practice in written and oral communication provided. Enrollment limited.J. Gaitonde",Mathematics,2024
18.424 Seminar in Information Theory,"18.425[J] Foundations of Cryptography()(Same subject as6.5620[J])Prereq:6.1220,6.1400, or18.4041Units: 3-0-9A rigorous introduction to modern cryptography. Emphasis on the fundamental cryptographic primitives such as public-key encryption, digital signatures, and pseudo-random number generation, as well as advanced cryptographic primitives such as zero-knowledge proofs, homomorphic encryption, and secure multiparty computation.Staff",Mathematics,2024
18.425[J] Foundations of Cryptography,18.434 Seminar in Theoretical Computer Science()Prereq:6.1220Units: 3-0-9Topics vary from year to year. Students present and discuss the subject matter. Instruction and practice in written and oral communication provided. Enrollment limited.D. Minzer,Mathematics,2024
18.434 Seminar in Theoretical Computer Science,"18.435[J] Quantum Computation()(Same subject as2.111[J],6.6410[J],8.370[J])Prereq:8.05,18.06,18.700,18.701, or18.C06Units: 3-0-9Provides an introduction to the theory and practice of quantum computation. Topics covered: physics of information processing; quantum algorithms including the factoring algorithm and Grover's search algorithm; quantum error correction; quantum communication and cryptography. Knowledge of quantum mechanics helpful but not required.P. Shor",Mathematics,2024
18.435[J] Quantum Computation,"18.436[J] Quantum Information Science()(Same subject as6.6420[J],8.371[J])Prereq:18.435Units: 3-0-9Lecture:MW9.30-11(4-163)Examines quantum computation and quantum information. Topics include quantum circuits, the quantum Fourier transform and search algorithms, the quantum operations formalism, quantum error correction, Calderbank-Shor-Steane and stabilizer codes, fault tolerant quantum computation, quantum data compression, quantum entanglement, capacity of quantum channels, and quantum cryptography and the proof of its security. Prior knowledge of quantum mechanics required.I. ChuangTextbooks (Spring 2025)",Mathematics,2024
18.436[J] Quantum Information Science,"18.437[J] Distributed Algorithms()(Same subject as6.5250[J])Prereq:6.1220Units: 3-0-9Design and analysis of algorithms, emphasizing those suitable for use in distributed networks. Covers various topics includingÂ distributed graph algorithms, locality constraints,Â bandwidth limitations and communication complexity,Â process synchronization, allocation of computational resources, fault tolerance, and asynchrony. No background in distributed systems required.Staff",Mathematics,2024
18.437[J] Distributed Algorithms,"18.453 Combinatorial Optimization()(Subject meets with18.4531)Prereq:18.06,18.700, or18.701Units: 3-0-9Thorough treatment of linear programming and combinatorial optimization. Topics include matching theory, network flow, matroid optimization, and how to deal with NP-hard optimization problems. Prior exposure to discrete mathematics (such as 18.200) helpful.Staff",Mathematics,2024
18.453 Combinatorial Optimization,"18.4531 Combinatorial Optimization()(Subject meets with18.453)Prereq:18.06,18.700, or18.701Units: 3-0-9Thorough treatment of linear programming and combinatorial optimization. Topics include matching theory, network flow, matroid optimization, and how to deal with NP-hard optimization problems. Prior exposure to discrete mathematics (such as 18.200) helpful. Students in Course 18 must register for the undergraduate version, 18.453.Staff",Mathematics,2024
18.4531 Combinatorial Optimization,"18.455 Advanced Combinatorial Optimization()Prereq:18.453or permission of instructorUnits: 3-0-9Advanced treatment of combinatorial optimization with an emphasis on combinatorial aspects. Non-bipartite matchings, submodular functions, matroid intersection/union, matroid matching, submodular flows, multicommodity flows, packing and connectivity problems, and other recent developments.M. X. Goemans",Mathematics,2024
18.455 Advanced Combinatorial Optimization,"18.456[J] Algebraic Techniques and Semidefinite Optimization()(Same subject as6.7230[J])Prereq:6.7210or15.093Units: 3-0-9Theory and computational techniques for optimization problems involving polynomial equations and inequalities with particular, emphasis on the connections with semidefinite optimization. Develops algebraic and numerical approaches of general applicability, with a view towards methods that simultaneously incorporate both elements, stressing convexity-based ideas, complexity results, and efficient implementations. Examples from several engineering areas, in particular systems and control applications. Topics include semidefinite programming, resultants/discriminants, hyperbolic polynomials, Groebner bases, quantifier elimination, and sum of squares.Staff",Mathematics,2024
